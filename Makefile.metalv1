.PHONY: all pull fetch patch generate clean codegen mod docs move-other patch-post fmt test stage

include Makefile

PACKAGE_NAME=metalv1
CODE_DIR=services/${PACKAGE_NAME}
CONFIG_DIR=config/services/${PACKAGE_NAME}
SPEC_BASE_URL:=https://api.equinix.com/metal/v1/api-docs
SPEC_ROOT_FILE:=openapi3.yaml
SPEC_BASE_DIR=spec/services/${PACKAGE_NAME}
SPEC_FETCHED_DIR=${SPEC_BASE_DIR}/oas3.fetched
SPEC_PATCH_DIR=${SPEC_BASE_DIR}/patches
SPEC_PATCHED_DIR=${SPEC_BASE_DIR}/oas3.patched

OPENAPI_GENERATOR=${CRI} run --rm -u ${CURRENT_UID}:${CURRENT_GID} -v $(CURDIR):/local ${OPENAPI_IMAGE}
SPEC_FETCHER=${CRI} run --rm -u ${CURRENT_UID}:${CURRENT_GID} -v $(CURDIR):/workdir --entrypoint sh mikefarah/yq:4.30.8 script/download_spec.sh
GOLANGCI_LINT=golangci-lint

all: pull fetch patch generate stage

generate: clean codegen mod move-other patch-post fmt test

pull:
	${CRI} pull ${OPENAPI_IMAGE}

fetch:
	${SPEC_FETCHER} ${SPEC_BASE_URL} ${SPEC_FETCHED_DIR} ${SPEC_ROOT_FILE}

patch:
	rm -rf ${SPEC_PATCHED_DIR}
	cp -r ${SPEC_FETCHED_DIR} ${SPEC_PATCHED_DIR}

	for diff in $(shell set -x; find ${SPEC_PATCH_DIR} -name '*.patch' | sort -n); do \
		patch --no-backup-if-mismatch -N -t -p1 -i $$diff; \
	done

patch-post:
	# patch is idempotent, always starting with the generated files
	for diff in $(shell find patches/post -name \*.patch | sort -n); do \
		patch --no-backup-if-mismatch -N -t -p1 -i $$diff; \
	done

clean:
	rm -rf $(PACKAGE_PREFIX)

codegen:
	${OPENAPI_GENERATOR} generate -g go \
		--package-name ${PACKAGE_NAME} \
		--http-user-agent "${GIT_REPO}/${PACKAGE_VERSION}" \
		-p packageVersion=${PACKAGE_VERSION} \
		--git-user-id ${GIT_ORG} \
		--git-repo-id ${GIT_REPO}/services/${PACKAGE_NAME} \
		-c /local/${CONFIG_DIR}/openapi-generator.json \
		-o /local/${CODE_DIR} \
		-i /local/${SPEC_PATCHED_DIR}/${SPEC_ROOT_FILE}

validate:
	${OPENAPI_GENERATOR} validate \
		--recommend \
		-i /local/${SPEC_PATCHED_DIR}

test:
	go test -v ./...

move-other:
	rm -rf api .travis.yml git_push.sh

lint:
	@$(GOLANGCI_LINT) run -v --no-config --fast=false --fix --disable-all --enable goimports $(PACKAGE_PREFIX)

fmt:
	go run mvdan.cc/gofumpt@v0.3.1 -l -w .

stage:
	test -d .git && git add --intent-to-add API.md docs ${PACKAGE_PREFIX} go.mod go.sum
