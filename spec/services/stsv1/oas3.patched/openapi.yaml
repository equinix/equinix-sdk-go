openapi: 3.1.0
x-id:
  - reitit.openapi/default
info:
  title: Equinix Security Token Service
  description: >-
    Exchange ID tokens for Equinix access tokens according to managed trust
    relationships.
  version: 1.0.0
  termsOfService: 'https://www.equinix.com/about/legal/terms'
  contact:
    name: Equinix API Support
    url: 'https://docs.equinix.com/api-support.htm'
  license:
    name: Equinix Inc
    url: 'https://developer.equinix.com/agreement'
servers:
  - url: 'https://sts.eqix.equinix.com'
tags:
  - name: use
    description: Operations for normal users of this service
  - name: srv
    description: Cross-cutting operations for other services
  - name: ops
    description: These operations are to be used only by operators of this service
x-tagGroups:
  - name: Aspect
    tags:
      - use
      - srv
      - ops
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PageSize:
      description: >-
        When paging through results, this is an integer indicating the maximum
        number of results to return. Note, it is
          possible for fewer results to be returned even when the end of the result set has not been reached.
      type: integer
      minimum: 1
    IssuerUri:
      description: An OIDC Issuer URI
      type: string
      pattern: >-
        ^https://[a-zA-Z0-9-.]+(:[1-9][0-9]{0,4})?((?:[-a-zA-Z0-9$_.+!*'(),/]|%[0-9a-fA-F]{2})+)?$
    ResourceRev:
      description: >-
        An opaque string that represents the revision of a given resource. Each
        time the resource is updated, this value
          changes.
      type: string
      pattern: .*
    ProviderStatus:
      description: |-
        * "ENABLED": the provider is trusted, and token exchange is enabled
          * "SUSPENDED": token exchange for ID tokens from this provider is currently disabled
      type: string
      enum:
        - ENABLED
        - SUSPENDED
    UpdatedBy:
      description: >-
        A string indicating the principal who last invoked an operation to
        update the resource.
      type: string
      pattern: .*
    CreatedBy:
      description: >-
        A string indicating the principal who invoked an operation to create the
        resource.
      type: string
      pattern: .*
    LastResourceRev:
      description: >-
        An opaque string that represents the expected revision of a given
        resource. This is provided when a resource is
          updatd so that if a concurrent update has occured since the resource was read, then the collision will be detected.
      type: string
      pattern: .*
    ServiceId:
      description: >-
        Fully qualified, universally unique id of a service. Starts with the
        NamespaceId. Formatted like
          "service:&lt;namespace&gt;/&lt;service&gt;".
      type: string
      pattern: '^service:[a-zA-Z][a-zA-Z0-9]{0,49}/[a-zA-Z][a-zA-Z0-9]{0,49}$'
    OIDCProvider:
      description: >-
        Represents a trust relationship with an OpenID Connect Identity
        Provider.
      type: object
      properties:
        idpId:
          $ref: '#/components/schemas/IdentityProviderId'
        updatedAt:
          $ref: '#/components/schemas/UpdatedAt'
        updatedBy:
          $ref: '#/components/schemas/UpdatedBy'
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
        rev:
          $ref: '#/components/schemas/ResourceRev'
        createdBy:
          $ref: '#/components/schemas/CreatedBy'
        issuerLocation:
          description: The OIDC issuer location URL.
          type: string
        name:
          description: A human-friendly name for the identity provider.
          type: string
          minLength: 2
          maxLength: 100
        jwksRetrievedAt:
          description: 'Timestamp string formatted like: "2025-02-13T17:10:00.864707507Z".'
          type: string
        jwks:
          description: >-
            TEMPORARY: In the future, the STS will retrieve the provider's JWKS
            via standard OIDC Discovery mechanisms, and this will not be an
            input parameter!.
          type: object
          properties:
            keys:
              type: array
              items:
                type: object
                properties: {}
          required:
            - keys
          additionalProperties: false
        status:
          $ref: '#/components/schemas/ProviderStatus'
        issuerUri:
          description: >-
            The value of the `iss` claim as returned by this provider. Must be
            unique within the root project.
          $ref: '#/components/schemas/IssuerUri'
        trustedClientIds:
          description: >-
            List of OAuth 2.0 client ids for this provider that are permitted to
            exchange ID tokens for access tokens. The value of the `aud` claim
            in an ID token is checked against this list during token exchange.
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 100
          minItems: 0
          maxItems: 10
        groupMembershipClaim:
          description: >-
            Name of the claim in the ID tokens provided by this OIDC issuer
            whose value the STS should interpret as containing a user's group
            memberships, for authorization purposes. The value of the group
            membership claim in an ID token must be an array of strings, where
            each string is a unique, non-reassignable identifier for a group.
            When this property is not set, the STS does not interpret any claim
            from this provider as a group membership claim.
          type: string
          minLength: 2
          maxLength: 100
      required:
        - name
        - trustedClientIds
        - idpId
        - issuerUri
        - issuerLocation
        - jwks
        - status
        - jwksRetrievedAt
        - createdBy
        - createdAt
        - rev
      additionalProperties: false
    IdentityProviderId:
      description: Uniquely identifies a trusted Identity Provider within a root project.
      type: string
      pattern: '^idp:[a-zA-Z](?![^:]*-$)(?![^:]*--)[a-zA-Z0-9-]{0,49}$'
    ProjectId:
      description: Globally unique identifier of a project.
      type: string
      pattern: '^project:[0-9a-zA-Z](?![^:]*-$)(?![^:]*--)[0-9a-zA-Z-]{0,35}$'
    ClientId:
      description: An OAuth 2.0 client id for an EaaS service.
      type: string
      pattern: '[a-zA-Z0-9]+'
    AccessPolicyId:
      description: Uniquely identifies an access policy within a project.
      type: string
      pattern: '^accesspolicy:[a-zA-Z](?![^:]*-$)(?![^:]*--)[a-zA-Z0-9-]{0,49}$'
    Ern:
      description: >-
        Equinix resource name, a universally unique identifier for a resource
        across all clouds, regions, and
          services. Formatted as
          "ern:&lt;cloudId&gt;:&lt;serviceId&gt;:&lt;regionId&gt;:&lt;projectId&gt;:&lt;resourceType&gt;:&lt;resourceId&gt;".
      type: string
      pattern: >-
        ^ern:(?<cloud>[^:]{1,50}):(?<service>[^:/]{1,50}/[^:/]{1,50}):(?<region>[^:]{1,50}):(?<project>[^:]{1,36}):(?<resourcetype>[^:]{1,50}):(?<resource>[^:]{1,50})$
    CreatedAt:
      description: >-
        A string timestamp indicating when the resource was created. Formatted
        like: "2025-02-12T17:24:19.033772087Z"
      type: string
      pattern: .*
    ClientRegistration:
      type: object
      properties:
        serviceId:
          $ref: '#/components/schemas/ServiceId'
        serviceAccessPolicyId:
          $ref: '#/components/schemas/AccessPolicyId'
        createdBy:
          $ref: '#/components/schemas/CreatedBy'
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
        updatedBy:
          $ref: '#/components/schemas/UpdatedBy'
        updatedAt:
          $ref: '#/components/schemas/UpdatedAt'
        clientId:
          $ref: '#/components/schemas/ClientId'
      required:
        - serviceId
        - serviceAccessPolicyId
        - createdBy
        - createdAt
        - clientId
      additionalProperties: false
    UpdatedAt:
      description: >-
        A string timestamp indicating when the resource was last updated.
        Formatted like: "2025-02-12T17:24:19.033772087Z"
      type: string
      pattern: .*
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            errorCode:
              type: string
          required:
            - errorCode
      required:
        - error
    PageToken:
      description: >-
        When paging through results, the PageToken is an opaque indicator that
        identifies a page.
      type: string
      pattern: .*
    NextPageToken:
      description: >-
        When paging through results, the NextPageToken indicates what page to
        read next. It is obtained from the previous
          call.
      type: string
      pattern: .*
security:
  - bearerAuth: []
paths:
  /ops/createOidcProvider:
    post:
      summary: /ops/createOidcProvider
      tags:
        - ops
      description: >-
        Allows an operator to register an OIDC provider for the project
        identified by `projectId`. This creates a trust
          relationship between the project and the OIDC provider. This allows bootstrapping in which the operator creates an
          initial trusted OIDC provider for users to access their projects. Access control is coarse-grained.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: A human-friendly name for the identity provider.
                  type: string
                  minLength: 2
                  maxLength: 100
                trustedClientIds:
                  description: >-
                    List of OAuth 2.0 client ids for this provider that are
                    permitted to exchange ID tokens for access tokens. The value
                    of the `aud` claim in an ID token is checked against this
                    list during token exchange.
                  type: array
                  items:
                    type: string
                    minLength: 2
                    maxLength: 100
                  minItems: 0
                  maxItems: 10
                groupMembershipClaim:
                  description: >-
                    Name of the claim in the ID tokens provided by this OIDC
                    issuer whose value the STS should interpret as containing a
                    user's group memberships, for authorization purposes. The
                    value of the group membership claim in an ID token must be
                    an array of strings, where each string is a unique,
                    non-reassignable identifier for a group. When this property
                    is not set, the STS does not interpret any claim from this
                    provider as a group membership claim.
                  type: string
                  minLength: 2
                  maxLength: 100
                issuerUri:
                  description: >-
                    The value of the `iss` claim as returned by this provider.
                    Must be unique within the root project.
                  $ref: '#/components/schemas/IssuerUri'
                issuerLocation:
                  description: The OIDC issuer location URL.
                  type: string
                jwks:
                  description: >-
                    TEMPORARY: In the future, the STS will retrieve the
                    provider's JWKS via standard OIDC Discovery mechanisms, and
                    this will not be an input parameter!.
                  type: object
                  properties:
                    keys:
                      type: array
                      items:
                        type: object
                        properties: {}
                  required:
                    - keys
                  additionalProperties: false
                idpPrefix:
                  type: string
                  pattern: '^[a-zA-Z](?![^:]*-$)(?![^:]*--)[a-zA-Z0-9-]{0,33}$'
                projectId:
                  $ref: '#/components/schemas/ProjectId'
              required:
                - name
                - trustedClientIds
                - issuerUri
                - issuerLocation
                - jwks
                - idpPrefix
                - projectId
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns the OIDC provider that was created. The `idpId` field is the
            unique identifier for this provider.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/OIDCProvider'
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ops/listOidcProviders:
    post:
      summary: /ops/listOidcProviders
      tags:
        - ops
      description: >-
        Allows an operator to list all of the OIDC providers that are trusted by
        a given `projectId`. Access control is
          coarse-grained.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  $ref: '#/components/schemas/ProjectId'
              required:
                - projectId
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns a list of OIDC providers that are trusted by the specified
            project. The `idpId` field is the unique identifier for each
            provider.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/OIDCProvider'
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /srv/getServiceIdToken:
    post:
      summary: /srv/getServiceIdToken
      tags:
        - srv
      description: >-
        Request an OIDC ID token that identifies the service in the context of a
        specific project, and
          with one or more audiences as the intended recipients. This action may *only* be used by service
          principals. Its purpose is to enable OIDC-based federated access to 3rd party systems
          on behalf of the owners of a specific project.

          On success, the returned ID token is valid for 5 minutes. Its `sub` claim has the form

            principal:{serviceId}:{projectId}

          and its `aud` claim is equal to the supplied `audiences` value.

          The service and project id values include their prefixes, so a principal might look like this:

            principal:service:equinix/ecns:project:abec24ac-759f-47da-8823-72f2b0122e75

          Access control is based on the service that corresponds to the principal in the auth token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  description: >-
                    id of the project that provides the context for the work
                    that the service is intending to perform in whatever system
                    the ID token will be used to obtain access to.The intent is
                    that the owner of this project is also the owner of the
                    resources in the third-party system to be accessed, and that
                    authorization in that system has been pre-arranged by the
                    project owner.
                  $ref: '#/components/schemas/ProjectId'
                audiences:
                  description: >-
                    array of case-sensitive audiences to include in the `aud`
                    claim of the ID token
                  type: array
                  items:
                    type: string
                    minLength: 1
                    maxLength: 255
                  minItems: 1
                  maxItems: 5
              required:
                - projectId
                - audiences
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns an OIDC ID token that identifies the service in the context
            of a specific project, and with one or more audiences as the
            intended recipients. The ID token is valid for 5 minutes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /srv/listClientRegistrations:
    post:
      summary: /srv/listClientRegistrations
      tags:
        - srv
      description: >-
        Allows a service developer to page through the clients that are
        registered for a given service. The service is
          identified by either the `serviceId` or `serviceErn` parameters. If the `serviceId` parameter is used then the service
          must be owned by the same project that owns the access policy being used to invoke this operation. The clients listed
          are those which can use the OAuth client credentials flow to obtain access tokens. Access control is based on the
          service for which a client is being registered.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pageToken:
                  $ref: '#/components/schemas/PageToken'
                pageSize:
                  default: 100
                  $ref: '#/components/schemas/PageSize'
                serviceId:
                  $ref: '#/components/schemas/ServiceId'
                serviceErn:
                  $ref: '#/components/schemas/Ern'
              required:
                - pageSize
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns a list of client registrations for the specified service.
            The `list` field contains the client registrations, and the
            `nextPageToken` field can be used to retrieve the next page of
            results.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          $ref: '#/components/schemas/ClientRegistration'
                      nextPageToken:
                        $ref: '#/components/schemas/NextPageToken'
                    required:
                      - list
                    additionalProperties: false
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /srv/registerClient:
    post:
      summary: /srv/registerClient
      tags:
        - srv
      description: >-
        Allows a service developer to register a new client for a given service.
        The service is identified by either the
          `serviceId` or `serviceErn` parameters. If the `serviceId` parameter is used then the service must be owned by the
          same project that owns the access policy being used to invoke this operation. Registering a client enables caller to
          use the OAuth client credentials flow to obtain an access token. Access control is based on the service for which a
          client is being registered.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tokenEndpointAuthMethod:
                  default: client_secret_basic
                  const: client_secret_basic
                grantTypes:
                  type: array
                  items:
                    const: client_credentials
                  uniqueItems: true
                responseTypes:
                  type: array
                  items:
                    const: token
                  uniqueItems: true
                serviceAccessPolicyId:
                  $ref: '#/components/schemas/AccessPolicyId'
                serviceId:
                  $ref: '#/components/schemas/ServiceId'
                serviceErn:
                  $ref: '#/components/schemas/Ern'
              required:
                - tokenEndpointAuthMethod
                - grantTypes
                - responseTypes
                - serviceAccessPolicyId
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns the client registration that was created. The `clientId` is
            the unique identifier for this client, and the `clientSecret` is the
            secret that should be used to authenticate the client.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      clientId:
                        $ref: '#/components/schemas/ClientId'
                      clientSecret:
                        type: string
                      clientSecretExpiresAt:
                        type: integer
                    required:
                      - clientId
                      - clientSecret
                      - clientSecretExpiresAt
                    additionalProperties: false
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /use/createOidcProvider:
    post:
      summary: /use/createOidcProvider
      tags:
        - use
      description: >-
        Allows a user to register a new OIDC provider for a root project. The
        OIDC provider is registered in the project
          which owns the access policy being used. The `idpPrefix` is used to create a unique `idpId` for this usage of the OIDC
          provider within the root project. The `idpPrefix` cannot be the same as any existing, suspended or non-suspended, OIDC
          provider records for this root project. This operation creates a trust relationship between the root project and the
          OIDC provider such that identity tokens from the OIDC provider will be accessed for token exchange. Access control is
          coarse-grained.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: A human-friendly name for the identity provider.
                  type: string
                  minLength: 2
                  maxLength: 100
                trustedClientIds:
                  description: >-
                    List of OAuth 2.0 client ids for this provider that are
                    permitted to exchange ID tokens for access tokens. The value
                    of the `aud` claim in an ID token is checked against this
                    list during token exchange.
                  type: array
                  items:
                    type: string
                    minLength: 2
                    maxLength: 100
                  minItems: 0
                  maxItems: 10
                groupMembershipClaim:
                  description: >-
                    Name of the claim in the ID tokens provided by this OIDC
                    issuer whose value the STS should interpret as containing a
                    user's group memberships, for authorization purposes. The
                    value of the group membership claim in an ID token must be
                    an array of strings, where each string is a unique,
                    non-reassignable identifier for a group. When this property
                    is not set, the STS does not interpret any claim from this
                    provider as a group membership claim.
                  type: string
                  minLength: 2
                  maxLength: 100
                issuerLocation:
                  description: The OIDC issuer location URL.
                  type: string
                idpPrefix:
                  type: string
                  pattern: '^[a-zA-Z](?![^:]*-$)(?![^:]*--)[a-zA-Z0-9-]{0,33}$'
              required:
                - name
                - trustedClientIds
                - issuerLocation
                - idpPrefix
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns the OIDC provider that was created. The `idpId` field is the
            unique identifier for this provider.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/OIDCProvider'
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /use/deleteOidcProvider:
    post:
      summary: /use/deleteOidcProvider
      tags:
        - use
      description: >-
        Allows a user to permanently remove the trust relationship for an OIDC
        provider in a root project. This operation
          cannot be reversed. This operation causes the `idpId` of the OIDC provider to be permanently disabled for this root
          project. Even if `createOidcProvider` is used to register the same OIDC provider again it will be assigned a unique
          `idpId` within the root project. This operation applies for the project which owns the access policy being
          used. Access control is coarse-grained.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idpId:
                  $ref: '#/components/schemas/IdentityProviderId'
              required:
                - idpId
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns a null result indicating that the OIDC provider was
            successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: 'null'
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /use/listOidcProviders:
    post:
      summary: /use/listOidcProviders
      tags:
        - use
      description: >-
        Allows a user to list all of the OIDC providers which are defined for a
        root project and which are not
          suspended. This operation applies for the project which owns the access policy being used. Access control is
          coarse-grained.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns a list of OIDC providers that are trusted by the root
            project. The `idpId` field is the unique identifier for each
            provider.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/OIDCProvider'
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /use/listSuspendedOidcProviders:
    post:
      summary: /use/listSuspendedOidcProviders
      tags:
        - use
      description: >-
        Allows a user to list all of the suspended OIDC providers which are
        defined for a root project. This operation
          applies for the project which owns the access policy being used. Access control is coarse-grained.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns a list of suspended OIDC providers that are defined for the
            root project. The `idpId` field is the unique identifier for each
            provider.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/OIDCProvider'
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /use/patchOidcProvider:
    post:
      summary: /use/patchOidcProvider
      tags:
        - use
      description: >-
        Modify specific property values of an OIDCProvider, leaving the rest
        with their current values.
          Optional properties (e.g. groupMembershipClaims) may be unset by assigning them the value
          `{"$unset": true}`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: A human-friendly name for the identity provider.
                  type: string
                  minLength: 2
                  maxLength: 100
                trustedClientIds:
                  description: >-
                    List of OAuth 2.0 client ids for this provider that are
                    permitted to exchange ID tokens for access tokens. The value
                    of the `aud` claim in an ID token is checked against this
                    list during token exchange.
                  type: array
                  items:
                    type: string
                    minLength: 2
                    maxLength: 100
                  minItems: 0
                  maxItems: 10
                groupMembershipClaim:
                  description: >-
                    Name of the claim in the ID tokens provided by this OIDC
                    issuer whose value the STS should interpret as containing a
                    user's group memberships, for authorization purposes. The
                    value of the group membership claim in an ID token must be
                    an array of strings, where each string is a unique,
                    non-reassignable identifier for a group. When this property
                    is not set, the STS does not interpret any claim from this
                    provider as a group membership claim.
                  oneOf:
                    - type: object
                      properties:
                        $unset:
                          const: true
                      required:
                        - $unset
                      additionalProperties: false
                    - type: string
                      minLength: 2
                      maxLength: 100
                idpId:
                  $ref: '#/components/schemas/IdentityProviderId'
                lastRev:
                  $ref: '#/components/schemas/LastResourceRev'
              required:
                - idpId
                - lastRev
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns the OIDC provider that was modified. The `idpId` field is
            the unique identifier for this provider.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/OIDCProvider'
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /use/resumeOidcProvider:
    post:
      summary: /use/resumeOidcProvider
      tags:
        - use
      description: >-
        Allows a user to restore the trust relationship for an OIDC provider in
        a root project. This operation applies for
          the project which owns the access policy being used. Access control is coarse-grained.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idpId:
                  $ref: '#/components/schemas/IdentityProviderId'
              required:
                - idpId
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns a null result indicating that the OIDC provider was
            successfully resumed. The `idpId` field is the unique identifier for
            this provider.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: 'null'
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /use/suspendOidcProvider:
    post:
      summary: /use/suspendOidcProvider
      tags:
        - use
      description: >-
        Allows a user to indicate that an OIDC provider is no longer trusted in
        a root project. This operation applies for
          the project which owns the access policy being used. This operation can be reversed via `resumeOidcProvider`. This
          operation provides a reversible way to turn off token exchange for identity tokens from an OIDC provider. Access
          control is coarse-grained.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idpId:
                  $ref: '#/components/schemas/IdentityProviderId'
              required:
                - idpId
              additionalProperties: false
      responses:
        '200':
          description: >-
            Returns a null result indicating that the OIDC provider was
            successfully suspended. The `idpId` field is the unique identifier
            for this provider.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: 'null'
                required:
                  - result
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /use/token:
    post:
      description: >-
        An OAuth 2.0 token endpoint supporting RFC 8693 token exchange, used to
        exchange an OIDC ID token issued by a trusted OIDC provider to a trusted
        client for an access token that can be used access other Equinix product
        APIs.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              description: >
                An OAuth 2.0 token exchange request body. 

                * `resource` must be the ERN of an access policy granted to the
                caller.
              properties:
                grant_type:
                  type: string
                  enum:
                    - client_credentials
                    - 'urn:ietf:params:oauth:grant-type:token-exchange'
                scope:
                  type: string
                subject_token:
                  type: string
                subject_token_type:
                  type: string
                  enum:
                    - 'urn:ietf:params:oauth:token-type:id_token'
              required:
                - grant_type
      responses:
        '200':
          description: >-
            Returns an access token that can be used to access other Equinix
            product APIs. The `access_token` field contains the token, and the
            `token_type` field indicates the type of token returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  issued_token_type:
                    type: string
                    enum:
                      - 'urn:ietf:params:oauth:token-type:access_token'
                  token_type:
                    type: string
                    enum:
                      - Bearer
                  expires_in:
                    type: number
                required:
                  - access_token
                  - issued_token_type
                  - token_type
                  - expires_in
        '400':
          description: >-
            The request was invalid. This could be due to a missing required
            parameter, an invalid value, or a conflict with an existing
            resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
                required:
                  - error
