/*
Smart Hands

Request cage assistance, custom installation and equipment troubleshooting.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smarthandsv1

import (
	"encoding/json"
	"fmt"
)

// checks if the PatchCableRemovalRequestServiceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchCableRemovalRequestServiceDetails{}

// PatchCableRemovalRequestServiceDetails struct for PatchCableRemovalRequestServiceDetails
type PatchCableRemovalRequestServiceDetails struct {
	CrossConnects        []CrossConnectRemoval `json:"crossConnects"`
	AdditionalProperties map[string]interface{}
}

type _PatchCableRemovalRequestServiceDetails PatchCableRemovalRequestServiceDetails

// NewPatchCableRemovalRequestServiceDetails instantiates a new PatchCableRemovalRequestServiceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchCableRemovalRequestServiceDetails(crossConnects []CrossConnectRemoval) *PatchCableRemovalRequestServiceDetails {
	this := PatchCableRemovalRequestServiceDetails{}
	this.CrossConnects = crossConnects
	return &this
}

// NewPatchCableRemovalRequestServiceDetailsWithDefaults instantiates a new PatchCableRemovalRequestServiceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchCableRemovalRequestServiceDetailsWithDefaults() *PatchCableRemovalRequestServiceDetails {
	this := PatchCableRemovalRequestServiceDetails{}
	return &this
}

// GetCrossConnects returns the CrossConnects field value
func (o *PatchCableRemovalRequestServiceDetails) GetCrossConnects() []CrossConnectRemoval {
	if o == nil {
		var ret []CrossConnectRemoval
		return ret
	}

	return o.CrossConnects
}

// GetCrossConnectsOk returns a tuple with the CrossConnects field value
// and a boolean to check if the value has been set.
func (o *PatchCableRemovalRequestServiceDetails) GetCrossConnectsOk() ([]CrossConnectRemoval, bool) {
	if o == nil {
		return nil, false
	}
	return o.CrossConnects, true
}

// SetCrossConnects sets field value
func (o *PatchCableRemovalRequestServiceDetails) SetCrossConnects(v []CrossConnectRemoval) {
	o.CrossConnects = v
}

func (o PatchCableRemovalRequestServiceDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchCableRemovalRequestServiceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["crossConnects"] = o.CrossConnects

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchCableRemovalRequestServiceDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"crossConnects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchCableRemovalRequestServiceDetails := _PatchCableRemovalRequestServiceDetails{}

	err = json.Unmarshal(data, &varPatchCableRemovalRequestServiceDetails)

	if err != nil {
		return err
	}

	*o = PatchCableRemovalRequestServiceDetails(varPatchCableRemovalRequestServiceDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "crossConnects")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchCableRemovalRequestServiceDetails struct {
	value *PatchCableRemovalRequestServiceDetails
	isSet bool
}

func (v NullablePatchCableRemovalRequestServiceDetails) Get() *PatchCableRemovalRequestServiceDetails {
	return v.value
}

func (v *NullablePatchCableRemovalRequestServiceDetails) Set(val *PatchCableRemovalRequestServiceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchCableRemovalRequestServiceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchCableRemovalRequestServiceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchCableRemovalRequestServiceDetails(val *PatchCableRemovalRequestServiceDetails) *NullablePatchCableRemovalRequestServiceDetails {
	return &NullablePatchCableRemovalRequestServiceDetails{value: val, isSet: true}
}

func (v NullablePatchCableRemovalRequestServiceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchCableRemovalRequestServiceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
