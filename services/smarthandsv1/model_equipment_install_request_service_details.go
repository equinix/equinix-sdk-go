/*
Smart Hands

Request cage assistance, custom installation and equipment troubleshooting.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smarthandsv1

import (
	"encoding/json"
	"fmt"
)

// checks if the EquipmentInstallRequestServiceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EquipmentInstallRequestServiceDetails{}

// EquipmentInstallRequestServiceDetails struct for EquipmentInstallRequestServiceDetails
type EquipmentInstallRequestServiceDetails struct {
	// Device Location
	DeviceLocation string `json:"deviceLocation"`
	// Elevation drawing attached?
	ElevationDrawingAttached bool `json:"elevationDrawingAttached"`
	// Installation Point
	InstallationPoint string `json:"installationPoint"`
	// Installed Equipment Photo Required?
	InstalledEquipmentPhotoRequired bool `json:"installedEquipmentPhotoRequired"`
	// Mount hardware included?
	MountHardwareIncluded bool `json:"mountHardwareIncluded"`
	// Patch Devices?
	PatchDevices bool `json:"patchDevices"`
	// Patching info
	PatchingInfo *string `json:"patchingInfo,omitempty"`
	// Power it on?
	PowerItOn bool `json:"powerItOn"`
	// This flag is only applicable to Submarine Cable IBXs
	NeedSupportFromASubmarineCableStationEngineer *bool `json:"needSupportFromASubmarineCableStationEngineer,omitempty"`
	// Enter any additional details that will help our technicians execute your request. You may also attach your scope of work as a document if you exceed the character limit in this field.
	ScopeOfWork          string `json:"scopeOfWork"`
	AdditionalProperties map[string]interface{}
}

type _EquipmentInstallRequestServiceDetails EquipmentInstallRequestServiceDetails

// NewEquipmentInstallRequestServiceDetails instantiates a new EquipmentInstallRequestServiceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEquipmentInstallRequestServiceDetails(deviceLocation string, elevationDrawingAttached bool, installationPoint string, installedEquipmentPhotoRequired bool, mountHardwareIncluded bool, patchDevices bool, powerItOn bool, scopeOfWork string) *EquipmentInstallRequestServiceDetails {
	this := EquipmentInstallRequestServiceDetails{}
	this.DeviceLocation = deviceLocation
	this.ElevationDrawingAttached = elevationDrawingAttached
	this.InstallationPoint = installationPoint
	this.InstalledEquipmentPhotoRequired = installedEquipmentPhotoRequired
	this.MountHardwareIncluded = mountHardwareIncluded
	this.PatchDevices = patchDevices
	this.PowerItOn = powerItOn
	this.ScopeOfWork = scopeOfWork
	return &this
}

// NewEquipmentInstallRequestServiceDetailsWithDefaults instantiates a new EquipmentInstallRequestServiceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEquipmentInstallRequestServiceDetailsWithDefaults() *EquipmentInstallRequestServiceDetails {
	this := EquipmentInstallRequestServiceDetails{}
	return &this
}

// GetDeviceLocation returns the DeviceLocation field value
func (o *EquipmentInstallRequestServiceDetails) GetDeviceLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceLocation
}

// GetDeviceLocationOk returns a tuple with the DeviceLocation field value
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetDeviceLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceLocation, true
}

// SetDeviceLocation sets field value
func (o *EquipmentInstallRequestServiceDetails) SetDeviceLocation(v string) {
	o.DeviceLocation = v
}

// GetElevationDrawingAttached returns the ElevationDrawingAttached field value
func (o *EquipmentInstallRequestServiceDetails) GetElevationDrawingAttached() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ElevationDrawingAttached
}

// GetElevationDrawingAttachedOk returns a tuple with the ElevationDrawingAttached field value
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetElevationDrawingAttachedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ElevationDrawingAttached, true
}

// SetElevationDrawingAttached sets field value
func (o *EquipmentInstallRequestServiceDetails) SetElevationDrawingAttached(v bool) {
	o.ElevationDrawingAttached = v
}

// GetInstallationPoint returns the InstallationPoint field value
func (o *EquipmentInstallRequestServiceDetails) GetInstallationPoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstallationPoint
}

// GetInstallationPointOk returns a tuple with the InstallationPoint field value
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetInstallationPointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstallationPoint, true
}

// SetInstallationPoint sets field value
func (o *EquipmentInstallRequestServiceDetails) SetInstallationPoint(v string) {
	o.InstallationPoint = v
}

// GetInstalledEquipmentPhotoRequired returns the InstalledEquipmentPhotoRequired field value
func (o *EquipmentInstallRequestServiceDetails) GetInstalledEquipmentPhotoRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.InstalledEquipmentPhotoRequired
}

// GetInstalledEquipmentPhotoRequiredOk returns a tuple with the InstalledEquipmentPhotoRequired field value
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetInstalledEquipmentPhotoRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstalledEquipmentPhotoRequired, true
}

// SetInstalledEquipmentPhotoRequired sets field value
func (o *EquipmentInstallRequestServiceDetails) SetInstalledEquipmentPhotoRequired(v bool) {
	o.InstalledEquipmentPhotoRequired = v
}

// GetMountHardwareIncluded returns the MountHardwareIncluded field value
func (o *EquipmentInstallRequestServiceDetails) GetMountHardwareIncluded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MountHardwareIncluded
}

// GetMountHardwareIncludedOk returns a tuple with the MountHardwareIncluded field value
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetMountHardwareIncludedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MountHardwareIncluded, true
}

// SetMountHardwareIncluded sets field value
func (o *EquipmentInstallRequestServiceDetails) SetMountHardwareIncluded(v bool) {
	o.MountHardwareIncluded = v
}

// GetPatchDevices returns the PatchDevices field value
func (o *EquipmentInstallRequestServiceDetails) GetPatchDevices() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PatchDevices
}

// GetPatchDevicesOk returns a tuple with the PatchDevices field value
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetPatchDevicesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PatchDevices, true
}

// SetPatchDevices sets field value
func (o *EquipmentInstallRequestServiceDetails) SetPatchDevices(v bool) {
	o.PatchDevices = v
}

// GetPatchingInfo returns the PatchingInfo field value if set, zero value otherwise.
func (o *EquipmentInstallRequestServiceDetails) GetPatchingInfo() string {
	if o == nil || IsNil(o.PatchingInfo) {
		var ret string
		return ret
	}
	return *o.PatchingInfo
}

// GetPatchingInfoOk returns a tuple with the PatchingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetPatchingInfoOk() (*string, bool) {
	if o == nil || IsNil(o.PatchingInfo) {
		return nil, false
	}
	return o.PatchingInfo, true
}

// HasPatchingInfo returns a boolean if a field has been set.
func (o *EquipmentInstallRequestServiceDetails) HasPatchingInfo() bool {
	if o != nil && !IsNil(o.PatchingInfo) {
		return true
	}

	return false
}

// SetPatchingInfo gets a reference to the given string and assigns it to the PatchingInfo field.
func (o *EquipmentInstallRequestServiceDetails) SetPatchingInfo(v string) {
	o.PatchingInfo = &v
}

// GetPowerItOn returns the PowerItOn field value
func (o *EquipmentInstallRequestServiceDetails) GetPowerItOn() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PowerItOn
}

// GetPowerItOnOk returns a tuple with the PowerItOn field value
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetPowerItOnOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PowerItOn, true
}

// SetPowerItOn sets field value
func (o *EquipmentInstallRequestServiceDetails) SetPowerItOn(v bool) {
	o.PowerItOn = v
}

// GetNeedSupportFromASubmarineCableStationEngineer returns the NeedSupportFromASubmarineCableStationEngineer field value if set, zero value otherwise.
func (o *EquipmentInstallRequestServiceDetails) GetNeedSupportFromASubmarineCableStationEngineer() bool {
	if o == nil || IsNil(o.NeedSupportFromASubmarineCableStationEngineer) {
		var ret bool
		return ret
	}
	return *o.NeedSupportFromASubmarineCableStationEngineer
}

// GetNeedSupportFromASubmarineCableStationEngineerOk returns a tuple with the NeedSupportFromASubmarineCableStationEngineer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetNeedSupportFromASubmarineCableStationEngineerOk() (*bool, bool) {
	if o == nil || IsNil(o.NeedSupportFromASubmarineCableStationEngineer) {
		return nil, false
	}
	return o.NeedSupportFromASubmarineCableStationEngineer, true
}

// HasNeedSupportFromASubmarineCableStationEngineer returns a boolean if a field has been set.
func (o *EquipmentInstallRequestServiceDetails) HasNeedSupportFromASubmarineCableStationEngineer() bool {
	if o != nil && !IsNil(o.NeedSupportFromASubmarineCableStationEngineer) {
		return true
	}

	return false
}

// SetNeedSupportFromASubmarineCableStationEngineer gets a reference to the given bool and assigns it to the NeedSupportFromASubmarineCableStationEngineer field.
func (o *EquipmentInstallRequestServiceDetails) SetNeedSupportFromASubmarineCableStationEngineer(v bool) {
	o.NeedSupportFromASubmarineCableStationEngineer = &v
}

// GetScopeOfWork returns the ScopeOfWork field value
func (o *EquipmentInstallRequestServiceDetails) GetScopeOfWork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScopeOfWork
}

// GetScopeOfWorkOk returns a tuple with the ScopeOfWork field value
// and a boolean to check if the value has been set.
func (o *EquipmentInstallRequestServiceDetails) GetScopeOfWorkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScopeOfWork, true
}

// SetScopeOfWork sets field value
func (o *EquipmentInstallRequestServiceDetails) SetScopeOfWork(v string) {
	o.ScopeOfWork = v
}

func (o EquipmentInstallRequestServiceDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EquipmentInstallRequestServiceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deviceLocation"] = o.DeviceLocation
	toSerialize["elevationDrawingAttached"] = o.ElevationDrawingAttached
	toSerialize["installationPoint"] = o.InstallationPoint
	toSerialize["installedEquipmentPhotoRequired"] = o.InstalledEquipmentPhotoRequired
	toSerialize["mountHardwareIncluded"] = o.MountHardwareIncluded
	toSerialize["patchDevices"] = o.PatchDevices
	if !IsNil(o.PatchingInfo) {
		toSerialize["patchingInfo"] = o.PatchingInfo
	}
	toSerialize["powerItOn"] = o.PowerItOn
	if !IsNil(o.NeedSupportFromASubmarineCableStationEngineer) {
		toSerialize["needSupportFromASubmarineCableStationEngineer"] = o.NeedSupportFromASubmarineCableStationEngineer
	}
	toSerialize["scopeOfWork"] = o.ScopeOfWork

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EquipmentInstallRequestServiceDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deviceLocation",
		"elevationDrawingAttached",
		"installationPoint",
		"installedEquipmentPhotoRequired",
		"mountHardwareIncluded",
		"patchDevices",
		"powerItOn",
		"scopeOfWork",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEquipmentInstallRequestServiceDetails := _EquipmentInstallRequestServiceDetails{}

	err = json.Unmarshal(data, &varEquipmentInstallRequestServiceDetails)

	if err != nil {
		return err
	}

	*o = EquipmentInstallRequestServiceDetails(varEquipmentInstallRequestServiceDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "deviceLocation")
		delete(additionalProperties, "elevationDrawingAttached")
		delete(additionalProperties, "installationPoint")
		delete(additionalProperties, "installedEquipmentPhotoRequired")
		delete(additionalProperties, "mountHardwareIncluded")
		delete(additionalProperties, "patchDevices")
		delete(additionalProperties, "patchingInfo")
		delete(additionalProperties, "powerItOn")
		delete(additionalProperties, "needSupportFromASubmarineCableStationEngineer")
		delete(additionalProperties, "scopeOfWork")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEquipmentInstallRequestServiceDetails struct {
	value *EquipmentInstallRequestServiceDetails
	isSet bool
}

func (v NullableEquipmentInstallRequestServiceDetails) Get() *EquipmentInstallRequestServiceDetails {
	return v.value
}

func (v *NullableEquipmentInstallRequestServiceDetails) Set(val *EquipmentInstallRequestServiceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableEquipmentInstallRequestServiceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableEquipmentInstallRequestServiceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEquipmentInstallRequestServiceDetails(val *EquipmentInstallRequestServiceDetails) *NullableEquipmentInstallRequestServiceDetails {
	return &NullableEquipmentInstallRequestServiceDetails{value: val, isSet: true}
}

func (v NullableEquipmentInstallRequestServiceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEquipmentInstallRequestServiceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
