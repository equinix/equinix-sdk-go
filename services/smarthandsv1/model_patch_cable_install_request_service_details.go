/*
Smart Hands

Request cage assistance, custom installation and equipment troubleshooting.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smarthandsv1

import (
	"encoding/json"
	"fmt"
)

// checks if the PatchCableInstallRequestServiceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchCableInstallRequestServiceDetails{}

// PatchCableInstallRequestServiceDetails struct for PatchCableInstallRequestServiceDetails
type PatchCableInstallRequestServiceDetails struct {
	CrossConnects        []CrossConnectInstall `json:"crossConnects"`
	AdditionalProperties map[string]interface{}
}

type _PatchCableInstallRequestServiceDetails PatchCableInstallRequestServiceDetails

// NewPatchCableInstallRequestServiceDetails instantiates a new PatchCableInstallRequestServiceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchCableInstallRequestServiceDetails(crossConnects []CrossConnectInstall) *PatchCableInstallRequestServiceDetails {
	this := PatchCableInstallRequestServiceDetails{}
	this.CrossConnects = crossConnects
	return &this
}

// NewPatchCableInstallRequestServiceDetailsWithDefaults instantiates a new PatchCableInstallRequestServiceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchCableInstallRequestServiceDetailsWithDefaults() *PatchCableInstallRequestServiceDetails {
	this := PatchCableInstallRequestServiceDetails{}
	return &this
}

// GetCrossConnects returns the CrossConnects field value
func (o *PatchCableInstallRequestServiceDetails) GetCrossConnects() []CrossConnectInstall {
	if o == nil {
		var ret []CrossConnectInstall
		return ret
	}

	return o.CrossConnects
}

// GetCrossConnectsOk returns a tuple with the CrossConnects field value
// and a boolean to check if the value has been set.
func (o *PatchCableInstallRequestServiceDetails) GetCrossConnectsOk() ([]CrossConnectInstall, bool) {
	if o == nil {
		return nil, false
	}
	return o.CrossConnects, true
}

// SetCrossConnects sets field value
func (o *PatchCableInstallRequestServiceDetails) SetCrossConnects(v []CrossConnectInstall) {
	o.CrossConnects = v
}

func (o PatchCableInstallRequestServiceDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchCableInstallRequestServiceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["crossConnects"] = o.CrossConnects

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchCableInstallRequestServiceDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"crossConnects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchCableInstallRequestServiceDetails := _PatchCableInstallRequestServiceDetails{}

	err = json.Unmarshal(data, &varPatchCableInstallRequestServiceDetails)

	if err != nil {
		return err
	}

	*o = PatchCableInstallRequestServiceDetails(varPatchCableInstallRequestServiceDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "crossConnects")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchCableInstallRequestServiceDetails struct {
	value *PatchCableInstallRequestServiceDetails
	isSet bool
}

func (v NullablePatchCableInstallRequestServiceDetails) Get() *PatchCableInstallRequestServiceDetails {
	return v.value
}

func (v *NullablePatchCableInstallRequestServiceDetails) Set(val *PatchCableInstallRequestServiceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchCableInstallRequestServiceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchCableInstallRequestServiceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchCableInstallRequestServiceDetails(val *PatchCableInstallRequestServiceDetails) *NullablePatchCableInstallRequestServiceDetails {
	return &NullablePatchCableInstallRequestServiceDetails{value: val, isSet: true}
}

func (v NullablePatchCableInstallRequestServiceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchCableInstallRequestServiceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
