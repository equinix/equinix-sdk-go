/*
Smart Hands

Request cage assistance, custom installation and equipment troubleshooting.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smarthandsv1

import (
	"encoding/json"
	"fmt"
)

// checks if the ShipmentUnpackRequestServiceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentUnpackRequestServiceDetails{}

// ShipmentUnpackRequestServiceDetails Shipment Unpacking
type ShipmentUnpackRequestServiceDetails struct {
	// Inbound Shipment Order Number
	InboundShipmentOrderNumber string "json:\"inboundShipmentOrderNumber\" validate:\"regexp=^[ A-Za-z0-9~!|\\\\[\\\\]@#$%^&*()_+:\\\"<>?\\/.,;'=\\\\-\\\\{\\\\}`]{1,50}$\""
	// Copy of Packaging Slip Needed?
	CopyOfPackingSlipNeeded bool `json:"copyOfPackingSlipNeeded"`
	// Enter any additional details that will help our technicians execute your request. You may also attach your scope of work as a document if you exceed the character limit in this field.
	ScopeOfWork string `json:"scopeOfWork"`
	// Discard Shipment Material?
	DiscardShipmentMaterial bool `json:"discardShipmentMaterial"`
	AdditionalProperties    map[string]interface{}
}

type _ShipmentUnpackRequestServiceDetails ShipmentUnpackRequestServiceDetails

// NewShipmentUnpackRequestServiceDetails instantiates a new ShipmentUnpackRequestServiceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentUnpackRequestServiceDetails(inboundShipmentOrderNumber string, copyOfPackingSlipNeeded bool, scopeOfWork string, discardShipmentMaterial bool) *ShipmentUnpackRequestServiceDetails {
	this := ShipmentUnpackRequestServiceDetails{}
	this.InboundShipmentOrderNumber = inboundShipmentOrderNumber
	this.CopyOfPackingSlipNeeded = copyOfPackingSlipNeeded
	this.ScopeOfWork = scopeOfWork
	this.DiscardShipmentMaterial = discardShipmentMaterial
	return &this
}

// NewShipmentUnpackRequestServiceDetailsWithDefaults instantiates a new ShipmentUnpackRequestServiceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentUnpackRequestServiceDetailsWithDefaults() *ShipmentUnpackRequestServiceDetails {
	this := ShipmentUnpackRequestServiceDetails{}
	return &this
}

// GetInboundShipmentOrderNumber returns the InboundShipmentOrderNumber field value
func (o *ShipmentUnpackRequestServiceDetails) GetInboundShipmentOrderNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InboundShipmentOrderNumber
}

// GetInboundShipmentOrderNumberOk returns a tuple with the InboundShipmentOrderNumber field value
// and a boolean to check if the value has been set.
func (o *ShipmentUnpackRequestServiceDetails) GetInboundShipmentOrderNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InboundShipmentOrderNumber, true
}

// SetInboundShipmentOrderNumber sets field value
func (o *ShipmentUnpackRequestServiceDetails) SetInboundShipmentOrderNumber(v string) {
	o.InboundShipmentOrderNumber = v
}

// GetCopyOfPackingSlipNeeded returns the CopyOfPackingSlipNeeded field value
func (o *ShipmentUnpackRequestServiceDetails) GetCopyOfPackingSlipNeeded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CopyOfPackingSlipNeeded
}

// GetCopyOfPackingSlipNeededOk returns a tuple with the CopyOfPackingSlipNeeded field value
// and a boolean to check if the value has been set.
func (o *ShipmentUnpackRequestServiceDetails) GetCopyOfPackingSlipNeededOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CopyOfPackingSlipNeeded, true
}

// SetCopyOfPackingSlipNeeded sets field value
func (o *ShipmentUnpackRequestServiceDetails) SetCopyOfPackingSlipNeeded(v bool) {
	o.CopyOfPackingSlipNeeded = v
}

// GetScopeOfWork returns the ScopeOfWork field value
func (o *ShipmentUnpackRequestServiceDetails) GetScopeOfWork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScopeOfWork
}

// GetScopeOfWorkOk returns a tuple with the ScopeOfWork field value
// and a boolean to check if the value has been set.
func (o *ShipmentUnpackRequestServiceDetails) GetScopeOfWorkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScopeOfWork, true
}

// SetScopeOfWork sets field value
func (o *ShipmentUnpackRequestServiceDetails) SetScopeOfWork(v string) {
	o.ScopeOfWork = v
}

// GetDiscardShipmentMaterial returns the DiscardShipmentMaterial field value
func (o *ShipmentUnpackRequestServiceDetails) GetDiscardShipmentMaterial() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DiscardShipmentMaterial
}

// GetDiscardShipmentMaterialOk returns a tuple with the DiscardShipmentMaterial field value
// and a boolean to check if the value has been set.
func (o *ShipmentUnpackRequestServiceDetails) GetDiscardShipmentMaterialOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscardShipmentMaterial, true
}

// SetDiscardShipmentMaterial sets field value
func (o *ShipmentUnpackRequestServiceDetails) SetDiscardShipmentMaterial(v bool) {
	o.DiscardShipmentMaterial = v
}

func (o ShipmentUnpackRequestServiceDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentUnpackRequestServiceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["inboundShipmentOrderNumber"] = o.InboundShipmentOrderNumber
	toSerialize["copyOfPackingSlipNeeded"] = o.CopyOfPackingSlipNeeded
	toSerialize["scopeOfWork"] = o.ScopeOfWork
	toSerialize["discardShipmentMaterial"] = o.DiscardShipmentMaterial

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ShipmentUnpackRequestServiceDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"inboundShipmentOrderNumber",
		"copyOfPackingSlipNeeded",
		"scopeOfWork",
		"discardShipmentMaterial",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varShipmentUnpackRequestServiceDetails := _ShipmentUnpackRequestServiceDetails{}

	err = json.Unmarshal(data, &varShipmentUnpackRequestServiceDetails)

	if err != nil {
		return err
	}

	*o = ShipmentUnpackRequestServiceDetails(varShipmentUnpackRequestServiceDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "inboundShipmentOrderNumber")
		delete(additionalProperties, "copyOfPackingSlipNeeded")
		delete(additionalProperties, "scopeOfWork")
		delete(additionalProperties, "discardShipmentMaterial")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableShipmentUnpackRequestServiceDetails struct {
	value *ShipmentUnpackRequestServiceDetails
	isSet bool
}

func (v NullableShipmentUnpackRequestServiceDetails) Get() *ShipmentUnpackRequestServiceDetails {
	return v.value
}

func (v *NullableShipmentUnpackRequestServiceDetails) Set(val *ShipmentUnpackRequestServiceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentUnpackRequestServiceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentUnpackRequestServiceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentUnpackRequestServiceDetails(val *ShipmentUnpackRequestServiceDetails) *NullableShipmentUnpackRequestServiceDetails {
	return &NullableShipmentUnpackRequestServiceDetails{value: val, isSet: true}
}

func (v NullableShipmentUnpackRequestServiceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentUnpackRequestServiceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
