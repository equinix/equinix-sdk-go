/*
Smart Hands

Request cage assistance, custom installation and equipment troubleshooting.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smarthandsv1

import (
	"encoding/json"
	"fmt"
)

// PurchaseOrderPurchaseOrderType Purchase Order Selection Type
type PurchaseOrderPurchaseOrderType string

// List of purchaseOrder_purchaseOrderType
const (
	PURCHASEORDERPURCHASEORDERTYPE_EXISTING PurchaseOrderPurchaseOrderType = "EXISTING"
	PURCHASEORDERPURCHASEORDERTYPE_EXEMPTED PurchaseOrderPurchaseOrderType = "EXEMPTED"
)

// All allowed values of PurchaseOrderPurchaseOrderType enum
var AllowedPurchaseOrderPurchaseOrderTypeEnumValues = []PurchaseOrderPurchaseOrderType{
	"EXISTING",
	"EXEMPTED",
}

func (v *PurchaseOrderPurchaseOrderType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PurchaseOrderPurchaseOrderType(value)
	for _, existing := range AllowedPurchaseOrderPurchaseOrderTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PurchaseOrderPurchaseOrderType", value)
}

// NewPurchaseOrderPurchaseOrderTypeFromValue returns a pointer to a valid PurchaseOrderPurchaseOrderType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPurchaseOrderPurchaseOrderTypeFromValue(v string) (*PurchaseOrderPurchaseOrderType, error) {
	ev := PurchaseOrderPurchaseOrderType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PurchaseOrderPurchaseOrderType: valid values are %v", v, AllowedPurchaseOrderPurchaseOrderTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PurchaseOrderPurchaseOrderType) IsValid() bool {
	for _, existing := range AllowedPurchaseOrderPurchaseOrderTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to purchaseOrder_purchaseOrderType value
func (v PurchaseOrderPurchaseOrderType) Ptr() *PurchaseOrderPurchaseOrderType {
	return &v
}

type NullablePurchaseOrderPurchaseOrderType struct {
	value *PurchaseOrderPurchaseOrderType
	isSet bool
}

func (v NullablePurchaseOrderPurchaseOrderType) Get() *PurchaseOrderPurchaseOrderType {
	return v.value
}

func (v *NullablePurchaseOrderPurchaseOrderType) Set(val *PurchaseOrderPurchaseOrderType) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseOrderPurchaseOrderType) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseOrderPurchaseOrderType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseOrderPurchaseOrderType(val *PurchaseOrderPurchaseOrderType) *NullablePurchaseOrderPurchaseOrderType {
	return &NullablePurchaseOrderPurchaseOrderType{value: val, isSet: true}
}

func (v NullablePurchaseOrderPurchaseOrderType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseOrderPurchaseOrderType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
