/*
Smart Hands

Request cage assistance, custom installation and equipment troubleshooting.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smarthandsv1

import (
	"encoding/json"
	"fmt"
)

// RunJumperCableRequestServiceDetailsConnector Connector Type
type RunJumperCableRequestServiceDetailsConnector string

// List of runJumperCableRequest_serviceDetails_connector
const (
	RUNJUMPERCABLEREQUESTSERVICEDETAILSCONNECTOR_RJ45  RunJumperCableRequestServiceDetailsConnector = "RJ45"
	RUNJUMPERCABLEREQUESTSERVICEDETAILSCONNECTOR_SC    RunJumperCableRequestServiceDetailsConnector = "SC"
	RUNJUMPERCABLEREQUESTSERVICEDETAILSCONNECTOR_LC    RunJumperCableRequestServiceDetailsConnector = "LC"
	RUNJUMPERCABLEREQUESTSERVICEDETAILSCONNECTOR_BNC   RunJumperCableRequestServiceDetailsConnector = "BNC"
	RUNJUMPERCABLEREQUESTSERVICEDETAILSCONNECTOR_OTHER RunJumperCableRequestServiceDetailsConnector = "Other"
)

// All allowed values of RunJumperCableRequestServiceDetailsConnector enum
var AllowedRunJumperCableRequestServiceDetailsConnectorEnumValues = []RunJumperCableRequestServiceDetailsConnector{
	"RJ45",
	"SC",
	"LC",
	"BNC",
	"Other",
}

func (v *RunJumperCableRequestServiceDetailsConnector) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RunJumperCableRequestServiceDetailsConnector(value)
	for _, existing := range AllowedRunJumperCableRequestServiceDetailsConnectorEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RunJumperCableRequestServiceDetailsConnector", value)
}

// NewRunJumperCableRequestServiceDetailsConnectorFromValue returns a pointer to a valid RunJumperCableRequestServiceDetailsConnector
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRunJumperCableRequestServiceDetailsConnectorFromValue(v string) (*RunJumperCableRequestServiceDetailsConnector, error) {
	ev := RunJumperCableRequestServiceDetailsConnector(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RunJumperCableRequestServiceDetailsConnector: valid values are %v", v, AllowedRunJumperCableRequestServiceDetailsConnectorEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RunJumperCableRequestServiceDetailsConnector) IsValid() bool {
	for _, existing := range AllowedRunJumperCableRequestServiceDetailsConnectorEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to runJumperCableRequest_serviceDetails_connector value
func (v RunJumperCableRequestServiceDetailsConnector) Ptr() *RunJumperCableRequestServiceDetailsConnector {
	return &v
}

type NullableRunJumperCableRequestServiceDetailsConnector struct {
	value *RunJumperCableRequestServiceDetailsConnector
	isSet bool
}

func (v NullableRunJumperCableRequestServiceDetailsConnector) Get() *RunJumperCableRequestServiceDetailsConnector {
	return v.value
}

func (v *NullableRunJumperCableRequestServiceDetailsConnector) Set(val *RunJumperCableRequestServiceDetailsConnector) {
	v.value = val
	v.isSet = true
}

func (v NullableRunJumperCableRequestServiceDetailsConnector) IsSet() bool {
	return v.isSet
}

func (v *NullableRunJumperCableRequestServiceDetailsConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunJumperCableRequestServiceDetailsConnector(val *RunJumperCableRequestServiceDetailsConnector) *NullableRunJumperCableRequestServiceDetailsConnector {
	return &NullableRunJumperCableRequestServiceDetailsConnector{value: val, isSet: true}
}

func (v NullableRunJumperCableRequestServiceDetailsConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunJumperCableRequestServiceDetailsConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
