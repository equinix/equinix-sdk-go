/*
Smart Hands

Request cage assistance, custom installation and equipment troubleshooting.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smarthandsv1

import (
	"encoding/json"
	"fmt"
)

// CageEscortRequestServiceDetailsDurationVisit Duration of the visit for the Visitor
type CageEscortRequestServiceDetailsDurationVisit string

// List of cageEscortRequest_serviceDetails_durationVisit
const (
	CAGEESCORTREQUESTSERVICEDETAILSDURATIONVISIT__30_MINUTES         CageEscortRequestServiceDetailsDurationVisit = "30 Minutes"
	CAGEESCORTREQUESTSERVICEDETAILSDURATIONVISIT__60_MINUTES         CageEscortRequestServiceDetailsDurationVisit = "60 Minutes"
	CAGEESCORTREQUESTSERVICEDETAILSDURATIONVISIT__90_MINUTES         CageEscortRequestServiceDetailsDurationVisit = "90 Minutes"
	CAGEESCORTREQUESTSERVICEDETAILSDURATIONVISIT__2_HOURS            CageEscortRequestServiceDetailsDurationVisit = "2 Hours"
	CAGEESCORTREQUESTSERVICEDETAILSDURATIONVISIT__2_HOURS_30_MINUTES CageEscortRequestServiceDetailsDurationVisit = "2 Hours 30 Minutes"
	CAGEESCORTREQUESTSERVICEDETAILSDURATIONVISIT__3_HOURS            CageEscortRequestServiceDetailsDurationVisit = "3 Hours"
	CAGEESCORTREQUESTSERVICEDETAILSDURATIONVISIT__3_HOURS_30_MINUTES CageEscortRequestServiceDetailsDurationVisit = "3 Hours 30 Minutes"
	CAGEESCORTREQUESTSERVICEDETAILSDURATIONVISIT__4_HOURS            CageEscortRequestServiceDetailsDurationVisit = "4 Hours"
)

// All allowed values of CageEscortRequestServiceDetailsDurationVisit enum
var AllowedCageEscortRequestServiceDetailsDurationVisitEnumValues = []CageEscortRequestServiceDetailsDurationVisit{
	"30 Minutes",
	"60 Minutes",
	"90 Minutes",
	"2 Hours",
	"2 Hours 30 Minutes",
	"3 Hours",
	"3 Hours 30 Minutes",
	"4 Hours",
}

func (v *CageEscortRequestServiceDetailsDurationVisit) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CageEscortRequestServiceDetailsDurationVisit(value)
	for _, existing := range AllowedCageEscortRequestServiceDetailsDurationVisitEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CageEscortRequestServiceDetailsDurationVisit", value)
}

// NewCageEscortRequestServiceDetailsDurationVisitFromValue returns a pointer to a valid CageEscortRequestServiceDetailsDurationVisit
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCageEscortRequestServiceDetailsDurationVisitFromValue(v string) (*CageEscortRequestServiceDetailsDurationVisit, error) {
	ev := CageEscortRequestServiceDetailsDurationVisit(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CageEscortRequestServiceDetailsDurationVisit: valid values are %v", v, AllowedCageEscortRequestServiceDetailsDurationVisitEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CageEscortRequestServiceDetailsDurationVisit) IsValid() bool {
	for _, existing := range AllowedCageEscortRequestServiceDetailsDurationVisitEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to cageEscortRequest_serviceDetails_durationVisit value
func (v CageEscortRequestServiceDetailsDurationVisit) Ptr() *CageEscortRequestServiceDetailsDurationVisit {
	return &v
}

type NullableCageEscortRequestServiceDetailsDurationVisit struct {
	value *CageEscortRequestServiceDetailsDurationVisit
	isSet bool
}

func (v NullableCageEscortRequestServiceDetailsDurationVisit) Get() *CageEscortRequestServiceDetailsDurationVisit {
	return v.value
}

func (v *NullableCageEscortRequestServiceDetailsDurationVisit) Set(val *CageEscortRequestServiceDetailsDurationVisit) {
	v.value = val
	v.isSet = true
}

func (v NullableCageEscortRequestServiceDetailsDurationVisit) IsSet() bool {
	return v.isSet
}

func (v *NullableCageEscortRequestServiceDetailsDurationVisit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCageEscortRequestServiceDetailsDurationVisit(val *CageEscortRequestServiceDetailsDurationVisit) *NullableCageEscortRequestServiceDetailsDurationVisit {
	return &NullableCageEscortRequestServiceDetailsDurationVisit{value: val, isSet: true}
}

func (v NullableCageEscortRequestServiceDetailsDurationVisit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCageEscortRequestServiceDetailsDurationVisit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
