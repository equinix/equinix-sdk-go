/*
Smart View Environmental API

Empower yourself with Environmental APIs. The API makes it possible to fetch current environmental data including humidity and temperature for a single sensor (identified by IBX code and sensor ID) or for all the sensors within an IBX (identified by IBX code) in a paginated way. When fetching all sensor readings you can apply additional sort criteria.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the TagPointTrendingResponsePayLoad type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagPointTrendingResponsePayLoad{}

// TagPointTrendingResponsePayLoad struct for TagPointTrendingResponsePayLoad
type TagPointTrendingResponsePayLoad struct {
	AccountNumber *string `json:"accountNumber,omitempty"`
	// trend data of tag
	Data []TagPointTrendingData `json:"data,omitempty"`
	// data type of trend data vlaues
	DataType *string `json:"dataType,omitempty"`
	Ibx *string `json:"ibx,omitempty"`
	Interval *TagPointTrendingResponsePayLoadInterval `json:"interval,omitempty"`
	// the  
	TagDisplayName *string `json:"tagDisplayName,omitempty"`
	// the unique identifiers for the tag point ids for which the trending point is requested. 
	TagId *string `json:"tagId,omitempty"`
	Uom *string `json:"uom,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TagPointTrendingResponsePayLoad TagPointTrendingResponsePayLoad

// NewTagPointTrendingResponsePayLoad instantiates a new TagPointTrendingResponsePayLoad object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagPointTrendingResponsePayLoad() *TagPointTrendingResponsePayLoad {
	this := TagPointTrendingResponsePayLoad{}
	return &this
}

// NewTagPointTrendingResponsePayLoadWithDefaults instantiates a new TagPointTrendingResponsePayLoad object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagPointTrendingResponsePayLoadWithDefaults() *TagPointTrendingResponsePayLoad {
	this := TagPointTrendingResponsePayLoad{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *TagPointTrendingResponsePayLoad) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponsePayLoad) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *TagPointTrendingResponsePayLoad) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *TagPointTrendingResponsePayLoad) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *TagPointTrendingResponsePayLoad) GetData() []TagPointTrendingData {
	if o == nil || IsNil(o.Data) {
		var ret []TagPointTrendingData
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponsePayLoad) GetDataOk() ([]TagPointTrendingData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *TagPointTrendingResponsePayLoad) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []TagPointTrendingData and assigns it to the Data field.
func (o *TagPointTrendingResponsePayLoad) SetData(v []TagPointTrendingData) {
	o.Data = v
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *TagPointTrendingResponsePayLoad) GetDataType() string {
	if o == nil || IsNil(o.DataType) {
		var ret string
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponsePayLoad) GetDataTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DataType) {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *TagPointTrendingResponsePayLoad) HasDataType() bool {
	if o != nil && !IsNil(o.DataType) {
		return true
	}

	return false
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *TagPointTrendingResponsePayLoad) SetDataType(v string) {
	o.DataType = &v
}

// GetIbx returns the Ibx field value if set, zero value otherwise.
func (o *TagPointTrendingResponsePayLoad) GetIbx() string {
	if o == nil || IsNil(o.Ibx) {
		var ret string
		return ret
	}
	return *o.Ibx
}

// GetIbxOk returns a tuple with the Ibx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponsePayLoad) GetIbxOk() (*string, bool) {
	if o == nil || IsNil(o.Ibx) {
		return nil, false
	}
	return o.Ibx, true
}

// HasIbx returns a boolean if a field has been set.
func (o *TagPointTrendingResponsePayLoad) HasIbx() bool {
	if o != nil && !IsNil(o.Ibx) {
		return true
	}

	return false
}

// SetIbx gets a reference to the given string and assigns it to the Ibx field.
func (o *TagPointTrendingResponsePayLoad) SetIbx(v string) {
	o.Ibx = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *TagPointTrendingResponsePayLoad) GetInterval() TagPointTrendingResponsePayLoadInterval {
	if o == nil || IsNil(o.Interval) {
		var ret TagPointTrendingResponsePayLoadInterval
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponsePayLoad) GetIntervalOk() (*TagPointTrendingResponsePayLoadInterval, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *TagPointTrendingResponsePayLoad) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given TagPointTrendingResponsePayLoadInterval and assigns it to the Interval field.
func (o *TagPointTrendingResponsePayLoad) SetInterval(v TagPointTrendingResponsePayLoadInterval) {
	o.Interval = &v
}

// GetTagDisplayName returns the TagDisplayName field value if set, zero value otherwise.
func (o *TagPointTrendingResponsePayLoad) GetTagDisplayName() string {
	if o == nil || IsNil(o.TagDisplayName) {
		var ret string
		return ret
	}
	return *o.TagDisplayName
}

// GetTagDisplayNameOk returns a tuple with the TagDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponsePayLoad) GetTagDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.TagDisplayName) {
		return nil, false
	}
	return o.TagDisplayName, true
}

// HasTagDisplayName returns a boolean if a field has been set.
func (o *TagPointTrendingResponsePayLoad) HasTagDisplayName() bool {
	if o != nil && !IsNil(o.TagDisplayName) {
		return true
	}

	return false
}

// SetTagDisplayName gets a reference to the given string and assigns it to the TagDisplayName field.
func (o *TagPointTrendingResponsePayLoad) SetTagDisplayName(v string) {
	o.TagDisplayName = &v
}

// GetTagId returns the TagId field value if set, zero value otherwise.
func (o *TagPointTrendingResponsePayLoad) GetTagId() string {
	if o == nil || IsNil(o.TagId) {
		var ret string
		return ret
	}
	return *o.TagId
}

// GetTagIdOk returns a tuple with the TagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponsePayLoad) GetTagIdOk() (*string, bool) {
	if o == nil || IsNil(o.TagId) {
		return nil, false
	}
	return o.TagId, true
}

// HasTagId returns a boolean if a field has been set.
func (o *TagPointTrendingResponsePayLoad) HasTagId() bool {
	if o != nil && !IsNil(o.TagId) {
		return true
	}

	return false
}

// SetTagId gets a reference to the given string and assigns it to the TagId field.
func (o *TagPointTrendingResponsePayLoad) SetTagId(v string) {
	o.TagId = &v
}

// GetUom returns the Uom field value if set, zero value otherwise.
func (o *TagPointTrendingResponsePayLoad) GetUom() string {
	if o == nil || IsNil(o.Uom) {
		var ret string
		return ret
	}
	return *o.Uom
}

// GetUomOk returns a tuple with the Uom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponsePayLoad) GetUomOk() (*string, bool) {
	if o == nil || IsNil(o.Uom) {
		return nil, false
	}
	return o.Uom, true
}

// HasUom returns a boolean if a field has been set.
func (o *TagPointTrendingResponsePayLoad) HasUom() bool {
	if o != nil && !IsNil(o.Uom) {
		return true
	}

	return false
}

// SetUom gets a reference to the given string and assigns it to the Uom field.
func (o *TagPointTrendingResponsePayLoad) SetUom(v string) {
	o.Uom = &v
}

func (o TagPointTrendingResponsePayLoad) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagPointTrendingResponsePayLoad) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.DataType) {
		toSerialize["dataType"] = o.DataType
	}
	if !IsNil(o.Ibx) {
		toSerialize["ibx"] = o.Ibx
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.TagDisplayName) {
		toSerialize["tagDisplayName"] = o.TagDisplayName
	}
	if !IsNil(o.TagId) {
		toSerialize["tagId"] = o.TagId
	}
	if !IsNil(o.Uom) {
		toSerialize["uom"] = o.Uom
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TagPointTrendingResponsePayLoad) UnmarshalJSON(data []byte) (err error) {
	varTagPointTrendingResponsePayLoad := _TagPointTrendingResponsePayLoad{}

	err = json.Unmarshal(data, &varTagPointTrendingResponsePayLoad)

	if err != nil {
		return err
	}

	*o = TagPointTrendingResponsePayLoad(varTagPointTrendingResponsePayLoad)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "data")
		delete(additionalProperties, "dataType")
		delete(additionalProperties, "ibx")
		delete(additionalProperties, "interval")
		delete(additionalProperties, "tagDisplayName")
		delete(additionalProperties, "tagId")
		delete(additionalProperties, "uom")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTagPointTrendingResponsePayLoad struct {
	value *TagPointTrendingResponsePayLoad
	isSet bool
}

func (v NullableTagPointTrendingResponsePayLoad) Get() *TagPointTrendingResponsePayLoad {
	return v.value
}

func (v *NullableTagPointTrendingResponsePayLoad) Set(val *TagPointTrendingResponsePayLoad) {
	v.value = val
	v.isSet = true
}

func (v NullableTagPointTrendingResponsePayLoad) IsSet() bool {
	return v.isSet
}

func (v *NullableTagPointTrendingResponsePayLoad) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagPointTrendingResponsePayLoad(val *TagPointTrendingResponsePayLoad) *NullableTagPointTrendingResponsePayLoad {
	return &NullableTagPointTrendingResponsePayLoad{value: val, isSet: true}
}

func (v NullableTagPointTrendingResponsePayLoad) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagPointTrendingResponsePayLoad) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


