/*
Smart View Environmental API

Empower yourself with Environmental APIs. The API makes it possible to fetch current environmental data including humidity and temperature for a single sensor (identified by IBX code and sensor ID) or for all the sensors within an IBX (identified by IBX code) in a paginated way. When fetching all sensor readings you can apply additional sort criteria.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the AlertThresholdDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertThresholdDetails{}

// AlertThresholdDetails threshold details
type AlertThresholdDetails struct {
	// threshold max value
	MaxValue *string `json:"maxValue,omitempty"`
	// threshold min value
	MinValue *string `json:"minValue,omitempty"`
	// threshold unit
	Unit *string `json:"unit,omitempty"`
	// threshold value
	Value *string `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AlertThresholdDetails AlertThresholdDetails

// NewAlertThresholdDetails instantiates a new AlertThresholdDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertThresholdDetails() *AlertThresholdDetails {
	this := AlertThresholdDetails{}
	return &this
}

// NewAlertThresholdDetailsWithDefaults instantiates a new AlertThresholdDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertThresholdDetailsWithDefaults() *AlertThresholdDetails {
	this := AlertThresholdDetails{}
	return &this
}

// GetMaxValue returns the MaxValue field value if set, zero value otherwise.
func (o *AlertThresholdDetails) GetMaxValue() string {
	if o == nil || IsNil(o.MaxValue) {
		var ret string
		return ret
	}
	return *o.MaxValue
}

// GetMaxValueOk returns a tuple with the MaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertThresholdDetails) GetMaxValueOk() (*string, bool) {
	if o == nil || IsNil(o.MaxValue) {
		return nil, false
	}
	return o.MaxValue, true
}

// HasMaxValue returns a boolean if a field has been set.
func (o *AlertThresholdDetails) HasMaxValue() bool {
	if o != nil && !IsNil(o.MaxValue) {
		return true
	}

	return false
}

// SetMaxValue gets a reference to the given string and assigns it to the MaxValue field.
func (o *AlertThresholdDetails) SetMaxValue(v string) {
	o.MaxValue = &v
}

// GetMinValue returns the MinValue field value if set, zero value otherwise.
func (o *AlertThresholdDetails) GetMinValue() string {
	if o == nil || IsNil(o.MinValue) {
		var ret string
		return ret
	}
	return *o.MinValue
}

// GetMinValueOk returns a tuple with the MinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertThresholdDetails) GetMinValueOk() (*string, bool) {
	if o == nil || IsNil(o.MinValue) {
		return nil, false
	}
	return o.MinValue, true
}

// HasMinValue returns a boolean if a field has been set.
func (o *AlertThresholdDetails) HasMinValue() bool {
	if o != nil && !IsNil(o.MinValue) {
		return true
	}

	return false
}

// SetMinValue gets a reference to the given string and assigns it to the MinValue field.
func (o *AlertThresholdDetails) SetMinValue(v string) {
	o.MinValue = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *AlertThresholdDetails) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertThresholdDetails) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *AlertThresholdDetails) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *AlertThresholdDetails) SetUnit(v string) {
	o.Unit = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AlertThresholdDetails) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertThresholdDetails) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AlertThresholdDetails) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AlertThresholdDetails) SetValue(v string) {
	o.Value = &v
}

func (o AlertThresholdDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertThresholdDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxValue) {
		toSerialize["maxValue"] = o.MaxValue
	}
	if !IsNil(o.MinValue) {
		toSerialize["minValue"] = o.MinValue
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AlertThresholdDetails) UnmarshalJSON(data []byte) (err error) {
	varAlertThresholdDetails := _AlertThresholdDetails{}

	err = json.Unmarshal(data, &varAlertThresholdDetails)

	if err != nil {
		return err
	}

	*o = AlertThresholdDetails(varAlertThresholdDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "maxValue")
		delete(additionalProperties, "minValue")
		delete(additionalProperties, "unit")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAlertThresholdDetails struct {
	value *AlertThresholdDetails
	isSet bool
}

func (v NullableAlertThresholdDetails) Get() *AlertThresholdDetails {
	return v.value
}

func (v *NullableAlertThresholdDetails) Set(val *AlertThresholdDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertThresholdDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertThresholdDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertThresholdDetails(val *AlertThresholdDetails) *NullableAlertThresholdDetails {
	return &NullableAlertThresholdDetails{value: val, isSet: true}
}

func (v NullableAlertThresholdDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertThresholdDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


