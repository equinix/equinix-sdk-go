/*
Smart View Environmental API

Empower yourself with Environmental APIs. The API makes it possible to fetch current environmental data including humidity and temperature for a single sensor (identified by IBX code and sensor ID) or for all the sensors within an IBX (identified by IBX code) in a paginated way. When fetching all sensor readings you can apply additional sort criteria.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the AssetDetailsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetDetailsRequest{}

// AssetDetailsRequest struct for AssetDetailsRequest
type AssetDetailsRequest struct {
	// customer account number
	AccountNo *string `json:"accountNo,omitempty"`
	// asset classification
	Classification *string `json:"classification,omitempty"`
	// ibx code
	Ibx *string `json:"ibx,omitempty"`
	AssetIds []string `json:"assetIds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AssetDetailsRequest AssetDetailsRequest

// NewAssetDetailsRequest instantiates a new AssetDetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetDetailsRequest() *AssetDetailsRequest {
	this := AssetDetailsRequest{}
	return &this
}

// NewAssetDetailsRequestWithDefaults instantiates a new AssetDetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetDetailsRequestWithDefaults() *AssetDetailsRequest {
	this := AssetDetailsRequest{}
	return &this
}

// GetAccountNo returns the AccountNo field value if set, zero value otherwise.
func (o *AssetDetailsRequest) GetAccountNo() string {
	if o == nil || IsNil(o.AccountNo) {
		var ret string
		return ret
	}
	return *o.AccountNo
}

// GetAccountNoOk returns a tuple with the AccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsRequest) GetAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNo) {
		return nil, false
	}
	return o.AccountNo, true
}

// HasAccountNo returns a boolean if a field has been set.
func (o *AssetDetailsRequest) HasAccountNo() bool {
	if o != nil && !IsNil(o.AccountNo) {
		return true
	}

	return false
}

// SetAccountNo gets a reference to the given string and assigns it to the AccountNo field.
func (o *AssetDetailsRequest) SetAccountNo(v string) {
	o.AccountNo = &v
}

// GetClassification returns the Classification field value if set, zero value otherwise.
func (o *AssetDetailsRequest) GetClassification() string {
	if o == nil || IsNil(o.Classification) {
		var ret string
		return ret
	}
	return *o.Classification
}

// GetClassificationOk returns a tuple with the Classification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsRequest) GetClassificationOk() (*string, bool) {
	if o == nil || IsNil(o.Classification) {
		return nil, false
	}
	return o.Classification, true
}

// HasClassification returns a boolean if a field has been set.
func (o *AssetDetailsRequest) HasClassification() bool {
	if o != nil && !IsNil(o.Classification) {
		return true
	}

	return false
}

// SetClassification gets a reference to the given string and assigns it to the Classification field.
func (o *AssetDetailsRequest) SetClassification(v string) {
	o.Classification = &v
}

// GetIbx returns the Ibx field value if set, zero value otherwise.
func (o *AssetDetailsRequest) GetIbx() string {
	if o == nil || IsNil(o.Ibx) {
		var ret string
		return ret
	}
	return *o.Ibx
}

// GetIbxOk returns a tuple with the Ibx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsRequest) GetIbxOk() (*string, bool) {
	if o == nil || IsNil(o.Ibx) {
		return nil, false
	}
	return o.Ibx, true
}

// HasIbx returns a boolean if a field has been set.
func (o *AssetDetailsRequest) HasIbx() bool {
	if o != nil && !IsNil(o.Ibx) {
		return true
	}

	return false
}

// SetIbx gets a reference to the given string and assigns it to the Ibx field.
func (o *AssetDetailsRequest) SetIbx(v string) {
	o.Ibx = &v
}

// GetAssetIds returns the AssetIds field value if set, zero value otherwise.
func (o *AssetDetailsRequest) GetAssetIds() []string {
	if o == nil || IsNil(o.AssetIds) {
		var ret []string
		return ret
	}
	return o.AssetIds
}

// GetAssetIdsOk returns a tuple with the AssetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsRequest) GetAssetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AssetIds) {
		return nil, false
	}
	return o.AssetIds, true
}

// HasAssetIds returns a boolean if a field has been set.
func (o *AssetDetailsRequest) HasAssetIds() bool {
	if o != nil && !IsNil(o.AssetIds) {
		return true
	}

	return false
}

// SetAssetIds gets a reference to the given []string and assigns it to the AssetIds field.
func (o *AssetDetailsRequest) SetAssetIds(v []string) {
	o.AssetIds = v
}

func (o AssetDetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetDetailsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNo) {
		toSerialize["accountNo"] = o.AccountNo
	}
	if !IsNil(o.Classification) {
		toSerialize["classification"] = o.Classification
	}
	if !IsNil(o.Ibx) {
		toSerialize["ibx"] = o.Ibx
	}
	if !IsNil(o.AssetIds) {
		toSerialize["assetIds"] = o.AssetIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetDetailsRequest) UnmarshalJSON(data []byte) (err error) {
	varAssetDetailsRequest := _AssetDetailsRequest{}

	err = json.Unmarshal(data, &varAssetDetailsRequest)

	if err != nil {
		return err
	}

	*o = AssetDetailsRequest(varAssetDetailsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountNo")
		delete(additionalProperties, "classification")
		delete(additionalProperties, "ibx")
		delete(additionalProperties, "assetIds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetDetailsRequest struct {
	value *AssetDetailsRequest
	isSet bool
}

func (v NullableAssetDetailsRequest) Get() *AssetDetailsRequest {
	return v.value
}

func (v *NullableAssetDetailsRequest) Set(val *AssetDetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetDetailsRequest(val *AssetDetailsRequest) *NullableAssetDetailsRequest {
	return &NullableAssetDetailsRequest{value: val, isSet: true}
}

func (v NullableAssetDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


