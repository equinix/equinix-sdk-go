/*
DCIM Power APIs

Empower yourself with DCIM Power APIs. Use them to get current and trending information on power consumption by assets. These APIs return the power consumption info for all level values, given a customer account number, IBX and level type of ibx - cage, cabinet or circuit. Trending power data returns the kVA power draw and max allowed (%) for the given asset. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the TagPointTrendingResponseStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagPointTrendingResponseStatus{}

// TagPointTrendingResponseStatus struct for TagPointTrendingResponseStatus
type TagPointTrendingResponseStatus struct {
	// [Ok|Permission Denied|Invalid Account number|Invalid IBX|Invalid Interval|Invalid FromDate|Invalid ToDate|From/ToDate interval cannot be greater  than 1 year] are the possible messages
	Msg *string `json:"msg,omitempty"`
	// [1000|3001|4000] are the possible status codes
	Statuscode *float32 `json:"statuscode,omitempty"`
	Type *AssetDetailResponseStatusType `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TagPointTrendingResponseStatus TagPointTrendingResponseStatus

// NewTagPointTrendingResponseStatus instantiates a new TagPointTrendingResponseStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagPointTrendingResponseStatus() *TagPointTrendingResponseStatus {
	this := TagPointTrendingResponseStatus{}
	return &this
}

// NewTagPointTrendingResponseStatusWithDefaults instantiates a new TagPointTrendingResponseStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagPointTrendingResponseStatusWithDefaults() *TagPointTrendingResponseStatus {
	this := TagPointTrendingResponseStatus{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *TagPointTrendingResponseStatus) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponseStatus) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *TagPointTrendingResponseStatus) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *TagPointTrendingResponseStatus) SetMsg(v string) {
	o.Msg = &v
}

// GetStatuscode returns the Statuscode field value if set, zero value otherwise.
func (o *TagPointTrendingResponseStatus) GetStatuscode() float32 {
	if o == nil || IsNil(o.Statuscode) {
		var ret float32
		return ret
	}
	return *o.Statuscode
}

// GetStatuscodeOk returns a tuple with the Statuscode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponseStatus) GetStatuscodeOk() (*float32, bool) {
	if o == nil || IsNil(o.Statuscode) {
		return nil, false
	}
	return o.Statuscode, true
}

// HasStatuscode returns a boolean if a field has been set.
func (o *TagPointTrendingResponseStatus) HasStatuscode() bool {
	if o != nil && !IsNil(o.Statuscode) {
		return true
	}

	return false
}

// SetStatuscode gets a reference to the given float32 and assigns it to the Statuscode field.
func (o *TagPointTrendingResponseStatus) SetStatuscode(v float32) {
	o.Statuscode = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TagPointTrendingResponseStatus) GetType() AssetDetailResponseStatusType {
	if o == nil || IsNil(o.Type) {
		var ret AssetDetailResponseStatusType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPointTrendingResponseStatus) GetTypeOk() (*AssetDetailResponseStatusType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TagPointTrendingResponseStatus) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AssetDetailResponseStatusType and assigns it to the Type field.
func (o *TagPointTrendingResponseStatus) SetType(v AssetDetailResponseStatusType) {
	o.Type = &v
}

func (o TagPointTrendingResponseStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagPointTrendingResponseStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Statuscode) {
		toSerialize["statuscode"] = o.Statuscode
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TagPointTrendingResponseStatus) UnmarshalJSON(data []byte) (err error) {
	varTagPointTrendingResponseStatus := _TagPointTrendingResponseStatus{}

	err = json.Unmarshal(data, &varTagPointTrendingResponseStatus)

	if err != nil {
		return err
	}

	*o = TagPointTrendingResponseStatus(varTagPointTrendingResponseStatus)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "msg")
		delete(additionalProperties, "statuscode")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTagPointTrendingResponseStatus struct {
	value *TagPointTrendingResponseStatus
	isSet bool
}

func (v NullableTagPointTrendingResponseStatus) Get() *TagPointTrendingResponseStatus {
	return v.value
}

func (v *NullableTagPointTrendingResponseStatus) Set(val *TagPointTrendingResponseStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableTagPointTrendingResponseStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableTagPointTrendingResponseStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagPointTrendingResponseStatus(val *TagPointTrendingResponseStatus) *NullableTagPointTrendingResponseStatus {
	return &NullableTagPointTrendingResponseStatus{value: val, isSet: true}
}

func (v NullableTagPointTrendingResponseStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagPointTrendingResponseStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


