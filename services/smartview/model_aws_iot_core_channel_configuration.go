/*
DCIM Power APIs

Empower yourself with DCIM Power APIs. Use them to get current and trending information on power consumption by assets. These APIs return the power consumption info for all level values, given a customer account number, IBX and level type of ibx - cage, cabinet or circuit. Trending power data returns the kVA power draw and max allowed (%) for the given asset. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
	"fmt"
)

// checks if the AwsIotCoreChannelConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsIotCoreChannelConfiguration{}

// AwsIotCoreChannelConfiguration The configuration for an 'AWS_IOT_CORE' channel
type AwsIotCoreChannelConfiguration struct {
	Url string `json:"url"`
	AdditionalProperties map[string]interface{}
}

type _AwsIotCoreChannelConfiguration AwsIotCoreChannelConfiguration

// NewAwsIotCoreChannelConfiguration instantiates a new AwsIotCoreChannelConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsIotCoreChannelConfiguration(url string) *AwsIotCoreChannelConfiguration {
	this := AwsIotCoreChannelConfiguration{}
	this.Url = url
	return &this
}

// NewAwsIotCoreChannelConfigurationWithDefaults instantiates a new AwsIotCoreChannelConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsIotCoreChannelConfigurationWithDefaults() *AwsIotCoreChannelConfiguration {
	this := AwsIotCoreChannelConfiguration{}
	return &this
}

// GetUrl returns the Url field value
func (o *AwsIotCoreChannelConfiguration) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AwsIotCoreChannelConfiguration) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AwsIotCoreChannelConfiguration) SetUrl(v string) {
	o.Url = v
}

func (o AwsIotCoreChannelConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsIotCoreChannelConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AwsIotCoreChannelConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAwsIotCoreChannelConfiguration := _AwsIotCoreChannelConfiguration{}

	err = json.Unmarshal(data, &varAwsIotCoreChannelConfiguration)

	if err != nil {
		return err
	}

	*o = AwsIotCoreChannelConfiguration(varAwsIotCoreChannelConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAwsIotCoreChannelConfiguration struct {
	value *AwsIotCoreChannelConfiguration
	isSet bool
}

func (v NullableAwsIotCoreChannelConfiguration) Get() *AwsIotCoreChannelConfiguration {
	return v.value
}

func (v *NullableAwsIotCoreChannelConfiguration) Set(val *AwsIotCoreChannelConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsIotCoreChannelConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsIotCoreChannelConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsIotCoreChannelConfiguration(val *AwsIotCoreChannelConfiguration) *NullableAwsIotCoreChannelConfiguration {
	return &NullableAwsIotCoreChannelConfiguration{value: val, isSet: true}
}

func (v NullableAwsIotCoreChannelConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsIotCoreChannelConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


