/*
DCIM Power APIs

Empower yourself with DCIM Power APIs. Use them to get current and trending information on power consumption by assets. These APIs return the power consumption info for all level values, given a customer account number, IBX and level type of ibx - cage, cabinet or circuit. Trending power data returns the kVA power draw and max allowed (%) for the given asset. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the AlertDto2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertDto2{}

// AlertDto2 struct for AlertDto2
type AlertDto2 struct {
	AccountNo *string `json:"accountNo,omitempty"`
	Acknowledge *bool `json:"acknowledge,omitempty"`
	AffectedCustomerAsset *string `json:"affectedCustomerAsset,omitempty"`
	AlertType *AlertType `json:"alertType,omitempty"`
	AlertTypeName *string `json:"alertTypeName,omitempty"`
	Asset *string `json:"asset,omitempty"`
	Assetclassification *string `json:"assetclassification,omitempty"`
	Assetname *string `json:"assetname,omitempty"`
	Assettype *string `json:"assettype,omitempty"`
	ConditionalAlert []ConditionalAlert `json:"conditionalAlert,omitempty"`
	Country *string `json:"country,omitempty"`
	// createdOn
	CreatedOn *float32 `json:"createdOn,omitempty"`
	Currentvalue *string `json:"currentvalue,omitempty"`
	Eventtype *string `json:"eventtype,omitempty"`
	Ibx *string `json:"ibx,omitempty"`
	Id *string `json:"id,omitempty"`
	Lastmaintenance *string `json:"lastmaintenance,omitempty"`
	Metro *string `json:"metro,omitempty"`
	// modifiedOn
	ModifiedOn *float32 `json:"modifiedOn,omitempty"`
	NotificationType *string `json:"notificationType,omitempty"`
	Region *string `json:"region,omitempty"`
	Relatedincidents *string `json:"relatedincidents,omitempty"`
	Resiliency *string `json:"resiliency,omitempty"`
	Section *string `json:"section,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Tagid *string `json:"tagid,omitempty"`
	ThresholdUnit *string `json:"thresholdUnit,omitempty"`
	ThresholdValue *string `json:"thresholdValue,omitempty"`
	ThresholdValueMax *string `json:"thresholdValueMax,omitempty"`
	ThresholdValueMin *string `json:"thresholdValueMin,omitempty"`
	TimeZone *string `json:"timeZone,omitempty"`
	Timeacknowledged *string `json:"timeacknowledged,omitempty"`
	Timeprocessed *string `json:"timeprocessed,omitempty"`
	TimetriggeredMilisec *string `json:"timetriggeredMilisec,omitempty"`
	// lastTriggeredOn
	TriggeredOn *float32 `json:"triggeredOn,omitempty"`
	Type *string `json:"type,omitempty"`
	Uom *string `json:"uom,omitempty"`
	Year *string `json:"year,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AlertDto2 AlertDto2

// NewAlertDto2 instantiates a new AlertDto2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDto2() *AlertDto2 {
	this := AlertDto2{}
	return &this
}

// NewAlertDto2WithDefaults instantiates a new AlertDto2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDto2WithDefaults() *AlertDto2 {
	this := AlertDto2{}
	return &this
}

// GetAccountNo returns the AccountNo field value if set, zero value otherwise.
func (o *AlertDto2) GetAccountNo() string {
	if o == nil || IsNil(o.AccountNo) {
		var ret string
		return ret
	}
	return *o.AccountNo
}

// GetAccountNoOk returns a tuple with the AccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNo) {
		return nil, false
	}
	return o.AccountNo, true
}

// HasAccountNo returns a boolean if a field has been set.
func (o *AlertDto2) HasAccountNo() bool {
	if o != nil && !IsNil(o.AccountNo) {
		return true
	}

	return false
}

// SetAccountNo gets a reference to the given string and assigns it to the AccountNo field.
func (o *AlertDto2) SetAccountNo(v string) {
	o.AccountNo = &v
}

// GetAcknowledge returns the Acknowledge field value if set, zero value otherwise.
func (o *AlertDto2) GetAcknowledge() bool {
	if o == nil || IsNil(o.Acknowledge) {
		var ret bool
		return ret
	}
	return *o.Acknowledge
}

// GetAcknowledgeOk returns a tuple with the Acknowledge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetAcknowledgeOk() (*bool, bool) {
	if o == nil || IsNil(o.Acknowledge) {
		return nil, false
	}
	return o.Acknowledge, true
}

// HasAcknowledge returns a boolean if a field has been set.
func (o *AlertDto2) HasAcknowledge() bool {
	if o != nil && !IsNil(o.Acknowledge) {
		return true
	}

	return false
}

// SetAcknowledge gets a reference to the given bool and assigns it to the Acknowledge field.
func (o *AlertDto2) SetAcknowledge(v bool) {
	o.Acknowledge = &v
}

// GetAffectedCustomerAsset returns the AffectedCustomerAsset field value if set, zero value otherwise.
func (o *AlertDto2) GetAffectedCustomerAsset() string {
	if o == nil || IsNil(o.AffectedCustomerAsset) {
		var ret string
		return ret
	}
	return *o.AffectedCustomerAsset
}

// GetAffectedCustomerAssetOk returns a tuple with the AffectedCustomerAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetAffectedCustomerAssetOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedCustomerAsset) {
		return nil, false
	}
	return o.AffectedCustomerAsset, true
}

// HasAffectedCustomerAsset returns a boolean if a field has been set.
func (o *AlertDto2) HasAffectedCustomerAsset() bool {
	if o != nil && !IsNil(o.AffectedCustomerAsset) {
		return true
	}

	return false
}

// SetAffectedCustomerAsset gets a reference to the given string and assigns it to the AffectedCustomerAsset field.
func (o *AlertDto2) SetAffectedCustomerAsset(v string) {
	o.AffectedCustomerAsset = &v
}

// GetAlertType returns the AlertType field value if set, zero value otherwise.
func (o *AlertDto2) GetAlertType() AlertType {
	if o == nil || IsNil(o.AlertType) {
		var ret AlertType
		return ret
	}
	return *o.AlertType
}

// GetAlertTypeOk returns a tuple with the AlertType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetAlertTypeOk() (*AlertType, bool) {
	if o == nil || IsNil(o.AlertType) {
		return nil, false
	}
	return o.AlertType, true
}

// HasAlertType returns a boolean if a field has been set.
func (o *AlertDto2) HasAlertType() bool {
	if o != nil && !IsNil(o.AlertType) {
		return true
	}

	return false
}

// SetAlertType gets a reference to the given AlertType and assigns it to the AlertType field.
func (o *AlertDto2) SetAlertType(v AlertType) {
	o.AlertType = &v
}

// GetAlertTypeName returns the AlertTypeName field value if set, zero value otherwise.
func (o *AlertDto2) GetAlertTypeName() string {
	if o == nil || IsNil(o.AlertTypeName) {
		var ret string
		return ret
	}
	return *o.AlertTypeName
}

// GetAlertTypeNameOk returns a tuple with the AlertTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetAlertTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.AlertTypeName) {
		return nil, false
	}
	return o.AlertTypeName, true
}

// HasAlertTypeName returns a boolean if a field has been set.
func (o *AlertDto2) HasAlertTypeName() bool {
	if o != nil && !IsNil(o.AlertTypeName) {
		return true
	}

	return false
}

// SetAlertTypeName gets a reference to the given string and assigns it to the AlertTypeName field.
func (o *AlertDto2) SetAlertTypeName(v string) {
	o.AlertTypeName = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *AlertDto2) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *AlertDto2) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *AlertDto2) SetAsset(v string) {
	o.Asset = &v
}

// GetAssetclassification returns the Assetclassification field value if set, zero value otherwise.
func (o *AlertDto2) GetAssetclassification() string {
	if o == nil || IsNil(o.Assetclassification) {
		var ret string
		return ret
	}
	return *o.Assetclassification
}

// GetAssetclassificationOk returns a tuple with the Assetclassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetAssetclassificationOk() (*string, bool) {
	if o == nil || IsNil(o.Assetclassification) {
		return nil, false
	}
	return o.Assetclassification, true
}

// HasAssetclassification returns a boolean if a field has been set.
func (o *AlertDto2) HasAssetclassification() bool {
	if o != nil && !IsNil(o.Assetclassification) {
		return true
	}

	return false
}

// SetAssetclassification gets a reference to the given string and assigns it to the Assetclassification field.
func (o *AlertDto2) SetAssetclassification(v string) {
	o.Assetclassification = &v
}

// GetAssetname returns the Assetname field value if set, zero value otherwise.
func (o *AlertDto2) GetAssetname() string {
	if o == nil || IsNil(o.Assetname) {
		var ret string
		return ret
	}
	return *o.Assetname
}

// GetAssetnameOk returns a tuple with the Assetname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetAssetnameOk() (*string, bool) {
	if o == nil || IsNil(o.Assetname) {
		return nil, false
	}
	return o.Assetname, true
}

// HasAssetname returns a boolean if a field has been set.
func (o *AlertDto2) HasAssetname() bool {
	if o != nil && !IsNil(o.Assetname) {
		return true
	}

	return false
}

// SetAssetname gets a reference to the given string and assigns it to the Assetname field.
func (o *AlertDto2) SetAssetname(v string) {
	o.Assetname = &v
}

// GetAssettype returns the Assettype field value if set, zero value otherwise.
func (o *AlertDto2) GetAssettype() string {
	if o == nil || IsNil(o.Assettype) {
		var ret string
		return ret
	}
	return *o.Assettype
}

// GetAssettypeOk returns a tuple with the Assettype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetAssettypeOk() (*string, bool) {
	if o == nil || IsNil(o.Assettype) {
		return nil, false
	}
	return o.Assettype, true
}

// HasAssettype returns a boolean if a field has been set.
func (o *AlertDto2) HasAssettype() bool {
	if o != nil && !IsNil(o.Assettype) {
		return true
	}

	return false
}

// SetAssettype gets a reference to the given string and assigns it to the Assettype field.
func (o *AlertDto2) SetAssettype(v string) {
	o.Assettype = &v
}

// GetConditionalAlert returns the ConditionalAlert field value if set, zero value otherwise.
func (o *AlertDto2) GetConditionalAlert() []ConditionalAlert {
	if o == nil || IsNil(o.ConditionalAlert) {
		var ret []ConditionalAlert
		return ret
	}
	return o.ConditionalAlert
}

// GetConditionalAlertOk returns a tuple with the ConditionalAlert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetConditionalAlertOk() ([]ConditionalAlert, bool) {
	if o == nil || IsNil(o.ConditionalAlert) {
		return nil, false
	}
	return o.ConditionalAlert, true
}

// HasConditionalAlert returns a boolean if a field has been set.
func (o *AlertDto2) HasConditionalAlert() bool {
	if o != nil && !IsNil(o.ConditionalAlert) {
		return true
	}

	return false
}

// SetConditionalAlert gets a reference to the given []ConditionalAlert and assigns it to the ConditionalAlert field.
func (o *AlertDto2) SetConditionalAlert(v []ConditionalAlert) {
	o.ConditionalAlert = v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *AlertDto2) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *AlertDto2) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *AlertDto2) SetCountry(v string) {
	o.Country = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *AlertDto2) GetCreatedOn() float32 {
	if o == nil || IsNil(o.CreatedOn) {
		var ret float32
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetCreatedOnOk() (*float32, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *AlertDto2) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given float32 and assigns it to the CreatedOn field.
func (o *AlertDto2) SetCreatedOn(v float32) {
	o.CreatedOn = &v
}

// GetCurrentvalue returns the Currentvalue field value if set, zero value otherwise.
func (o *AlertDto2) GetCurrentvalue() string {
	if o == nil || IsNil(o.Currentvalue) {
		var ret string
		return ret
	}
	return *o.Currentvalue
}

// GetCurrentvalueOk returns a tuple with the Currentvalue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetCurrentvalueOk() (*string, bool) {
	if o == nil || IsNil(o.Currentvalue) {
		return nil, false
	}
	return o.Currentvalue, true
}

// HasCurrentvalue returns a boolean if a field has been set.
func (o *AlertDto2) HasCurrentvalue() bool {
	if o != nil && !IsNil(o.Currentvalue) {
		return true
	}

	return false
}

// SetCurrentvalue gets a reference to the given string and assigns it to the Currentvalue field.
func (o *AlertDto2) SetCurrentvalue(v string) {
	o.Currentvalue = &v
}

// GetEventtype returns the Eventtype field value if set, zero value otherwise.
func (o *AlertDto2) GetEventtype() string {
	if o == nil || IsNil(o.Eventtype) {
		var ret string
		return ret
	}
	return *o.Eventtype
}

// GetEventtypeOk returns a tuple with the Eventtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetEventtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Eventtype) {
		return nil, false
	}
	return o.Eventtype, true
}

// HasEventtype returns a boolean if a field has been set.
func (o *AlertDto2) HasEventtype() bool {
	if o != nil && !IsNil(o.Eventtype) {
		return true
	}

	return false
}

// SetEventtype gets a reference to the given string and assigns it to the Eventtype field.
func (o *AlertDto2) SetEventtype(v string) {
	o.Eventtype = &v
}

// GetIbx returns the Ibx field value if set, zero value otherwise.
func (o *AlertDto2) GetIbx() string {
	if o == nil || IsNil(o.Ibx) {
		var ret string
		return ret
	}
	return *o.Ibx
}

// GetIbxOk returns a tuple with the Ibx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetIbxOk() (*string, bool) {
	if o == nil || IsNil(o.Ibx) {
		return nil, false
	}
	return o.Ibx, true
}

// HasIbx returns a boolean if a field has been set.
func (o *AlertDto2) HasIbx() bool {
	if o != nil && !IsNil(o.Ibx) {
		return true
	}

	return false
}

// SetIbx gets a reference to the given string and assigns it to the Ibx field.
func (o *AlertDto2) SetIbx(v string) {
	o.Ibx = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AlertDto2) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AlertDto2) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AlertDto2) SetId(v string) {
	o.Id = &v
}

// GetLastmaintenance returns the Lastmaintenance field value if set, zero value otherwise.
func (o *AlertDto2) GetLastmaintenance() string {
	if o == nil || IsNil(o.Lastmaintenance) {
		var ret string
		return ret
	}
	return *o.Lastmaintenance
}

// GetLastmaintenanceOk returns a tuple with the Lastmaintenance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetLastmaintenanceOk() (*string, bool) {
	if o == nil || IsNil(o.Lastmaintenance) {
		return nil, false
	}
	return o.Lastmaintenance, true
}

// HasLastmaintenance returns a boolean if a field has been set.
func (o *AlertDto2) HasLastmaintenance() bool {
	if o != nil && !IsNil(o.Lastmaintenance) {
		return true
	}

	return false
}

// SetLastmaintenance gets a reference to the given string and assigns it to the Lastmaintenance field.
func (o *AlertDto2) SetLastmaintenance(v string) {
	o.Lastmaintenance = &v
}

// GetMetro returns the Metro field value if set, zero value otherwise.
func (o *AlertDto2) GetMetro() string {
	if o == nil || IsNil(o.Metro) {
		var ret string
		return ret
	}
	return *o.Metro
}

// GetMetroOk returns a tuple with the Metro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetMetroOk() (*string, bool) {
	if o == nil || IsNil(o.Metro) {
		return nil, false
	}
	return o.Metro, true
}

// HasMetro returns a boolean if a field has been set.
func (o *AlertDto2) HasMetro() bool {
	if o != nil && !IsNil(o.Metro) {
		return true
	}

	return false
}

// SetMetro gets a reference to the given string and assigns it to the Metro field.
func (o *AlertDto2) SetMetro(v string) {
	o.Metro = &v
}

// GetModifiedOn returns the ModifiedOn field value if set, zero value otherwise.
func (o *AlertDto2) GetModifiedOn() float32 {
	if o == nil || IsNil(o.ModifiedOn) {
		var ret float32
		return ret
	}
	return *o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetModifiedOnOk() (*float32, bool) {
	if o == nil || IsNil(o.ModifiedOn) {
		return nil, false
	}
	return o.ModifiedOn, true
}

// HasModifiedOn returns a boolean if a field has been set.
func (o *AlertDto2) HasModifiedOn() bool {
	if o != nil && !IsNil(o.ModifiedOn) {
		return true
	}

	return false
}

// SetModifiedOn gets a reference to the given float32 and assigns it to the ModifiedOn field.
func (o *AlertDto2) SetModifiedOn(v float32) {
	o.ModifiedOn = &v
}

// GetNotificationType returns the NotificationType field value if set, zero value otherwise.
func (o *AlertDto2) GetNotificationType() string {
	if o == nil || IsNil(o.NotificationType) {
		var ret string
		return ret
	}
	return *o.NotificationType
}

// GetNotificationTypeOk returns a tuple with the NotificationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetNotificationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationType) {
		return nil, false
	}
	return o.NotificationType, true
}

// HasNotificationType returns a boolean if a field has been set.
func (o *AlertDto2) HasNotificationType() bool {
	if o != nil && !IsNil(o.NotificationType) {
		return true
	}

	return false
}

// SetNotificationType gets a reference to the given string and assigns it to the NotificationType field.
func (o *AlertDto2) SetNotificationType(v string) {
	o.NotificationType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AlertDto2) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AlertDto2) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AlertDto2) SetRegion(v string) {
	o.Region = &v
}

// GetRelatedincidents returns the Relatedincidents field value if set, zero value otherwise.
func (o *AlertDto2) GetRelatedincidents() string {
	if o == nil || IsNil(o.Relatedincidents) {
		var ret string
		return ret
	}
	return *o.Relatedincidents
}

// GetRelatedincidentsOk returns a tuple with the Relatedincidents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetRelatedincidentsOk() (*string, bool) {
	if o == nil || IsNil(o.Relatedincidents) {
		return nil, false
	}
	return o.Relatedincidents, true
}

// HasRelatedincidents returns a boolean if a field has been set.
func (o *AlertDto2) HasRelatedincidents() bool {
	if o != nil && !IsNil(o.Relatedincidents) {
		return true
	}

	return false
}

// SetRelatedincidents gets a reference to the given string and assigns it to the Relatedincidents field.
func (o *AlertDto2) SetRelatedincidents(v string) {
	o.Relatedincidents = &v
}

// GetResiliency returns the Resiliency field value if set, zero value otherwise.
func (o *AlertDto2) GetResiliency() string {
	if o == nil || IsNil(o.Resiliency) {
		var ret string
		return ret
	}
	return *o.Resiliency
}

// GetResiliencyOk returns a tuple with the Resiliency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetResiliencyOk() (*string, bool) {
	if o == nil || IsNil(o.Resiliency) {
		return nil, false
	}
	return o.Resiliency, true
}

// HasResiliency returns a boolean if a field has been set.
func (o *AlertDto2) HasResiliency() bool {
	if o != nil && !IsNil(o.Resiliency) {
		return true
	}

	return false
}

// SetResiliency gets a reference to the given string and assigns it to the Resiliency field.
func (o *AlertDto2) SetResiliency(v string) {
	o.Resiliency = &v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *AlertDto2) GetSection() string {
	if o == nil || IsNil(o.Section) {
		var ret string
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetSectionOk() (*string, bool) {
	if o == nil || IsNil(o.Section) {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *AlertDto2) HasSection() bool {
	if o != nil && !IsNil(o.Section) {
		return true
	}

	return false
}

// SetSection gets a reference to the given string and assigns it to the Section field.
func (o *AlertDto2) SetSection(v string) {
	o.Section = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AlertDto2) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AlertDto2) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AlertDto2) SetSeverity(v string) {
	o.Severity = &v
}

// GetTagid returns the Tagid field value if set, zero value otherwise.
func (o *AlertDto2) GetTagid() string {
	if o == nil || IsNil(o.Tagid) {
		var ret string
		return ret
	}
	return *o.Tagid
}

// GetTagidOk returns a tuple with the Tagid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetTagidOk() (*string, bool) {
	if o == nil || IsNil(o.Tagid) {
		return nil, false
	}
	return o.Tagid, true
}

// HasTagid returns a boolean if a field has been set.
func (o *AlertDto2) HasTagid() bool {
	if o != nil && !IsNil(o.Tagid) {
		return true
	}

	return false
}

// SetTagid gets a reference to the given string and assigns it to the Tagid field.
func (o *AlertDto2) SetTagid(v string) {
	o.Tagid = &v
}

// GetThresholdUnit returns the ThresholdUnit field value if set, zero value otherwise.
func (o *AlertDto2) GetThresholdUnit() string {
	if o == nil || IsNil(o.ThresholdUnit) {
		var ret string
		return ret
	}
	return *o.ThresholdUnit
}

// GetThresholdUnitOk returns a tuple with the ThresholdUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetThresholdUnitOk() (*string, bool) {
	if o == nil || IsNil(o.ThresholdUnit) {
		return nil, false
	}
	return o.ThresholdUnit, true
}

// HasThresholdUnit returns a boolean if a field has been set.
func (o *AlertDto2) HasThresholdUnit() bool {
	if o != nil && !IsNil(o.ThresholdUnit) {
		return true
	}

	return false
}

// SetThresholdUnit gets a reference to the given string and assigns it to the ThresholdUnit field.
func (o *AlertDto2) SetThresholdUnit(v string) {
	o.ThresholdUnit = &v
}

// GetThresholdValue returns the ThresholdValue field value if set, zero value otherwise.
func (o *AlertDto2) GetThresholdValue() string {
	if o == nil || IsNil(o.ThresholdValue) {
		var ret string
		return ret
	}
	return *o.ThresholdValue
}

// GetThresholdValueOk returns a tuple with the ThresholdValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetThresholdValueOk() (*string, bool) {
	if o == nil || IsNil(o.ThresholdValue) {
		return nil, false
	}
	return o.ThresholdValue, true
}

// HasThresholdValue returns a boolean if a field has been set.
func (o *AlertDto2) HasThresholdValue() bool {
	if o != nil && !IsNil(o.ThresholdValue) {
		return true
	}

	return false
}

// SetThresholdValue gets a reference to the given string and assigns it to the ThresholdValue field.
func (o *AlertDto2) SetThresholdValue(v string) {
	o.ThresholdValue = &v
}

// GetThresholdValueMax returns the ThresholdValueMax field value if set, zero value otherwise.
func (o *AlertDto2) GetThresholdValueMax() string {
	if o == nil || IsNil(o.ThresholdValueMax) {
		var ret string
		return ret
	}
	return *o.ThresholdValueMax
}

// GetThresholdValueMaxOk returns a tuple with the ThresholdValueMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetThresholdValueMaxOk() (*string, bool) {
	if o == nil || IsNil(o.ThresholdValueMax) {
		return nil, false
	}
	return o.ThresholdValueMax, true
}

// HasThresholdValueMax returns a boolean if a field has been set.
func (o *AlertDto2) HasThresholdValueMax() bool {
	if o != nil && !IsNil(o.ThresholdValueMax) {
		return true
	}

	return false
}

// SetThresholdValueMax gets a reference to the given string and assigns it to the ThresholdValueMax field.
func (o *AlertDto2) SetThresholdValueMax(v string) {
	o.ThresholdValueMax = &v
}

// GetThresholdValueMin returns the ThresholdValueMin field value if set, zero value otherwise.
func (o *AlertDto2) GetThresholdValueMin() string {
	if o == nil || IsNil(o.ThresholdValueMin) {
		var ret string
		return ret
	}
	return *o.ThresholdValueMin
}

// GetThresholdValueMinOk returns a tuple with the ThresholdValueMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetThresholdValueMinOk() (*string, bool) {
	if o == nil || IsNil(o.ThresholdValueMin) {
		return nil, false
	}
	return o.ThresholdValueMin, true
}

// HasThresholdValueMin returns a boolean if a field has been set.
func (o *AlertDto2) HasThresholdValueMin() bool {
	if o != nil && !IsNil(o.ThresholdValueMin) {
		return true
	}

	return false
}

// SetThresholdValueMin gets a reference to the given string and assigns it to the ThresholdValueMin field.
func (o *AlertDto2) SetThresholdValueMin(v string) {
	o.ThresholdValueMin = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *AlertDto2) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *AlertDto2) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *AlertDto2) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetTimeacknowledged returns the Timeacknowledged field value if set, zero value otherwise.
func (o *AlertDto2) GetTimeacknowledged() string {
	if o == nil || IsNil(o.Timeacknowledged) {
		var ret string
		return ret
	}
	return *o.Timeacknowledged
}

// GetTimeacknowledgedOk returns a tuple with the Timeacknowledged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetTimeacknowledgedOk() (*string, bool) {
	if o == nil || IsNil(o.Timeacknowledged) {
		return nil, false
	}
	return o.Timeacknowledged, true
}

// HasTimeacknowledged returns a boolean if a field has been set.
func (o *AlertDto2) HasTimeacknowledged() bool {
	if o != nil && !IsNil(o.Timeacknowledged) {
		return true
	}

	return false
}

// SetTimeacknowledged gets a reference to the given string and assigns it to the Timeacknowledged field.
func (o *AlertDto2) SetTimeacknowledged(v string) {
	o.Timeacknowledged = &v
}

// GetTimeprocessed returns the Timeprocessed field value if set, zero value otherwise.
func (o *AlertDto2) GetTimeprocessed() string {
	if o == nil || IsNil(o.Timeprocessed) {
		var ret string
		return ret
	}
	return *o.Timeprocessed
}

// GetTimeprocessedOk returns a tuple with the Timeprocessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetTimeprocessedOk() (*string, bool) {
	if o == nil || IsNil(o.Timeprocessed) {
		return nil, false
	}
	return o.Timeprocessed, true
}

// HasTimeprocessed returns a boolean if a field has been set.
func (o *AlertDto2) HasTimeprocessed() bool {
	if o != nil && !IsNil(o.Timeprocessed) {
		return true
	}

	return false
}

// SetTimeprocessed gets a reference to the given string and assigns it to the Timeprocessed field.
func (o *AlertDto2) SetTimeprocessed(v string) {
	o.Timeprocessed = &v
}

// GetTimetriggeredMilisec returns the TimetriggeredMilisec field value if set, zero value otherwise.
func (o *AlertDto2) GetTimetriggeredMilisec() string {
	if o == nil || IsNil(o.TimetriggeredMilisec) {
		var ret string
		return ret
	}
	return *o.TimetriggeredMilisec
}

// GetTimetriggeredMilisecOk returns a tuple with the TimetriggeredMilisec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetTimetriggeredMilisecOk() (*string, bool) {
	if o == nil || IsNil(o.TimetriggeredMilisec) {
		return nil, false
	}
	return o.TimetriggeredMilisec, true
}

// HasTimetriggeredMilisec returns a boolean if a field has been set.
func (o *AlertDto2) HasTimetriggeredMilisec() bool {
	if o != nil && !IsNil(o.TimetriggeredMilisec) {
		return true
	}

	return false
}

// SetTimetriggeredMilisec gets a reference to the given string and assigns it to the TimetriggeredMilisec field.
func (o *AlertDto2) SetTimetriggeredMilisec(v string) {
	o.TimetriggeredMilisec = &v
}

// GetTriggeredOn returns the TriggeredOn field value if set, zero value otherwise.
func (o *AlertDto2) GetTriggeredOn() float32 {
	if o == nil || IsNil(o.TriggeredOn) {
		var ret float32
		return ret
	}
	return *o.TriggeredOn
}

// GetTriggeredOnOk returns a tuple with the TriggeredOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetTriggeredOnOk() (*float32, bool) {
	if o == nil || IsNil(o.TriggeredOn) {
		return nil, false
	}
	return o.TriggeredOn, true
}

// HasTriggeredOn returns a boolean if a field has been set.
func (o *AlertDto2) HasTriggeredOn() bool {
	if o != nil && !IsNil(o.TriggeredOn) {
		return true
	}

	return false
}

// SetTriggeredOn gets a reference to the given float32 and assigns it to the TriggeredOn field.
func (o *AlertDto2) SetTriggeredOn(v float32) {
	o.TriggeredOn = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AlertDto2) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AlertDto2) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AlertDto2) SetType(v string) {
	o.Type = &v
}

// GetUom returns the Uom field value if set, zero value otherwise.
func (o *AlertDto2) GetUom() string {
	if o == nil || IsNil(o.Uom) {
		var ret string
		return ret
	}
	return *o.Uom
}

// GetUomOk returns a tuple with the Uom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetUomOk() (*string, bool) {
	if o == nil || IsNil(o.Uom) {
		return nil, false
	}
	return o.Uom, true
}

// HasUom returns a boolean if a field has been set.
func (o *AlertDto2) HasUom() bool {
	if o != nil && !IsNil(o.Uom) {
		return true
	}

	return false
}

// SetUom gets a reference to the given string and assigns it to the Uom field.
func (o *AlertDto2) SetUom(v string) {
	o.Uom = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *AlertDto2) GetYear() string {
	if o == nil || IsNil(o.Year) {
		var ret string
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDto2) GetYearOk() (*string, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *AlertDto2) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given string and assigns it to the Year field.
func (o *AlertDto2) SetYear(v string) {
	o.Year = &v
}

func (o AlertDto2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertDto2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNo) {
		toSerialize["accountNo"] = o.AccountNo
	}
	if !IsNil(o.Acknowledge) {
		toSerialize["acknowledge"] = o.Acknowledge
	}
	if !IsNil(o.AffectedCustomerAsset) {
		toSerialize["affectedCustomerAsset"] = o.AffectedCustomerAsset
	}
	if !IsNil(o.AlertType) {
		toSerialize["alertType"] = o.AlertType
	}
	if !IsNil(o.AlertTypeName) {
		toSerialize["alertTypeName"] = o.AlertTypeName
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.Assetclassification) {
		toSerialize["assetclassification"] = o.Assetclassification
	}
	if !IsNil(o.Assetname) {
		toSerialize["assetname"] = o.Assetname
	}
	if !IsNil(o.Assettype) {
		toSerialize["assettype"] = o.Assettype
	}
	if !IsNil(o.ConditionalAlert) {
		toSerialize["conditionalAlert"] = o.ConditionalAlert
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if !IsNil(o.Currentvalue) {
		toSerialize["currentvalue"] = o.Currentvalue
	}
	if !IsNil(o.Eventtype) {
		toSerialize["eventtype"] = o.Eventtype
	}
	if !IsNil(o.Ibx) {
		toSerialize["ibx"] = o.Ibx
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Lastmaintenance) {
		toSerialize["lastmaintenance"] = o.Lastmaintenance
	}
	if !IsNil(o.Metro) {
		toSerialize["metro"] = o.Metro
	}
	if !IsNil(o.ModifiedOn) {
		toSerialize["modifiedOn"] = o.ModifiedOn
	}
	if !IsNil(o.NotificationType) {
		toSerialize["notificationType"] = o.NotificationType
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Relatedincidents) {
		toSerialize["relatedincidents"] = o.Relatedincidents
	}
	if !IsNil(o.Resiliency) {
		toSerialize["resiliency"] = o.Resiliency
	}
	if !IsNil(o.Section) {
		toSerialize["section"] = o.Section
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Tagid) {
		toSerialize["tagid"] = o.Tagid
	}
	if !IsNil(o.ThresholdUnit) {
		toSerialize["thresholdUnit"] = o.ThresholdUnit
	}
	if !IsNil(o.ThresholdValue) {
		toSerialize["thresholdValue"] = o.ThresholdValue
	}
	if !IsNil(o.ThresholdValueMax) {
		toSerialize["thresholdValueMax"] = o.ThresholdValueMax
	}
	if !IsNil(o.ThresholdValueMin) {
		toSerialize["thresholdValueMin"] = o.ThresholdValueMin
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !IsNil(o.Timeacknowledged) {
		toSerialize["timeacknowledged"] = o.Timeacknowledged
	}
	if !IsNil(o.Timeprocessed) {
		toSerialize["timeprocessed"] = o.Timeprocessed
	}
	if !IsNil(o.TimetriggeredMilisec) {
		toSerialize["timetriggeredMilisec"] = o.TimetriggeredMilisec
	}
	if !IsNil(o.TriggeredOn) {
		toSerialize["triggeredOn"] = o.TriggeredOn
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Uom) {
		toSerialize["uom"] = o.Uom
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AlertDto2) UnmarshalJSON(data []byte) (err error) {
	varAlertDto2 := _AlertDto2{}

	err = json.Unmarshal(data, &varAlertDto2)

	if err != nil {
		return err
	}

	*o = AlertDto2(varAlertDto2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountNo")
		delete(additionalProperties, "acknowledge")
		delete(additionalProperties, "affectedCustomerAsset")
		delete(additionalProperties, "alertType")
		delete(additionalProperties, "alertTypeName")
		delete(additionalProperties, "asset")
		delete(additionalProperties, "assetclassification")
		delete(additionalProperties, "assetname")
		delete(additionalProperties, "assettype")
		delete(additionalProperties, "conditionalAlert")
		delete(additionalProperties, "country")
		delete(additionalProperties, "createdOn")
		delete(additionalProperties, "currentvalue")
		delete(additionalProperties, "eventtype")
		delete(additionalProperties, "ibx")
		delete(additionalProperties, "id")
		delete(additionalProperties, "lastmaintenance")
		delete(additionalProperties, "metro")
		delete(additionalProperties, "modifiedOn")
		delete(additionalProperties, "notificationType")
		delete(additionalProperties, "region")
		delete(additionalProperties, "relatedincidents")
		delete(additionalProperties, "resiliency")
		delete(additionalProperties, "section")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "tagid")
		delete(additionalProperties, "thresholdUnit")
		delete(additionalProperties, "thresholdValue")
		delete(additionalProperties, "thresholdValueMax")
		delete(additionalProperties, "thresholdValueMin")
		delete(additionalProperties, "timeZone")
		delete(additionalProperties, "timeacknowledged")
		delete(additionalProperties, "timeprocessed")
		delete(additionalProperties, "timetriggeredMilisec")
		delete(additionalProperties, "triggeredOn")
		delete(additionalProperties, "type")
		delete(additionalProperties, "uom")
		delete(additionalProperties, "year")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAlertDto2 struct {
	value *AlertDto2
	isSet bool
}

func (v NullableAlertDto2) Get() *AlertDto2 {
	return v.value
}

func (v *NullableAlertDto2) Set(val *AlertDto2) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDto2) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDto2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDto2(val *AlertDto2) *NullableAlertDto2 {
	return &NullableAlertDto2{value: val, isSet: true}
}

func (v NullableAlertDto2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDto2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


