/*
DCIM Power APIs

Empower yourself with DCIM Power APIs. Use them to get current and trending information on power consumption by assets. These APIs return the power consumption info for all level values, given a customer account number, IBX and level type of ibx - cage, cabinet or circuit. Trending power data returns the kVA power draw and max allowed (%) for the given asset. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the PowerCurrentPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PowerCurrentPostRequest{}

// PowerCurrentPostRequest date and corresponding values 
type PowerCurrentPostRequest struct {
	//  Customer Account Number
	AccountNo *string `json:"accountNo,omitempty"`
	// trending values
	Ibx *string `json:"ibx,omitempty"`
	LevelType *PowerCurrentPostRequestLevelType `json:"levelType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PowerCurrentPostRequest PowerCurrentPostRequest

// NewPowerCurrentPostRequest instantiates a new PowerCurrentPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerCurrentPostRequest() *PowerCurrentPostRequest {
	this := PowerCurrentPostRequest{}
	return &this
}

// NewPowerCurrentPostRequestWithDefaults instantiates a new PowerCurrentPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerCurrentPostRequestWithDefaults() *PowerCurrentPostRequest {
	this := PowerCurrentPostRequest{}
	return &this
}

// GetAccountNo returns the AccountNo field value if set, zero value otherwise.
func (o *PowerCurrentPostRequest) GetAccountNo() string {
	if o == nil || IsNil(o.AccountNo) {
		var ret string
		return ret
	}
	return *o.AccountNo
}

// GetAccountNoOk returns a tuple with the AccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerCurrentPostRequest) GetAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNo) {
		return nil, false
	}
	return o.AccountNo, true
}

// HasAccountNo returns a boolean if a field has been set.
func (o *PowerCurrentPostRequest) HasAccountNo() bool {
	if o != nil && !IsNil(o.AccountNo) {
		return true
	}

	return false
}

// SetAccountNo gets a reference to the given string and assigns it to the AccountNo field.
func (o *PowerCurrentPostRequest) SetAccountNo(v string) {
	o.AccountNo = &v
}

// GetIbx returns the Ibx field value if set, zero value otherwise.
func (o *PowerCurrentPostRequest) GetIbx() string {
	if o == nil || IsNil(o.Ibx) {
		var ret string
		return ret
	}
	return *o.Ibx
}

// GetIbxOk returns a tuple with the Ibx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerCurrentPostRequest) GetIbxOk() (*string, bool) {
	if o == nil || IsNil(o.Ibx) {
		return nil, false
	}
	return o.Ibx, true
}

// HasIbx returns a boolean if a field has been set.
func (o *PowerCurrentPostRequest) HasIbx() bool {
	if o != nil && !IsNil(o.Ibx) {
		return true
	}

	return false
}

// SetIbx gets a reference to the given string and assigns it to the Ibx field.
func (o *PowerCurrentPostRequest) SetIbx(v string) {
	o.Ibx = &v
}

// GetLevelType returns the LevelType field value if set, zero value otherwise.
func (o *PowerCurrentPostRequest) GetLevelType() PowerCurrentPostRequestLevelType {
	if o == nil || IsNil(o.LevelType) {
		var ret PowerCurrentPostRequestLevelType
		return ret
	}
	return *o.LevelType
}

// GetLevelTypeOk returns a tuple with the LevelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerCurrentPostRequest) GetLevelTypeOk() (*PowerCurrentPostRequestLevelType, bool) {
	if o == nil || IsNil(o.LevelType) {
		return nil, false
	}
	return o.LevelType, true
}

// HasLevelType returns a boolean if a field has been set.
func (o *PowerCurrentPostRequest) HasLevelType() bool {
	if o != nil && !IsNil(o.LevelType) {
		return true
	}

	return false
}

// SetLevelType gets a reference to the given PowerCurrentPostRequestLevelType and assigns it to the LevelType field.
func (o *PowerCurrentPostRequest) SetLevelType(v PowerCurrentPostRequestLevelType) {
	o.LevelType = &v
}

func (o PowerCurrentPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PowerCurrentPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNo) {
		toSerialize["accountNo"] = o.AccountNo
	}
	if !IsNil(o.Ibx) {
		toSerialize["ibx"] = o.Ibx
	}
	if !IsNil(o.LevelType) {
		toSerialize["levelType"] = o.LevelType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PowerCurrentPostRequest) UnmarshalJSON(data []byte) (err error) {
	varPowerCurrentPostRequest := _PowerCurrentPostRequest{}

	err = json.Unmarshal(data, &varPowerCurrentPostRequest)

	if err != nil {
		return err
	}

	*o = PowerCurrentPostRequest(varPowerCurrentPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountNo")
		delete(additionalProperties, "ibx")
		delete(additionalProperties, "levelType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePowerCurrentPostRequest struct {
	value *PowerCurrentPostRequest
	isSet bool
}

func (v NullablePowerCurrentPostRequest) Get() *PowerCurrentPostRequest {
	return v.value
}

func (v *NullablePowerCurrentPostRequest) Set(val *PowerCurrentPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerCurrentPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerCurrentPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerCurrentPostRequest(val *PowerCurrentPostRequest) *NullablePowerCurrentPostRequest {
	return &NullablePowerCurrentPostRequest{value: val, isSet: true}
}

func (v NullablePowerCurrentPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerCurrentPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


