/*
DCIM Power APIs

Empower yourself with DCIM Power APIs. Use them to get current and trending information on power consumption by assets. These APIs return the power consumption info for all level values, given a customer account number, IBX and level type of ibx - cage, cabinet or circuit. Trending power data returns the kVA power draw and max allowed (%) for the given asset. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the AzureChannelConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureChannelConfiguration{}

// AzureChannelConfiguration The configuration for an 'AZURE' channel
type AzureChannelConfiguration struct {
	BatchSize *int32 `json:"batchSize,omitempty"`
	NumberOfConcurrentCalls *int32 `json:"numberOfConcurrentCalls,omitempty"`
	NumberOfRetries *int32 `json:"numberOfRetries,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AzureChannelConfiguration AzureChannelConfiguration

// NewAzureChannelConfiguration instantiates a new AzureChannelConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureChannelConfiguration() *AzureChannelConfiguration {
	this := AzureChannelConfiguration{}
	return &this
}

// NewAzureChannelConfigurationWithDefaults instantiates a new AzureChannelConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureChannelConfigurationWithDefaults() *AzureChannelConfiguration {
	this := AzureChannelConfiguration{}
	return &this
}

// GetBatchSize returns the BatchSize field value if set, zero value otherwise.
func (o *AzureChannelConfiguration) GetBatchSize() int32 {
	if o == nil || IsNil(o.BatchSize) {
		var ret int32
		return ret
	}
	return *o.BatchSize
}

// GetBatchSizeOk returns a tuple with the BatchSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureChannelConfiguration) GetBatchSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.BatchSize) {
		return nil, false
	}
	return o.BatchSize, true
}

// HasBatchSize returns a boolean if a field has been set.
func (o *AzureChannelConfiguration) HasBatchSize() bool {
	if o != nil && !IsNil(o.BatchSize) {
		return true
	}

	return false
}

// SetBatchSize gets a reference to the given int32 and assigns it to the BatchSize field.
func (o *AzureChannelConfiguration) SetBatchSize(v int32) {
	o.BatchSize = &v
}

// GetNumberOfConcurrentCalls returns the NumberOfConcurrentCalls field value if set, zero value otherwise.
func (o *AzureChannelConfiguration) GetNumberOfConcurrentCalls() int32 {
	if o == nil || IsNil(o.NumberOfConcurrentCalls) {
		var ret int32
		return ret
	}
	return *o.NumberOfConcurrentCalls
}

// GetNumberOfConcurrentCallsOk returns a tuple with the NumberOfConcurrentCalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureChannelConfiguration) GetNumberOfConcurrentCallsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfConcurrentCalls) {
		return nil, false
	}
	return o.NumberOfConcurrentCalls, true
}

// HasNumberOfConcurrentCalls returns a boolean if a field has been set.
func (o *AzureChannelConfiguration) HasNumberOfConcurrentCalls() bool {
	if o != nil && !IsNil(o.NumberOfConcurrentCalls) {
		return true
	}

	return false
}

// SetNumberOfConcurrentCalls gets a reference to the given int32 and assigns it to the NumberOfConcurrentCalls field.
func (o *AzureChannelConfiguration) SetNumberOfConcurrentCalls(v int32) {
	o.NumberOfConcurrentCalls = &v
}

// GetNumberOfRetries returns the NumberOfRetries field value if set, zero value otherwise.
func (o *AzureChannelConfiguration) GetNumberOfRetries() int32 {
	if o == nil || IsNil(o.NumberOfRetries) {
		var ret int32
		return ret
	}
	return *o.NumberOfRetries
}

// GetNumberOfRetriesOk returns a tuple with the NumberOfRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureChannelConfiguration) GetNumberOfRetriesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfRetries) {
		return nil, false
	}
	return o.NumberOfRetries, true
}

// HasNumberOfRetries returns a boolean if a field has been set.
func (o *AzureChannelConfiguration) HasNumberOfRetries() bool {
	if o != nil && !IsNil(o.NumberOfRetries) {
		return true
	}

	return false
}

// SetNumberOfRetries gets a reference to the given int32 and assigns it to the NumberOfRetries field.
func (o *AzureChannelConfiguration) SetNumberOfRetries(v int32) {
	o.NumberOfRetries = &v
}

func (o AzureChannelConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureChannelConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatchSize) {
		toSerialize["batchSize"] = o.BatchSize
	}
	if !IsNil(o.NumberOfConcurrentCalls) {
		toSerialize["numberOfConcurrentCalls"] = o.NumberOfConcurrentCalls
	}
	if !IsNil(o.NumberOfRetries) {
		toSerialize["numberOfRetries"] = o.NumberOfRetries
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AzureChannelConfiguration) UnmarshalJSON(data []byte) (err error) {
	varAzureChannelConfiguration := _AzureChannelConfiguration{}

	err = json.Unmarshal(data, &varAzureChannelConfiguration)

	if err != nil {
		return err
	}

	*o = AzureChannelConfiguration(varAzureChannelConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "batchSize")
		delete(additionalProperties, "numberOfConcurrentCalls")
		delete(additionalProperties, "numberOfRetries")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAzureChannelConfiguration struct {
	value *AzureChannelConfiguration
	isSet bool
}

func (v NullableAzureChannelConfiguration) Get() *AzureChannelConfiguration {
	return v.value
}

func (v *NullableAzureChannelConfiguration) Set(val *AzureChannelConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureChannelConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureChannelConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureChannelConfiguration(val *AzureChannelConfiguration) *NullableAzureChannelConfiguration {
	return &NullableAzureChannelConfiguration{value: val, isSet: true}
}

func (v NullableAzureChannelConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureChannelConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


