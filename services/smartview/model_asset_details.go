/*
DCIM Power APIs

Empower yourself with DCIM Power APIs. Use them to get current and trending information on power consumption by assets. These APIs return the power consumption info for all level values, given a customer account number, IBX and level type of ibx - cage, cabinet or circuit. Trending power data returns the kVA power draw and max allowed (%) for the given asset. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the AssetDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetDetails{}

// AssetDetails Asset Details includes Tag Points with Data for the asset
type AssetDetails struct {
	// Datetime when the latest alarm was processed on the asset
	AlarmLastProcessedTime *string `json:"alarmLastProcessedTime,omitempty"`
	// Datetime when the latest alarm was triggered on the asset
	AlarmLastTriggeredTime *string `json:"alarmLastTriggeredTime,omitempty"`
	// asset id for the Asset
	AssetId *string `json:"assetId,omitempty"`
	// Template Name for the asset
	AssetType *string `json:"assetType,omitempty"`
	// Equipment Model Number
	EquipmentModelNumber *string `json:"equipmentModelNumber,omitempty"`
	// Equipment Serial Number
	EquipmentSerialNumber *string `json:"equipmentSerialNumber,omitempty"`
	// Datetime when the machine had its last maintenance
	LastMaintenanceDate *string `json:"lastMaintenanceDate,omitempty"`
	// Manufacturer name for the Asset
	ManufacturerName *string `json:"manufacturerName,omitempty"`
	// List of tag points for the Asset
	Tags []TagPointDataArray `json:"tags,omitempty"`
	// Time zone for the user
	UserPrefTimeZone *string `json:"userPrefTimeZone,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AssetDetails AssetDetails

// NewAssetDetails instantiates a new AssetDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetDetails() *AssetDetails {
	this := AssetDetails{}
	return &this
}

// NewAssetDetailsWithDefaults instantiates a new AssetDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetDetailsWithDefaults() *AssetDetails {
	this := AssetDetails{}
	return &this
}

// GetAlarmLastProcessedTime returns the AlarmLastProcessedTime field value if set, zero value otherwise.
func (o *AssetDetails) GetAlarmLastProcessedTime() string {
	if o == nil || IsNil(o.AlarmLastProcessedTime) {
		var ret string
		return ret
	}
	return *o.AlarmLastProcessedTime
}

// GetAlarmLastProcessedTimeOk returns a tuple with the AlarmLastProcessedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetAlarmLastProcessedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AlarmLastProcessedTime) {
		return nil, false
	}
	return o.AlarmLastProcessedTime, true
}

// HasAlarmLastProcessedTime returns a boolean if a field has been set.
func (o *AssetDetails) HasAlarmLastProcessedTime() bool {
	if o != nil && !IsNil(o.AlarmLastProcessedTime) {
		return true
	}

	return false
}

// SetAlarmLastProcessedTime gets a reference to the given string and assigns it to the AlarmLastProcessedTime field.
func (o *AssetDetails) SetAlarmLastProcessedTime(v string) {
	o.AlarmLastProcessedTime = &v
}

// GetAlarmLastTriggeredTime returns the AlarmLastTriggeredTime field value if set, zero value otherwise.
func (o *AssetDetails) GetAlarmLastTriggeredTime() string {
	if o == nil || IsNil(o.AlarmLastTriggeredTime) {
		var ret string
		return ret
	}
	return *o.AlarmLastTriggeredTime
}

// GetAlarmLastTriggeredTimeOk returns a tuple with the AlarmLastTriggeredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetAlarmLastTriggeredTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AlarmLastTriggeredTime) {
		return nil, false
	}
	return o.AlarmLastTriggeredTime, true
}

// HasAlarmLastTriggeredTime returns a boolean if a field has been set.
func (o *AssetDetails) HasAlarmLastTriggeredTime() bool {
	if o != nil && !IsNil(o.AlarmLastTriggeredTime) {
		return true
	}

	return false
}

// SetAlarmLastTriggeredTime gets a reference to the given string and assigns it to the AlarmLastTriggeredTime field.
func (o *AssetDetails) SetAlarmLastTriggeredTime(v string) {
	o.AlarmLastTriggeredTime = &v
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *AssetDetails) GetAssetId() string {
	if o == nil || IsNil(o.AssetId) {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetId) {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *AssetDetails) HasAssetId() bool {
	if o != nil && !IsNil(o.AssetId) {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *AssetDetails) SetAssetId(v string) {
	o.AssetId = &v
}

// GetAssetType returns the AssetType field value if set, zero value otherwise.
func (o *AssetDetails) GetAssetType() string {
	if o == nil || IsNil(o.AssetType) {
		var ret string
		return ret
	}
	return *o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetAssetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AssetType) {
		return nil, false
	}
	return o.AssetType, true
}

// HasAssetType returns a boolean if a field has been set.
func (o *AssetDetails) HasAssetType() bool {
	if o != nil && !IsNil(o.AssetType) {
		return true
	}

	return false
}

// SetAssetType gets a reference to the given string and assigns it to the AssetType field.
func (o *AssetDetails) SetAssetType(v string) {
	o.AssetType = &v
}

// GetEquipmentModelNumber returns the EquipmentModelNumber field value if set, zero value otherwise.
func (o *AssetDetails) GetEquipmentModelNumber() string {
	if o == nil || IsNil(o.EquipmentModelNumber) {
		var ret string
		return ret
	}
	return *o.EquipmentModelNumber
}

// GetEquipmentModelNumberOk returns a tuple with the EquipmentModelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetEquipmentModelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EquipmentModelNumber) {
		return nil, false
	}
	return o.EquipmentModelNumber, true
}

// HasEquipmentModelNumber returns a boolean if a field has been set.
func (o *AssetDetails) HasEquipmentModelNumber() bool {
	if o != nil && !IsNil(o.EquipmentModelNumber) {
		return true
	}

	return false
}

// SetEquipmentModelNumber gets a reference to the given string and assigns it to the EquipmentModelNumber field.
func (o *AssetDetails) SetEquipmentModelNumber(v string) {
	o.EquipmentModelNumber = &v
}

// GetEquipmentSerialNumber returns the EquipmentSerialNumber field value if set, zero value otherwise.
func (o *AssetDetails) GetEquipmentSerialNumber() string {
	if o == nil || IsNil(o.EquipmentSerialNumber) {
		var ret string
		return ret
	}
	return *o.EquipmentSerialNumber
}

// GetEquipmentSerialNumberOk returns a tuple with the EquipmentSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetEquipmentSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EquipmentSerialNumber) {
		return nil, false
	}
	return o.EquipmentSerialNumber, true
}

// HasEquipmentSerialNumber returns a boolean if a field has been set.
func (o *AssetDetails) HasEquipmentSerialNumber() bool {
	if o != nil && !IsNil(o.EquipmentSerialNumber) {
		return true
	}

	return false
}

// SetEquipmentSerialNumber gets a reference to the given string and assigns it to the EquipmentSerialNumber field.
func (o *AssetDetails) SetEquipmentSerialNumber(v string) {
	o.EquipmentSerialNumber = &v
}

// GetLastMaintenanceDate returns the LastMaintenanceDate field value if set, zero value otherwise.
func (o *AssetDetails) GetLastMaintenanceDate() string {
	if o == nil || IsNil(o.LastMaintenanceDate) {
		var ret string
		return ret
	}
	return *o.LastMaintenanceDate
}

// GetLastMaintenanceDateOk returns a tuple with the LastMaintenanceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetLastMaintenanceDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastMaintenanceDate) {
		return nil, false
	}
	return o.LastMaintenanceDate, true
}

// HasLastMaintenanceDate returns a boolean if a field has been set.
func (o *AssetDetails) HasLastMaintenanceDate() bool {
	if o != nil && !IsNil(o.LastMaintenanceDate) {
		return true
	}

	return false
}

// SetLastMaintenanceDate gets a reference to the given string and assigns it to the LastMaintenanceDate field.
func (o *AssetDetails) SetLastMaintenanceDate(v string) {
	o.LastMaintenanceDate = &v
}

// GetManufacturerName returns the ManufacturerName field value if set, zero value otherwise.
func (o *AssetDetails) GetManufacturerName() string {
	if o == nil || IsNil(o.ManufacturerName) {
		var ret string
		return ret
	}
	return *o.ManufacturerName
}

// GetManufacturerNameOk returns a tuple with the ManufacturerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetManufacturerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ManufacturerName) {
		return nil, false
	}
	return o.ManufacturerName, true
}

// HasManufacturerName returns a boolean if a field has been set.
func (o *AssetDetails) HasManufacturerName() bool {
	if o != nil && !IsNil(o.ManufacturerName) {
		return true
	}

	return false
}

// SetManufacturerName gets a reference to the given string and assigns it to the ManufacturerName field.
func (o *AssetDetails) SetManufacturerName(v string) {
	o.ManufacturerName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AssetDetails) GetTags() []TagPointDataArray {
	if o == nil || IsNil(o.Tags) {
		var ret []TagPointDataArray
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetTagsOk() ([]TagPointDataArray, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AssetDetails) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagPointDataArray and assigns it to the Tags field.
func (o *AssetDetails) SetTags(v []TagPointDataArray) {
	o.Tags = v
}

// GetUserPrefTimeZone returns the UserPrefTimeZone field value if set, zero value otherwise.
func (o *AssetDetails) GetUserPrefTimeZone() string {
	if o == nil || IsNil(o.UserPrefTimeZone) {
		var ret string
		return ret
	}
	return *o.UserPrefTimeZone
}

// GetUserPrefTimeZoneOk returns a tuple with the UserPrefTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetails) GetUserPrefTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.UserPrefTimeZone) {
		return nil, false
	}
	return o.UserPrefTimeZone, true
}

// HasUserPrefTimeZone returns a boolean if a field has been set.
func (o *AssetDetails) HasUserPrefTimeZone() bool {
	if o != nil && !IsNil(o.UserPrefTimeZone) {
		return true
	}

	return false
}

// SetUserPrefTimeZone gets a reference to the given string and assigns it to the UserPrefTimeZone field.
func (o *AssetDetails) SetUserPrefTimeZone(v string) {
	o.UserPrefTimeZone = &v
}

func (o AssetDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlarmLastProcessedTime) {
		toSerialize["alarmLastProcessedTime"] = o.AlarmLastProcessedTime
	}
	if !IsNil(o.AlarmLastTriggeredTime) {
		toSerialize["alarmLastTriggeredTime"] = o.AlarmLastTriggeredTime
	}
	if !IsNil(o.AssetId) {
		toSerialize["assetId"] = o.AssetId
	}
	if !IsNil(o.AssetType) {
		toSerialize["assetType"] = o.AssetType
	}
	if !IsNil(o.EquipmentModelNumber) {
		toSerialize["equipmentModelNumber"] = o.EquipmentModelNumber
	}
	if !IsNil(o.EquipmentSerialNumber) {
		toSerialize["equipmentSerialNumber"] = o.EquipmentSerialNumber
	}
	if !IsNil(o.LastMaintenanceDate) {
		toSerialize["lastMaintenanceDate"] = o.LastMaintenanceDate
	}
	if !IsNil(o.ManufacturerName) {
		toSerialize["manufacturerName"] = o.ManufacturerName
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UserPrefTimeZone) {
		toSerialize["userPrefTimeZone"] = o.UserPrefTimeZone
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetDetails) UnmarshalJSON(data []byte) (err error) {
	varAssetDetails := _AssetDetails{}

	err = json.Unmarshal(data, &varAssetDetails)

	if err != nil {
		return err
	}

	*o = AssetDetails(varAssetDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "alarmLastProcessedTime")
		delete(additionalProperties, "alarmLastTriggeredTime")
		delete(additionalProperties, "assetId")
		delete(additionalProperties, "assetType")
		delete(additionalProperties, "equipmentModelNumber")
		delete(additionalProperties, "equipmentSerialNumber")
		delete(additionalProperties, "lastMaintenanceDate")
		delete(additionalProperties, "manufacturerName")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "userPrefTimeZone")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetDetails struct {
	value *AssetDetails
	isSet bool
}

func (v NullableAssetDetails) Get() *AssetDetails {
	return v.value
}

func (v *NullableAssetDetails) Set(val *AssetDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetDetails(val *AssetDetails) *NullableAssetDetails {
	return &NullableAssetDetails{value: val, isSet: true}
}

func (v NullableAssetDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


