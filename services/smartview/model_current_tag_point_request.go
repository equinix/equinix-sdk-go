/*
Smart View Environmental API

Empower yourself with Environmental APIs. The API makes it possible to fetch current environmental data including humidity and temperature for a single sensor (identified by IBX code and sensor ID) or for all the sensors within an IBX (identified by IBX code) in a paginated way. When fetching all sensor readings you can apply additional sort criteria.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the CurrentTagPointRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CurrentTagPointRequest{}

// CurrentTagPointRequest request object for tagpoint/current POST request
type CurrentTagPointRequest struct {
	// customer account number
	AccountNo *string `json:"accountNo,omitempty"`
	// ibx code
	Ibx *string `json:"ibx,omitempty"`
	TagIds []string `json:"tagIds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CurrentTagPointRequest CurrentTagPointRequest

// NewCurrentTagPointRequest instantiates a new CurrentTagPointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurrentTagPointRequest() *CurrentTagPointRequest {
	this := CurrentTagPointRequest{}
	return &this
}

// NewCurrentTagPointRequestWithDefaults instantiates a new CurrentTagPointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurrentTagPointRequestWithDefaults() *CurrentTagPointRequest {
	this := CurrentTagPointRequest{}
	return &this
}

// GetAccountNo returns the AccountNo field value if set, zero value otherwise.
func (o *CurrentTagPointRequest) GetAccountNo() string {
	if o == nil || IsNil(o.AccountNo) {
		var ret string
		return ret
	}
	return *o.AccountNo
}

// GetAccountNoOk returns a tuple with the AccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentTagPointRequest) GetAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNo) {
		return nil, false
	}
	return o.AccountNo, true
}

// HasAccountNo returns a boolean if a field has been set.
func (o *CurrentTagPointRequest) HasAccountNo() bool {
	if o != nil && !IsNil(o.AccountNo) {
		return true
	}

	return false
}

// SetAccountNo gets a reference to the given string and assigns it to the AccountNo field.
func (o *CurrentTagPointRequest) SetAccountNo(v string) {
	o.AccountNo = &v
}

// GetIbx returns the Ibx field value if set, zero value otherwise.
func (o *CurrentTagPointRequest) GetIbx() string {
	if o == nil || IsNil(o.Ibx) {
		var ret string
		return ret
	}
	return *o.Ibx
}

// GetIbxOk returns a tuple with the Ibx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentTagPointRequest) GetIbxOk() (*string, bool) {
	if o == nil || IsNil(o.Ibx) {
		return nil, false
	}
	return o.Ibx, true
}

// HasIbx returns a boolean if a field has been set.
func (o *CurrentTagPointRequest) HasIbx() bool {
	if o != nil && !IsNil(o.Ibx) {
		return true
	}

	return false
}

// SetIbx gets a reference to the given string and assigns it to the Ibx field.
func (o *CurrentTagPointRequest) SetIbx(v string) {
	o.Ibx = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *CurrentTagPointRequest) GetTagIds() []string {
	if o == nil || IsNil(o.TagIds) {
		var ret []string
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentTagPointRequest) GetTagIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *CurrentTagPointRequest) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *CurrentTagPointRequest) SetTagIds(v []string) {
	o.TagIds = v
}

func (o CurrentTagPointRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CurrentTagPointRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNo) {
		toSerialize["accountNo"] = o.AccountNo
	}
	if !IsNil(o.Ibx) {
		toSerialize["ibx"] = o.Ibx
	}
	if !IsNil(o.TagIds) {
		toSerialize["tagIds"] = o.TagIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CurrentTagPointRequest) UnmarshalJSON(data []byte) (err error) {
	varCurrentTagPointRequest := _CurrentTagPointRequest{}

	err = json.Unmarshal(data, &varCurrentTagPointRequest)

	if err != nil {
		return err
	}

	*o = CurrentTagPointRequest(varCurrentTagPointRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountNo")
		delete(additionalProperties, "ibx")
		delete(additionalProperties, "tagIds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCurrentTagPointRequest struct {
	value *CurrentTagPointRequest
	isSet bool
}

func (v NullableCurrentTagPointRequest) Get() *CurrentTagPointRequest {
	return v.value
}

func (v *NullableCurrentTagPointRequest) Set(val *CurrentTagPointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCurrentTagPointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCurrentTagPointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurrentTagPointRequest(val *CurrentTagPointRequest) *NullableCurrentTagPointRequest {
	return &NullableCurrentTagPointRequest{value: val, isSet: true}
}

func (v NullableCurrentTagPointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurrentTagPointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


