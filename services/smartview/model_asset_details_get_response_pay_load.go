/*
Smart View Environmental API

Empower yourself with Environmental APIs. The API makes it possible to fetch current environmental data including humidity and temperature for a single sensor (identified by IBX code and sensor ID) or for all the sensors within an IBX (identified by IBX code) in a paginated way. When fetching all sensor readings you can apply additional sort criteria.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the AssetDetailsGetResponsePayLoad type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetDetailsGetResponsePayLoad{}

// AssetDetailsGetResponsePayLoad struct for AssetDetailsGetResponsePayLoad
type AssetDetailsGetResponsePayLoad struct {
	// Datetime when the latest alarm was processed on the asset
	AlarmLastProcessedTime *string `json:"alarmLastProcessedTime,omitempty"`
	// Datetime when the latest alarm was triggered on the asset
	AlarmLastTriggeredTime *string `json:"alarmLastTriggeredTime,omitempty"`
	// asset id for the Asset
	AssetId *string `json:"assetId,omitempty"`
	// Template Name for the asset
	AssetType *string `json:"assetType,omitempty"`
	// Equipment Model Number
	EquipmentModelNumber *string `json:"equipmentModelNumber,omitempty"`
	// Equipment Serial Number
	EquipmentSerialNumber *string `json:"equipmentSerialNumber,omitempty"`
	// Datetime when the machine had its last maintenance
	LastMaintenanceDate *string `json:"lastMaintenanceDate,omitempty"`
	// Manufacturer name for the Asset
	ManufacturerName *string `json:"manufacturerName,omitempty"`
	// List of tag points for the Asset
	Tags []TagPointDataArray `json:"tags,omitempty"`
	// Time zone for the user
	UserPrefTimeZone *string `json:"userPrefTimeZone,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AssetDetailsGetResponsePayLoad AssetDetailsGetResponsePayLoad

// NewAssetDetailsGetResponsePayLoad instantiates a new AssetDetailsGetResponsePayLoad object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetDetailsGetResponsePayLoad() *AssetDetailsGetResponsePayLoad {
	this := AssetDetailsGetResponsePayLoad{}
	return &this
}

// NewAssetDetailsGetResponsePayLoadWithDefaults instantiates a new AssetDetailsGetResponsePayLoad object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetDetailsGetResponsePayLoadWithDefaults() *AssetDetailsGetResponsePayLoad {
	this := AssetDetailsGetResponsePayLoad{}
	return &this
}

// GetAlarmLastProcessedTime returns the AlarmLastProcessedTime field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetAlarmLastProcessedTime() string {
	if o == nil || IsNil(o.AlarmLastProcessedTime) {
		var ret string
		return ret
	}
	return *o.AlarmLastProcessedTime
}

// GetAlarmLastProcessedTimeOk returns a tuple with the AlarmLastProcessedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetAlarmLastProcessedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AlarmLastProcessedTime) {
		return nil, false
	}
	return o.AlarmLastProcessedTime, true
}

// HasAlarmLastProcessedTime returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasAlarmLastProcessedTime() bool {
	if o != nil && !IsNil(o.AlarmLastProcessedTime) {
		return true
	}

	return false
}

// SetAlarmLastProcessedTime gets a reference to the given string and assigns it to the AlarmLastProcessedTime field.
func (o *AssetDetailsGetResponsePayLoad) SetAlarmLastProcessedTime(v string) {
	o.AlarmLastProcessedTime = &v
}

// GetAlarmLastTriggeredTime returns the AlarmLastTriggeredTime field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetAlarmLastTriggeredTime() string {
	if o == nil || IsNil(o.AlarmLastTriggeredTime) {
		var ret string
		return ret
	}
	return *o.AlarmLastTriggeredTime
}

// GetAlarmLastTriggeredTimeOk returns a tuple with the AlarmLastTriggeredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetAlarmLastTriggeredTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AlarmLastTriggeredTime) {
		return nil, false
	}
	return o.AlarmLastTriggeredTime, true
}

// HasAlarmLastTriggeredTime returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasAlarmLastTriggeredTime() bool {
	if o != nil && !IsNil(o.AlarmLastTriggeredTime) {
		return true
	}

	return false
}

// SetAlarmLastTriggeredTime gets a reference to the given string and assigns it to the AlarmLastTriggeredTime field.
func (o *AssetDetailsGetResponsePayLoad) SetAlarmLastTriggeredTime(v string) {
	o.AlarmLastTriggeredTime = &v
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetAssetId() string {
	if o == nil || IsNil(o.AssetId) {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetId) {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasAssetId() bool {
	if o != nil && !IsNil(o.AssetId) {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *AssetDetailsGetResponsePayLoad) SetAssetId(v string) {
	o.AssetId = &v
}

// GetAssetType returns the AssetType field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetAssetType() string {
	if o == nil || IsNil(o.AssetType) {
		var ret string
		return ret
	}
	return *o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetAssetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AssetType) {
		return nil, false
	}
	return o.AssetType, true
}

// HasAssetType returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasAssetType() bool {
	if o != nil && !IsNil(o.AssetType) {
		return true
	}

	return false
}

// SetAssetType gets a reference to the given string and assigns it to the AssetType field.
func (o *AssetDetailsGetResponsePayLoad) SetAssetType(v string) {
	o.AssetType = &v
}

// GetEquipmentModelNumber returns the EquipmentModelNumber field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetEquipmentModelNumber() string {
	if o == nil || IsNil(o.EquipmentModelNumber) {
		var ret string
		return ret
	}
	return *o.EquipmentModelNumber
}

// GetEquipmentModelNumberOk returns a tuple with the EquipmentModelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetEquipmentModelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EquipmentModelNumber) {
		return nil, false
	}
	return o.EquipmentModelNumber, true
}

// HasEquipmentModelNumber returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasEquipmentModelNumber() bool {
	if o != nil && !IsNil(o.EquipmentModelNumber) {
		return true
	}

	return false
}

// SetEquipmentModelNumber gets a reference to the given string and assigns it to the EquipmentModelNumber field.
func (o *AssetDetailsGetResponsePayLoad) SetEquipmentModelNumber(v string) {
	o.EquipmentModelNumber = &v
}

// GetEquipmentSerialNumber returns the EquipmentSerialNumber field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetEquipmentSerialNumber() string {
	if o == nil || IsNil(o.EquipmentSerialNumber) {
		var ret string
		return ret
	}
	return *o.EquipmentSerialNumber
}

// GetEquipmentSerialNumberOk returns a tuple with the EquipmentSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetEquipmentSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EquipmentSerialNumber) {
		return nil, false
	}
	return o.EquipmentSerialNumber, true
}

// HasEquipmentSerialNumber returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasEquipmentSerialNumber() bool {
	if o != nil && !IsNil(o.EquipmentSerialNumber) {
		return true
	}

	return false
}

// SetEquipmentSerialNumber gets a reference to the given string and assigns it to the EquipmentSerialNumber field.
func (o *AssetDetailsGetResponsePayLoad) SetEquipmentSerialNumber(v string) {
	o.EquipmentSerialNumber = &v
}

// GetLastMaintenanceDate returns the LastMaintenanceDate field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetLastMaintenanceDate() string {
	if o == nil || IsNil(o.LastMaintenanceDate) {
		var ret string
		return ret
	}
	return *o.LastMaintenanceDate
}

// GetLastMaintenanceDateOk returns a tuple with the LastMaintenanceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetLastMaintenanceDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastMaintenanceDate) {
		return nil, false
	}
	return o.LastMaintenanceDate, true
}

// HasLastMaintenanceDate returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasLastMaintenanceDate() bool {
	if o != nil && !IsNil(o.LastMaintenanceDate) {
		return true
	}

	return false
}

// SetLastMaintenanceDate gets a reference to the given string and assigns it to the LastMaintenanceDate field.
func (o *AssetDetailsGetResponsePayLoad) SetLastMaintenanceDate(v string) {
	o.LastMaintenanceDate = &v
}

// GetManufacturerName returns the ManufacturerName field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetManufacturerName() string {
	if o == nil || IsNil(o.ManufacturerName) {
		var ret string
		return ret
	}
	return *o.ManufacturerName
}

// GetManufacturerNameOk returns a tuple with the ManufacturerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetManufacturerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ManufacturerName) {
		return nil, false
	}
	return o.ManufacturerName, true
}

// HasManufacturerName returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasManufacturerName() bool {
	if o != nil && !IsNil(o.ManufacturerName) {
		return true
	}

	return false
}

// SetManufacturerName gets a reference to the given string and assigns it to the ManufacturerName field.
func (o *AssetDetailsGetResponsePayLoad) SetManufacturerName(v string) {
	o.ManufacturerName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetTags() []TagPointDataArray {
	if o == nil || IsNil(o.Tags) {
		var ret []TagPointDataArray
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetTagsOk() ([]TagPointDataArray, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagPointDataArray and assigns it to the Tags field.
func (o *AssetDetailsGetResponsePayLoad) SetTags(v []TagPointDataArray) {
	o.Tags = v
}

// GetUserPrefTimeZone returns the UserPrefTimeZone field value if set, zero value otherwise.
func (o *AssetDetailsGetResponsePayLoad) GetUserPrefTimeZone() string {
	if o == nil || IsNil(o.UserPrefTimeZone) {
		var ret string
		return ret
	}
	return *o.UserPrefTimeZone
}

// GetUserPrefTimeZoneOk returns a tuple with the UserPrefTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDetailsGetResponsePayLoad) GetUserPrefTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.UserPrefTimeZone) {
		return nil, false
	}
	return o.UserPrefTimeZone, true
}

// HasUserPrefTimeZone returns a boolean if a field has been set.
func (o *AssetDetailsGetResponsePayLoad) HasUserPrefTimeZone() bool {
	if o != nil && !IsNil(o.UserPrefTimeZone) {
		return true
	}

	return false
}

// SetUserPrefTimeZone gets a reference to the given string and assigns it to the UserPrefTimeZone field.
func (o *AssetDetailsGetResponsePayLoad) SetUserPrefTimeZone(v string) {
	o.UserPrefTimeZone = &v
}

func (o AssetDetailsGetResponsePayLoad) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetDetailsGetResponsePayLoad) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlarmLastProcessedTime) {
		toSerialize["alarmLastProcessedTime"] = o.AlarmLastProcessedTime
	}
	if !IsNil(o.AlarmLastTriggeredTime) {
		toSerialize["alarmLastTriggeredTime"] = o.AlarmLastTriggeredTime
	}
	if !IsNil(o.AssetId) {
		toSerialize["assetId"] = o.AssetId
	}
	if !IsNil(o.AssetType) {
		toSerialize["assetType"] = o.AssetType
	}
	if !IsNil(o.EquipmentModelNumber) {
		toSerialize["equipmentModelNumber"] = o.EquipmentModelNumber
	}
	if !IsNil(o.EquipmentSerialNumber) {
		toSerialize["equipmentSerialNumber"] = o.EquipmentSerialNumber
	}
	if !IsNil(o.LastMaintenanceDate) {
		toSerialize["lastMaintenanceDate"] = o.LastMaintenanceDate
	}
	if !IsNil(o.ManufacturerName) {
		toSerialize["manufacturerName"] = o.ManufacturerName
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UserPrefTimeZone) {
		toSerialize["userPrefTimeZone"] = o.UserPrefTimeZone
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssetDetailsGetResponsePayLoad) UnmarshalJSON(data []byte) (err error) {
	varAssetDetailsGetResponsePayLoad := _AssetDetailsGetResponsePayLoad{}

	err = json.Unmarshal(data, &varAssetDetailsGetResponsePayLoad)

	if err != nil {
		return err
	}

	*o = AssetDetailsGetResponsePayLoad(varAssetDetailsGetResponsePayLoad)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "alarmLastProcessedTime")
		delete(additionalProperties, "alarmLastTriggeredTime")
		delete(additionalProperties, "assetId")
		delete(additionalProperties, "assetType")
		delete(additionalProperties, "equipmentModelNumber")
		delete(additionalProperties, "equipmentSerialNumber")
		delete(additionalProperties, "lastMaintenanceDate")
		delete(additionalProperties, "manufacturerName")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "userPrefTimeZone")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssetDetailsGetResponsePayLoad struct {
	value *AssetDetailsGetResponsePayLoad
	isSet bool
}

func (v NullableAssetDetailsGetResponsePayLoad) Get() *AssetDetailsGetResponsePayLoad {
	return v.value
}

func (v *NullableAssetDetailsGetResponsePayLoad) Set(val *AssetDetailsGetResponsePayLoad) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetDetailsGetResponsePayLoad) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetDetailsGetResponsePayLoad) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetDetailsGetResponsePayLoad(val *AssetDetailsGetResponsePayLoad) *NullableAssetDetailsGetResponsePayLoad {
	return &NullableAssetDetailsGetResponsePayLoad{value: val, isSet: true}
}

func (v NullableAssetDetailsGetResponsePayLoad) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetDetailsGetResponsePayLoad) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


