/*
Smart View Environmental API

Empower yourself with Environmental APIs. The API makes it possible to fetch current environmental data including humidity and temperature for a single sensor (identified by IBX code and sensor ID) or for all the sensors within an IBX (identified by IBX code) in a paginated way. When fetching all sensor readings you can apply additional sort criteria.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the AlarmThresholdDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlarmThresholdDetails{}

// AlarmThresholdDetails threshold details
type AlarmThresholdDetails struct {
	// threshold message
	Message *string `json:"message,omitempty"`
	// threshold state limit
	StateLimit *string `json:"stateLimit,omitempty"`
	// threshold unit
	Unit *string `json:"unit,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AlarmThresholdDetails AlarmThresholdDetails

// NewAlarmThresholdDetails instantiates a new AlarmThresholdDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlarmThresholdDetails() *AlarmThresholdDetails {
	this := AlarmThresholdDetails{}
	return &this
}

// NewAlarmThresholdDetailsWithDefaults instantiates a new AlarmThresholdDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlarmThresholdDetailsWithDefaults() *AlarmThresholdDetails {
	this := AlarmThresholdDetails{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AlarmThresholdDetails) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlarmThresholdDetails) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AlarmThresholdDetails) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AlarmThresholdDetails) SetMessage(v string) {
	o.Message = &v
}

// GetStateLimit returns the StateLimit field value if set, zero value otherwise.
func (o *AlarmThresholdDetails) GetStateLimit() string {
	if o == nil || IsNil(o.StateLimit) {
		var ret string
		return ret
	}
	return *o.StateLimit
}

// GetStateLimitOk returns a tuple with the StateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlarmThresholdDetails) GetStateLimitOk() (*string, bool) {
	if o == nil || IsNil(o.StateLimit) {
		return nil, false
	}
	return o.StateLimit, true
}

// HasStateLimit returns a boolean if a field has been set.
func (o *AlarmThresholdDetails) HasStateLimit() bool {
	if o != nil && !IsNil(o.StateLimit) {
		return true
	}

	return false
}

// SetStateLimit gets a reference to the given string and assigns it to the StateLimit field.
func (o *AlarmThresholdDetails) SetStateLimit(v string) {
	o.StateLimit = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *AlarmThresholdDetails) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlarmThresholdDetails) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *AlarmThresholdDetails) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *AlarmThresholdDetails) SetUnit(v string) {
	o.Unit = &v
}

func (o AlarmThresholdDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlarmThresholdDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.StateLimit) {
		toSerialize["stateLimit"] = o.StateLimit
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AlarmThresholdDetails) UnmarshalJSON(data []byte) (err error) {
	varAlarmThresholdDetails := _AlarmThresholdDetails{}

	err = json.Unmarshal(data, &varAlarmThresholdDetails)

	if err != nil {
		return err
	}

	*o = AlarmThresholdDetails(varAlarmThresholdDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		delete(additionalProperties, "stateLimit")
		delete(additionalProperties, "unit")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAlarmThresholdDetails struct {
	value *AlarmThresholdDetails
	isSet bool
}

func (v NullableAlarmThresholdDetails) Get() *AlarmThresholdDetails {
	return v.value
}

func (v *NullableAlarmThresholdDetails) Set(val *AlarmThresholdDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAlarmThresholdDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAlarmThresholdDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlarmThresholdDetails(val *AlarmThresholdDetails) *NullableAlarmThresholdDetails {
	return &NullableAlarmThresholdDetails{value: val, isSet: true}
}

func (v NullableAlarmThresholdDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlarmThresholdDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


