/*
DCIM Power APIs

Empower yourself with DCIM Power APIs. Use them to get current and trending information on power consumption by assets. These APIs return the power consumption info for all level values, given a customer account number, IBX and level type of ibx - cage, cabinet or circuit. Trending power data returns the kVA power draw and max allowed (%) for the given asset. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smartview

import (
	"encoding/json"
)

// checks if the RecipientsArray type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecipientsArray{}

// RecipientsArray struct for RecipientsArray
type RecipientsArray struct {
	Email *bool `json:"email,omitempty"`
	EmailAddress *string `json:"email_address,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	MobilePhoneCode *string `json:"mobilePhoneCode,omitempty"`
	MobilePhoneNumber *string `json:"mobilePhoneNumber,omitempty"`
	Self *bool `json:"self,omitempty"`
	Sms *bool `json:"sms,omitempty"`
	Voice *bool `json:"voice,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RecipientsArray RecipientsArray

// NewRecipientsArray instantiates a new RecipientsArray object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientsArray() *RecipientsArray {
	this := RecipientsArray{}
	return &this
}

// NewRecipientsArrayWithDefaults instantiates a new RecipientsArray object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientsArrayWithDefaults() *RecipientsArray {
	this := RecipientsArray{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *RecipientsArray) GetEmail() bool {
	if o == nil || IsNil(o.Email) {
		var ret bool
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientsArray) GetEmailOk() (*bool, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *RecipientsArray) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given bool and assigns it to the Email field.
func (o *RecipientsArray) SetEmail(v bool) {
	o.Email = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *RecipientsArray) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientsArray) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *RecipientsArray) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *RecipientsArray) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *RecipientsArray) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientsArray) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *RecipientsArray) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *RecipientsArray) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *RecipientsArray) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientsArray) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *RecipientsArray) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *RecipientsArray) SetLastName(v string) {
	o.LastName = &v
}

// GetMobilePhoneCode returns the MobilePhoneCode field value if set, zero value otherwise.
func (o *RecipientsArray) GetMobilePhoneCode() string {
	if o == nil || IsNil(o.MobilePhoneCode) {
		var ret string
		return ret
	}
	return *o.MobilePhoneCode
}

// GetMobilePhoneCodeOk returns a tuple with the MobilePhoneCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientsArray) GetMobilePhoneCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MobilePhoneCode) {
		return nil, false
	}
	return o.MobilePhoneCode, true
}

// HasMobilePhoneCode returns a boolean if a field has been set.
func (o *RecipientsArray) HasMobilePhoneCode() bool {
	if o != nil && !IsNil(o.MobilePhoneCode) {
		return true
	}

	return false
}

// SetMobilePhoneCode gets a reference to the given string and assigns it to the MobilePhoneCode field.
func (o *RecipientsArray) SetMobilePhoneCode(v string) {
	o.MobilePhoneCode = &v
}

// GetMobilePhoneNumber returns the MobilePhoneNumber field value if set, zero value otherwise.
func (o *RecipientsArray) GetMobilePhoneNumber() string {
	if o == nil || IsNil(o.MobilePhoneNumber) {
		var ret string
		return ret
	}
	return *o.MobilePhoneNumber
}

// GetMobilePhoneNumberOk returns a tuple with the MobilePhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientsArray) GetMobilePhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.MobilePhoneNumber) {
		return nil, false
	}
	return o.MobilePhoneNumber, true
}

// HasMobilePhoneNumber returns a boolean if a field has been set.
func (o *RecipientsArray) HasMobilePhoneNumber() bool {
	if o != nil && !IsNil(o.MobilePhoneNumber) {
		return true
	}

	return false
}

// SetMobilePhoneNumber gets a reference to the given string and assigns it to the MobilePhoneNumber field.
func (o *RecipientsArray) SetMobilePhoneNumber(v string) {
	o.MobilePhoneNumber = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *RecipientsArray) GetSelf() bool {
	if o == nil || IsNil(o.Self) {
		var ret bool
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientsArray) GetSelfOk() (*bool, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *RecipientsArray) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given bool and assigns it to the Self field.
func (o *RecipientsArray) SetSelf(v bool) {
	o.Self = &v
}

// GetSms returns the Sms field value if set, zero value otherwise.
func (o *RecipientsArray) GetSms() bool {
	if o == nil || IsNil(o.Sms) {
		var ret bool
		return ret
	}
	return *o.Sms
}

// GetSmsOk returns a tuple with the Sms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientsArray) GetSmsOk() (*bool, bool) {
	if o == nil || IsNil(o.Sms) {
		return nil, false
	}
	return o.Sms, true
}

// HasSms returns a boolean if a field has been set.
func (o *RecipientsArray) HasSms() bool {
	if o != nil && !IsNil(o.Sms) {
		return true
	}

	return false
}

// SetSms gets a reference to the given bool and assigns it to the Sms field.
func (o *RecipientsArray) SetSms(v bool) {
	o.Sms = &v
}

// GetVoice returns the Voice field value if set, zero value otherwise.
func (o *RecipientsArray) GetVoice() bool {
	if o == nil || IsNil(o.Voice) {
		var ret bool
		return ret
	}
	return *o.Voice
}

// GetVoiceOk returns a tuple with the Voice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientsArray) GetVoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.Voice) {
		return nil, false
	}
	return o.Voice, true
}

// HasVoice returns a boolean if a field has been set.
func (o *RecipientsArray) HasVoice() bool {
	if o != nil && !IsNil(o.Voice) {
		return true
	}

	return false
}

// SetVoice gets a reference to the given bool and assigns it to the Voice field.
func (o *RecipientsArray) SetVoice(v bool) {
	o.Voice = &v
}

func (o RecipientsArray) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecipientsArray) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["email_address"] = o.EmailAddress
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.MobilePhoneCode) {
		toSerialize["mobilePhoneCode"] = o.MobilePhoneCode
	}
	if !IsNil(o.MobilePhoneNumber) {
		toSerialize["mobilePhoneNumber"] = o.MobilePhoneNumber
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Sms) {
		toSerialize["sms"] = o.Sms
	}
	if !IsNil(o.Voice) {
		toSerialize["voice"] = o.Voice
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RecipientsArray) UnmarshalJSON(data []byte) (err error) {
	varRecipientsArray := _RecipientsArray{}

	err = json.Unmarshal(data, &varRecipientsArray)

	if err != nil {
		return err
	}

	*o = RecipientsArray(varRecipientsArray)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "email_address")
		delete(additionalProperties, "firstName")
		delete(additionalProperties, "lastName")
		delete(additionalProperties, "mobilePhoneCode")
		delete(additionalProperties, "mobilePhoneNumber")
		delete(additionalProperties, "self")
		delete(additionalProperties, "sms")
		delete(additionalProperties, "voice")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRecipientsArray struct {
	value *RecipientsArray
	isSet bool
}

func (v NullableRecipientsArray) Get() *RecipientsArray {
	return v.value
}

func (v *NullableRecipientsArray) Set(val *RecipientsArray) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientsArray) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientsArray) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientsArray(val *RecipientsArray) *NullableRecipientsArray {
	return &NullableRecipientsArray{value: val, isSet: true}
}

func (v NullableRecipientsArray) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientsArray) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


