/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the CheckCapacityPortRedundancy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckCapacityPortRedundancy{}

// CheckCapacityPortRedundancy Check Capacity Port redundancy configuration
type CheckCapacityPortRedundancy struct {
	Priority             *PortPriority `json:"priority,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CheckCapacityPortRedundancy CheckCapacityPortRedundancy

// NewCheckCapacityPortRedundancy instantiates a new CheckCapacityPortRedundancy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckCapacityPortRedundancy() *CheckCapacityPortRedundancy {
	this := CheckCapacityPortRedundancy{}
	return &this
}

// NewCheckCapacityPortRedundancyWithDefaults instantiates a new CheckCapacityPortRedundancy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckCapacityPortRedundancyWithDefaults() *CheckCapacityPortRedundancy {
	this := CheckCapacityPortRedundancy{}
	return &this
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *CheckCapacityPortRedundancy) GetPriority() PortPriority {
	if o == nil || IsNil(o.Priority) {
		var ret PortPriority
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckCapacityPortRedundancy) GetPriorityOk() (*PortPriority, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *CheckCapacityPortRedundancy) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given PortPriority and assigns it to the Priority field.
func (o *CheckCapacityPortRedundancy) SetPriority(v PortPriority) {
	o.Priority = &v
}

func (o CheckCapacityPortRedundancy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckCapacityPortRedundancy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CheckCapacityPortRedundancy) UnmarshalJSON(data []byte) (err error) {
	varCheckCapacityPortRedundancy := _CheckCapacityPortRedundancy{}

	err = json.Unmarshal(data, &varCheckCapacityPortRedundancy)

	if err != nil {
		return err
	}

	*o = CheckCapacityPortRedundancy(varCheckCapacityPortRedundancy)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "priority")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCheckCapacityPortRedundancy struct {
	value *CheckCapacityPortRedundancy
	isSet bool
}

func (v NullableCheckCapacityPortRedundancy) Get() *CheckCapacityPortRedundancy {
	return v.value
}

func (v *NullableCheckCapacityPortRedundancy) Set(val *CheckCapacityPortRedundancy) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckCapacityPortRedundancy) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckCapacityPortRedundancy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckCapacityPortRedundancy(val *CheckCapacityPortRedundancy) *NullableCheckCapacityPortRedundancy {
	return &NullableCheckCapacityPortRedundancy{value: val, isSet: true}
}

func (v NullableCheckCapacityPortRedundancy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckCapacityPortRedundancy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
