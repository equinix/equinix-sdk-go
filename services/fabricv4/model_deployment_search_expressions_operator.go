/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// DeploymentSearchExpressionsOperator the model 'DeploymentSearchExpressionsOperator'
type DeploymentSearchExpressionsOperator string

// List of DeploymentSearchExpressions_operator
const (
	DEPLOYMENTSEARCHEXPRESSIONSOPERATOR_EQUAL     DeploymentSearchExpressionsOperator = "="
	DEPLOYMENTSEARCHEXPRESSIONSOPERATOR_NOT_EQUAL DeploymentSearchExpressionsOperator = "!="
)

// All allowed values of DeploymentSearchExpressionsOperator enum
var AllowedDeploymentSearchExpressionsOperatorEnumValues = []DeploymentSearchExpressionsOperator{
	"=",
	"!=",
}

func (v *DeploymentSearchExpressionsOperator) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeploymentSearchExpressionsOperator(value)
	for _, existing := range AllowedDeploymentSearchExpressionsOperatorEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeploymentSearchExpressionsOperator", value)
}

// NewDeploymentSearchExpressionsOperatorFromValue returns a pointer to a valid DeploymentSearchExpressionsOperator
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeploymentSearchExpressionsOperatorFromValue(v string) (*DeploymentSearchExpressionsOperator, error) {
	ev := DeploymentSearchExpressionsOperator(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeploymentSearchExpressionsOperator: valid values are %v", v, AllowedDeploymentSearchExpressionsOperatorEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeploymentSearchExpressionsOperator) IsValid() bool {
	for _, existing := range AllowedDeploymentSearchExpressionsOperatorEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DeploymentSearchExpressions_operator value
func (v DeploymentSearchExpressionsOperator) Ptr() *DeploymentSearchExpressionsOperator {
	return &v
}

type NullableDeploymentSearchExpressionsOperator struct {
	value *DeploymentSearchExpressionsOperator
	isSet bool
}

func (v NullableDeploymentSearchExpressionsOperator) Get() *DeploymentSearchExpressionsOperator {
	return v.value
}

func (v *NullableDeploymentSearchExpressionsOperator) Set(val *DeploymentSearchExpressionsOperator) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentSearchExpressionsOperator) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentSearchExpressionsOperator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentSearchExpressionsOperator(val *DeploymentSearchExpressionsOperator) *NullableDeploymentSearchExpressionsOperator {
	return &NullableDeploymentSearchExpressionsOperator{value: val, isSet: true}
}

func (v NullableDeploymentSearchExpressionsOperator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentSearchExpressionsOperator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
