/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the MetroConnectZSideResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetroConnectZSideResponse{}

// MetroConnectZSideResponse Metro Connection ZSide configuration
type MetroConnectZSideResponse struct {
	PatchPanel           *MetroConnectPatchPanel `json:"patchPanel,omitempty"`
	Port                 *MetroConnectPort       `json:"port,omitempty"`
	Loas                 []PortLoa               `json:"loas,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetroConnectZSideResponse MetroConnectZSideResponse

// NewMetroConnectZSideResponse instantiates a new MetroConnectZSideResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetroConnectZSideResponse() *MetroConnectZSideResponse {
	this := MetroConnectZSideResponse{}
	return &this
}

// NewMetroConnectZSideResponseWithDefaults instantiates a new MetroConnectZSideResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetroConnectZSideResponseWithDefaults() *MetroConnectZSideResponse {
	this := MetroConnectZSideResponse{}
	return &this
}

// GetPatchPanel returns the PatchPanel field value if set, zero value otherwise.
func (o *MetroConnectZSideResponse) GetPatchPanel() MetroConnectPatchPanel {
	if o == nil || IsNil(o.PatchPanel) {
		var ret MetroConnectPatchPanel
		return ret
	}
	return *o.PatchPanel
}

// GetPatchPanelOk returns a tuple with the PatchPanel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectZSideResponse) GetPatchPanelOk() (*MetroConnectPatchPanel, bool) {
	if o == nil || IsNil(o.PatchPanel) {
		return nil, false
	}
	return o.PatchPanel, true
}

// HasPatchPanel returns a boolean if a field has been set.
func (o *MetroConnectZSideResponse) HasPatchPanel() bool {
	if o != nil && !IsNil(o.PatchPanel) {
		return true
	}

	return false
}

// SetPatchPanel gets a reference to the given MetroConnectPatchPanel and assigns it to the PatchPanel field.
func (o *MetroConnectZSideResponse) SetPatchPanel(v MetroConnectPatchPanel) {
	o.PatchPanel = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *MetroConnectZSideResponse) GetPort() MetroConnectPort {
	if o == nil || IsNil(o.Port) {
		var ret MetroConnectPort
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectZSideResponse) GetPortOk() (*MetroConnectPort, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *MetroConnectZSideResponse) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given MetroConnectPort and assigns it to the Port field.
func (o *MetroConnectZSideResponse) SetPort(v MetroConnectPort) {
	o.Port = &v
}

// GetLoas returns the Loas field value if set, zero value otherwise.
func (o *MetroConnectZSideResponse) GetLoas() []PortLoa {
	if o == nil || IsNil(o.Loas) {
		var ret []PortLoa
		return ret
	}
	return o.Loas
}

// GetLoasOk returns a tuple with the Loas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectZSideResponse) GetLoasOk() ([]PortLoa, bool) {
	if o == nil || IsNil(o.Loas) {
		return nil, false
	}
	return o.Loas, true
}

// HasLoas returns a boolean if a field has been set.
func (o *MetroConnectZSideResponse) HasLoas() bool {
	if o != nil && !IsNil(o.Loas) {
		return true
	}

	return false
}

// SetLoas gets a reference to the given []PortLoa and assigns it to the Loas field.
func (o *MetroConnectZSideResponse) SetLoas(v []PortLoa) {
	o.Loas = v
}

func (o MetroConnectZSideResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetroConnectZSideResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PatchPanel) {
		toSerialize["patchPanel"] = o.PatchPanel
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Loas) {
		toSerialize["loas"] = o.Loas
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetroConnectZSideResponse) UnmarshalJSON(data []byte) (err error) {
	varMetroConnectZSideResponse := _MetroConnectZSideResponse{}

	err = json.Unmarshal(data, &varMetroConnectZSideResponse)

	if err != nil {
		return err
	}

	*o = MetroConnectZSideResponse(varMetroConnectZSideResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "patchPanel")
		delete(additionalProperties, "port")
		delete(additionalProperties, "loas")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetroConnectZSideResponse struct {
	value *MetroConnectZSideResponse
	isSet bool
}

func (v NullableMetroConnectZSideResponse) Get() *MetroConnectZSideResponse {
	return v.value
}

func (v *NullableMetroConnectZSideResponse) Set(val *MetroConnectZSideResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMetroConnectZSideResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMetroConnectZSideResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetroConnectZSideResponse(val *MetroConnectZSideResponse) *NullableMetroConnectZSideResponse {
	return &NullableMetroConnectZSideResponse{value: val, isSet: true}
}

func (v NullableMetroConnectZSideResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetroConnectZSideResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
