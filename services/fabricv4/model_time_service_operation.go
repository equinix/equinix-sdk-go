/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the TimeServiceOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeServiceOperation{}

// TimeServiceOperation time service operational data
type TimeServiceOperation struct {
	OperationalStatus    *TimeServiceOperationOperationalStatus `json:"operationalStatus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TimeServiceOperation TimeServiceOperation

// NewTimeServiceOperation instantiates a new TimeServiceOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeServiceOperation() *TimeServiceOperation {
	this := TimeServiceOperation{}
	return &this
}

// NewTimeServiceOperationWithDefaults instantiates a new TimeServiceOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeServiceOperationWithDefaults() *TimeServiceOperation {
	this := TimeServiceOperation{}
	return &this
}

// GetOperationalStatus returns the OperationalStatus field value if set, zero value otherwise.
func (o *TimeServiceOperation) GetOperationalStatus() TimeServiceOperationOperationalStatus {
	if o == nil || IsNil(o.OperationalStatus) {
		var ret TimeServiceOperationOperationalStatus
		return ret
	}
	return *o.OperationalStatus
}

// GetOperationalStatusOk returns a tuple with the OperationalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeServiceOperation) GetOperationalStatusOk() (*TimeServiceOperationOperationalStatus, bool) {
	if o == nil || IsNil(o.OperationalStatus) {
		return nil, false
	}
	return o.OperationalStatus, true
}

// HasOperationalStatus returns a boolean if a field has been set.
func (o *TimeServiceOperation) HasOperationalStatus() bool {
	if o != nil && !IsNil(o.OperationalStatus) {
		return true
	}

	return false
}

// SetOperationalStatus gets a reference to the given TimeServiceOperationOperationalStatus and assigns it to the OperationalStatus field.
func (o *TimeServiceOperation) SetOperationalStatus(v TimeServiceOperationOperationalStatus) {
	o.OperationalStatus = &v
}

func (o TimeServiceOperation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeServiceOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperationalStatus) {
		toSerialize["operationalStatus"] = o.OperationalStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TimeServiceOperation) UnmarshalJSON(data []byte) (err error) {
	varTimeServiceOperation := _TimeServiceOperation{}

	err = json.Unmarshal(data, &varTimeServiceOperation)

	if err != nil {
		return err
	}

	*o = TimeServiceOperation(varTimeServiceOperation)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "operationalStatus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTimeServiceOperation struct {
	value *TimeServiceOperation
	isSet bool
}

func (v NullableTimeServiceOperation) Get() *TimeServiceOperation {
	return v.value
}

func (v *NullableTimeServiceOperation) Set(val *TimeServiceOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeServiceOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeServiceOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeServiceOperation(val *TimeServiceOperation) *NullableTimeServiceOperation {
	return &NullableTimeServiceOperation{value: val, isSet: true}
}

func (v NullableTimeServiceOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeServiceOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
