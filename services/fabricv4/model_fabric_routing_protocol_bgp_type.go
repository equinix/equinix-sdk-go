/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// checks if the FabricRoutingProtocolBGPType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FabricRoutingProtocolBGPType{}

// FabricRoutingProtocolBGPType Defines the structure for BGP routing protocol configuration, including protocol type, BGP IPv4 settings, customer ASN, authentication key, and deployment properties.
type FabricRoutingProtocolBGPType struct {
	Type RoutingProtocolBGPTypeType `json:"type"`
	Name *string                    `json:"name,omitempty"`
	// Equinix-assigned route protocol identifier
	Uuid    *string                 `json:"uuid,omitempty"`
	BgpIpv4 FabricBGPConnectionIpv4 `json:"bgpIpv4"`
	// Customer asn
	CustomerAsn int64 `json:"customerAsn"`
	// BGP authorization key
	BgpAuthKey string `json:"bgpAuthKey"`
	// Enable AS number override
	AsOverrideEnabled    *bool               `json:"asOverrideEnabled,omitempty"`
	DeploymentProperties *TopologyProperties `json:"deploymentProperties,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FabricRoutingProtocolBGPType FabricRoutingProtocolBGPType

// NewFabricRoutingProtocolBGPType instantiates a new FabricRoutingProtocolBGPType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFabricRoutingProtocolBGPType(type_ RoutingProtocolBGPTypeType, bgpIpv4 FabricBGPConnectionIpv4, customerAsn int64, bgpAuthKey string) *FabricRoutingProtocolBGPType {
	this := FabricRoutingProtocolBGPType{}
	this.Type = type_
	this.BgpIpv4 = bgpIpv4
	this.CustomerAsn = customerAsn
	this.BgpAuthKey = bgpAuthKey
	return &this
}

// NewFabricRoutingProtocolBGPTypeWithDefaults instantiates a new FabricRoutingProtocolBGPType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFabricRoutingProtocolBGPTypeWithDefaults() *FabricRoutingProtocolBGPType {
	this := FabricRoutingProtocolBGPType{}
	return &this
}

// GetType returns the Type field value
func (o *FabricRoutingProtocolBGPType) GetType() RoutingProtocolBGPTypeType {
	if o == nil {
		var ret RoutingProtocolBGPTypeType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FabricRoutingProtocolBGPType) GetTypeOk() (*RoutingProtocolBGPTypeType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FabricRoutingProtocolBGPType) SetType(v RoutingProtocolBGPTypeType) {
	o.Type = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FabricRoutingProtocolBGPType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricRoutingProtocolBGPType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FabricRoutingProtocolBGPType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FabricRoutingProtocolBGPType) SetName(v string) {
	o.Name = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *FabricRoutingProtocolBGPType) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricRoutingProtocolBGPType) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *FabricRoutingProtocolBGPType) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *FabricRoutingProtocolBGPType) SetUuid(v string) {
	o.Uuid = &v
}

// GetBgpIpv4 returns the BgpIpv4 field value
func (o *FabricRoutingProtocolBGPType) GetBgpIpv4() FabricBGPConnectionIpv4 {
	if o == nil {
		var ret FabricBGPConnectionIpv4
		return ret
	}

	return o.BgpIpv4
}

// GetBgpIpv4Ok returns a tuple with the BgpIpv4 field value
// and a boolean to check if the value has been set.
func (o *FabricRoutingProtocolBGPType) GetBgpIpv4Ok() (*FabricBGPConnectionIpv4, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpIpv4, true
}

// SetBgpIpv4 sets field value
func (o *FabricRoutingProtocolBGPType) SetBgpIpv4(v FabricBGPConnectionIpv4) {
	o.BgpIpv4 = v
}

// GetCustomerAsn returns the CustomerAsn field value
func (o *FabricRoutingProtocolBGPType) GetCustomerAsn() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CustomerAsn
}

// GetCustomerAsnOk returns a tuple with the CustomerAsn field value
// and a boolean to check if the value has been set.
func (o *FabricRoutingProtocolBGPType) GetCustomerAsnOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerAsn, true
}

// SetCustomerAsn sets field value
func (o *FabricRoutingProtocolBGPType) SetCustomerAsn(v int64) {
	o.CustomerAsn = v
}

// GetBgpAuthKey returns the BgpAuthKey field value
func (o *FabricRoutingProtocolBGPType) GetBgpAuthKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BgpAuthKey
}

// GetBgpAuthKeyOk returns a tuple with the BgpAuthKey field value
// and a boolean to check if the value has been set.
func (o *FabricRoutingProtocolBGPType) GetBgpAuthKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpAuthKey, true
}

// SetBgpAuthKey sets field value
func (o *FabricRoutingProtocolBGPType) SetBgpAuthKey(v string) {
	o.BgpAuthKey = v
}

// GetAsOverrideEnabled returns the AsOverrideEnabled field value if set, zero value otherwise.
func (o *FabricRoutingProtocolBGPType) GetAsOverrideEnabled() bool {
	if o == nil || IsNil(o.AsOverrideEnabled) {
		var ret bool
		return ret
	}
	return *o.AsOverrideEnabled
}

// GetAsOverrideEnabledOk returns a tuple with the AsOverrideEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricRoutingProtocolBGPType) GetAsOverrideEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AsOverrideEnabled) {
		return nil, false
	}
	return o.AsOverrideEnabled, true
}

// HasAsOverrideEnabled returns a boolean if a field has been set.
func (o *FabricRoutingProtocolBGPType) HasAsOverrideEnabled() bool {
	if o != nil && !IsNil(o.AsOverrideEnabled) {
		return true
	}

	return false
}

// SetAsOverrideEnabled gets a reference to the given bool and assigns it to the AsOverrideEnabled field.
func (o *FabricRoutingProtocolBGPType) SetAsOverrideEnabled(v bool) {
	o.AsOverrideEnabled = &v
}

// GetDeploymentProperties returns the DeploymentProperties field value if set, zero value otherwise.
func (o *FabricRoutingProtocolBGPType) GetDeploymentProperties() TopologyProperties {
	if o == nil || IsNil(o.DeploymentProperties) {
		var ret TopologyProperties
		return ret
	}
	return *o.DeploymentProperties
}

// GetDeploymentPropertiesOk returns a tuple with the DeploymentProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricRoutingProtocolBGPType) GetDeploymentPropertiesOk() (*TopologyProperties, bool) {
	if o == nil || IsNil(o.DeploymentProperties) {
		return nil, false
	}
	return o.DeploymentProperties, true
}

// HasDeploymentProperties returns a boolean if a field has been set.
func (o *FabricRoutingProtocolBGPType) HasDeploymentProperties() bool {
	if o != nil && !IsNil(o.DeploymentProperties) {
		return true
	}

	return false
}

// SetDeploymentProperties gets a reference to the given TopologyProperties and assigns it to the DeploymentProperties field.
func (o *FabricRoutingProtocolBGPType) SetDeploymentProperties(v TopologyProperties) {
	o.DeploymentProperties = &v
}

func (o FabricRoutingProtocolBGPType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FabricRoutingProtocolBGPType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	toSerialize["bgpIpv4"] = o.BgpIpv4
	toSerialize["customerAsn"] = o.CustomerAsn
	toSerialize["bgpAuthKey"] = o.BgpAuthKey
	if !IsNil(o.AsOverrideEnabled) {
		toSerialize["asOverrideEnabled"] = o.AsOverrideEnabled
	}
	if !IsNil(o.DeploymentProperties) {
		toSerialize["deploymentProperties"] = o.DeploymentProperties
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FabricRoutingProtocolBGPType) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"bgpIpv4",
		"customerAsn",
		"bgpAuthKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFabricRoutingProtocolBGPType := _FabricRoutingProtocolBGPType{}

	err = json.Unmarshal(data, &varFabricRoutingProtocolBGPType)

	if err != nil {
		return err
	}

	*o = FabricRoutingProtocolBGPType(varFabricRoutingProtocolBGPType)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "bgpIpv4")
		delete(additionalProperties, "customerAsn")
		delete(additionalProperties, "bgpAuthKey")
		delete(additionalProperties, "asOverrideEnabled")
		delete(additionalProperties, "deploymentProperties")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFabricRoutingProtocolBGPType struct {
	value *FabricRoutingProtocolBGPType
	isSet bool
}

func (v NullableFabricRoutingProtocolBGPType) Get() *FabricRoutingProtocolBGPType {
	return v.value
}

func (v *NullableFabricRoutingProtocolBGPType) Set(val *FabricRoutingProtocolBGPType) {
	v.value = val
	v.isSet = true
}

func (v NullableFabricRoutingProtocolBGPType) IsSet() bool {
	return v.isSet
}

func (v *NullableFabricRoutingProtocolBGPType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFabricRoutingProtocolBGPType(val *FabricRoutingProtocolBGPType) *NullableFabricRoutingProtocolBGPType {
	return &NullableFabricRoutingProtocolBGPType{value: val, isSet: true}
}

func (v NullableFabricRoutingProtocolBGPType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFabricRoutingProtocolBGPType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
