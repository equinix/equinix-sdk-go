/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// AWSVirtualPrivateGatewayType the model 'AWSVirtualPrivateGatewayType'
type AWSVirtualPrivateGatewayType string

// List of AWSVirtualPrivateGateway_type
const (
	AWSVIRTUALPRIVATEGATEWAYTYPE_VIRTUAL_PRIVATE_GATEWAY AWSVirtualPrivateGatewayType = "VIRTUAL_PRIVATE_GATEWAY"
)

// All allowed values of AWSVirtualPrivateGatewayType enum
var AllowedAWSVirtualPrivateGatewayTypeEnumValues = []AWSVirtualPrivateGatewayType{
	"VIRTUAL_PRIVATE_GATEWAY",
}

func (v *AWSVirtualPrivateGatewayType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AWSVirtualPrivateGatewayType(value)
	for _, existing := range AllowedAWSVirtualPrivateGatewayTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AWSVirtualPrivateGatewayType", value)
}

// NewAWSVirtualPrivateGatewayTypeFromValue returns a pointer to a valid AWSVirtualPrivateGatewayType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAWSVirtualPrivateGatewayTypeFromValue(v string) (*AWSVirtualPrivateGatewayType, error) {
	ev := AWSVirtualPrivateGatewayType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AWSVirtualPrivateGatewayType: valid values are %v", v, AllowedAWSVirtualPrivateGatewayTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AWSVirtualPrivateGatewayType) IsValid() bool {
	for _, existing := range AllowedAWSVirtualPrivateGatewayTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AWSVirtualPrivateGateway_type value
func (v AWSVirtualPrivateGatewayType) Ptr() *AWSVirtualPrivateGatewayType {
	return &v
}

type NullableAWSVirtualPrivateGatewayType struct {
	value *AWSVirtualPrivateGatewayType
	isSet bool
}

func (v NullableAWSVirtualPrivateGatewayType) Get() *AWSVirtualPrivateGatewayType {
	return v.value
}

func (v *NullableAWSVirtualPrivateGatewayType) Set(val *AWSVirtualPrivateGatewayType) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSVirtualPrivateGatewayType) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSVirtualPrivateGatewayType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSVirtualPrivateGatewayType(val *AWSVirtualPrivateGatewayType) *NullableAWSVirtualPrivateGatewayType {
	return &NullableAWSVirtualPrivateGatewayType{value: val, isSet: true}
}

func (v NullableAWSVirtualPrivateGatewayType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSVirtualPrivateGatewayType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
