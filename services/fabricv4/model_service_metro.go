/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the ServiceMetro type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceMetro{}

// ServiceMetro struct for ServiceMetro
type ServiceMetro struct {
	// metro code
	Code *string `json:"code,omitempty"`
	// metro name
	Name *string `json:"name,omitempty"`
	// max VC speed supported in Mbps
	VcBandwidthMax *int32   `json:"vcBandwidthMax,omitempty"`
	Ibxs           []string `json:"ibxs,omitempty"`
	InTrail        *bool    `json:"inTrail,omitempty"`
	// service metro display name
	DisplayName          *string            `json:"displayName,omitempty"`
	SellerRegions        *map[string]string `json:"sellerRegions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceMetro ServiceMetro

// NewServiceMetro instantiates a new ServiceMetro object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceMetro() *ServiceMetro {
	this := ServiceMetro{}
	return &this
}

// NewServiceMetroWithDefaults instantiates a new ServiceMetro object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceMetroWithDefaults() *ServiceMetro {
	this := ServiceMetro{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ServiceMetro) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetro) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ServiceMetro) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ServiceMetro) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceMetro) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetro) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceMetro) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceMetro) SetName(v string) {
	o.Name = &v
}

// GetVcBandwidthMax returns the VcBandwidthMax field value if set, zero value otherwise.
func (o *ServiceMetro) GetVcBandwidthMax() int32 {
	if o == nil || IsNil(o.VcBandwidthMax) {
		var ret int32
		return ret
	}
	return *o.VcBandwidthMax
}

// GetVcBandwidthMaxOk returns a tuple with the VcBandwidthMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetro) GetVcBandwidthMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.VcBandwidthMax) {
		return nil, false
	}
	return o.VcBandwidthMax, true
}

// HasVcBandwidthMax returns a boolean if a field has been set.
func (o *ServiceMetro) HasVcBandwidthMax() bool {
	if o != nil && !IsNil(o.VcBandwidthMax) {
		return true
	}

	return false
}

// SetVcBandwidthMax gets a reference to the given int32 and assigns it to the VcBandwidthMax field.
func (o *ServiceMetro) SetVcBandwidthMax(v int32) {
	o.VcBandwidthMax = &v
}

// GetIbxs returns the Ibxs field value if set, zero value otherwise.
func (o *ServiceMetro) GetIbxs() []string {
	if o == nil || IsNil(o.Ibxs) {
		var ret []string
		return ret
	}
	return o.Ibxs
}

// GetIbxsOk returns a tuple with the Ibxs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetro) GetIbxsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ibxs) {
		return nil, false
	}
	return o.Ibxs, true
}

// HasIbxs returns a boolean if a field has been set.
func (o *ServiceMetro) HasIbxs() bool {
	if o != nil && !IsNil(o.Ibxs) {
		return true
	}

	return false
}

// SetIbxs gets a reference to the given []string and assigns it to the Ibxs field.
func (o *ServiceMetro) SetIbxs(v []string) {
	o.Ibxs = v
}

// GetInTrail returns the InTrail field value if set, zero value otherwise.
func (o *ServiceMetro) GetInTrail() bool {
	if o == nil || IsNil(o.InTrail) {
		var ret bool
		return ret
	}
	return *o.InTrail
}

// GetInTrailOk returns a tuple with the InTrail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetro) GetInTrailOk() (*bool, bool) {
	if o == nil || IsNil(o.InTrail) {
		return nil, false
	}
	return o.InTrail, true
}

// HasInTrail returns a boolean if a field has been set.
func (o *ServiceMetro) HasInTrail() bool {
	if o != nil && !IsNil(o.InTrail) {
		return true
	}

	return false
}

// SetInTrail gets a reference to the given bool and assigns it to the InTrail field.
func (o *ServiceMetro) SetInTrail(v bool) {
	o.InTrail = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ServiceMetro) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetro) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ServiceMetro) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ServiceMetro) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetSellerRegions returns the SellerRegions field value if set, zero value otherwise.
func (o *ServiceMetro) GetSellerRegions() map[string]string {
	if o == nil || IsNil(o.SellerRegions) {
		var ret map[string]string
		return ret
	}
	return *o.SellerRegions
}

// GetSellerRegionsOk returns a tuple with the SellerRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetro) GetSellerRegionsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.SellerRegions) {
		return nil, false
	}
	return o.SellerRegions, true
}

// HasSellerRegions returns a boolean if a field has been set.
func (o *ServiceMetro) HasSellerRegions() bool {
	if o != nil && !IsNil(o.SellerRegions) {
		return true
	}

	return false
}

// SetSellerRegions gets a reference to the given map[string]string and assigns it to the SellerRegions field.
func (o *ServiceMetro) SetSellerRegions(v map[string]string) {
	o.SellerRegions = &v
}

func (o ServiceMetro) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceMetro) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.VcBandwidthMax) {
		toSerialize["vcBandwidthMax"] = o.VcBandwidthMax
	}
	if !IsNil(o.Ibxs) {
		toSerialize["ibxs"] = o.Ibxs
	}
	if !IsNil(o.InTrail) {
		toSerialize["inTrail"] = o.InTrail
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.SellerRegions) {
		toSerialize["sellerRegions"] = o.SellerRegions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceMetro) UnmarshalJSON(data []byte) (err error) {
	varServiceMetro := _ServiceMetro{}

	err = json.Unmarshal(data, &varServiceMetro)

	if err != nil {
		return err
	}

	*o = ServiceMetro(varServiceMetro)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "name")
		delete(additionalProperties, "vcBandwidthMax")
		delete(additionalProperties, "ibxs")
		delete(additionalProperties, "inTrail")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "sellerRegions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceMetro struct {
	value *ServiceMetro
	isSet bool
}

func (v NullableServiceMetro) Get() *ServiceMetro {
	return v.value
}

func (v *NullableServiceMetro) Set(val *ServiceMetro) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceMetro) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceMetro) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceMetro(val *ServiceMetro) *NullableServiceMetro {
	return &NullableServiceMetro{value: val, isSet: true}
}

func (v NullableServiceMetro) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceMetro) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
