/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// checks if the GatewayAttachmentListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayAttachmentListResponse{}

// GatewayAttachmentListResponse struct for GatewayAttachmentListResponse
type GatewayAttachmentListResponse struct {
	Pagination           Pagination                  `json:"pagination"`
	Data                 []GatewayAttachmentResponse `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _GatewayAttachmentListResponse GatewayAttachmentListResponse

// NewGatewayAttachmentListResponse instantiates a new GatewayAttachmentListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayAttachmentListResponse(pagination Pagination, data []GatewayAttachmentResponse) *GatewayAttachmentListResponse {
	this := GatewayAttachmentListResponse{}
	this.Pagination = pagination
	this.Data = data
	return &this
}

// NewGatewayAttachmentListResponseWithDefaults instantiates a new GatewayAttachmentListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayAttachmentListResponseWithDefaults() *GatewayAttachmentListResponse {
	this := GatewayAttachmentListResponse{}
	return &this
}

// GetPagination returns the Pagination field value
func (o *GatewayAttachmentListResponse) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *GatewayAttachmentListResponse) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *GatewayAttachmentListResponse) SetPagination(v Pagination) {
	o.Pagination = v
}

// GetData returns the Data field value
func (o *GatewayAttachmentListResponse) GetData() []GatewayAttachmentResponse {
	if o == nil {
		var ret []GatewayAttachmentResponse
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GatewayAttachmentListResponse) GetDataOk() ([]GatewayAttachmentResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *GatewayAttachmentListResponse) SetData(v []GatewayAttachmentResponse) {
	o.Data = v
}

func (o GatewayAttachmentListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayAttachmentListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pagination"] = o.Pagination
	toSerialize["data"] = o.Data

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayAttachmentListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pagination",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGatewayAttachmentListResponse := _GatewayAttachmentListResponse{}

	err = json.Unmarshal(data, &varGatewayAttachmentListResponse)

	if err != nil {
		return err
	}

	*o = GatewayAttachmentListResponse(varGatewayAttachmentListResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pagination")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayAttachmentListResponse struct {
	value *GatewayAttachmentListResponse
	isSet bool
}

func (v NullableGatewayAttachmentListResponse) Get() *GatewayAttachmentListResponse {
	return v.value
}

func (v *NullableGatewayAttachmentListResponse) Set(val *GatewayAttachmentListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayAttachmentListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayAttachmentListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayAttachmentListResponse(val *GatewayAttachmentListResponse) *NullableGatewayAttachmentListResponse {
	return &NullableGatewayAttachmentListResponse{value: val, isSet: true}
}

func (v NullableGatewayAttachmentListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayAttachmentListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
