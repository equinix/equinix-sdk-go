/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// StreamAssetSortDirection Sorting direction
type StreamAssetSortDirection string

// List of StreamAssetSortDirection
const (
	STREAMASSETSORTDIRECTION_DESC StreamAssetSortDirection = "DESC"
	STREAMASSETSORTDIRECTION_ASC  StreamAssetSortDirection = "ASC"
)

// All allowed values of StreamAssetSortDirection enum
var AllowedStreamAssetSortDirectionEnumValues = []StreamAssetSortDirection{
	"DESC",
	"ASC",
}

func (v *StreamAssetSortDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := StreamAssetSortDirection(value)
	for _, existing := range AllowedStreamAssetSortDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid StreamAssetSortDirection", value)
}

// NewStreamAssetSortDirectionFromValue returns a pointer to a valid StreamAssetSortDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewStreamAssetSortDirectionFromValue(v string) (*StreamAssetSortDirection, error) {
	ev := StreamAssetSortDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for StreamAssetSortDirection: valid values are %v", v, AllowedStreamAssetSortDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StreamAssetSortDirection) IsValid() bool {
	for _, existing := range AllowedStreamAssetSortDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to StreamAssetSortDirection value
func (v StreamAssetSortDirection) Ptr() *StreamAssetSortDirection {
	return &v
}

type NullableStreamAssetSortDirection struct {
	value *StreamAssetSortDirection
	isSet bool
}

func (v NullableStreamAssetSortDirection) Get() *StreamAssetSortDirection {
	return v.value
}

func (v *NullableStreamAssetSortDirection) Set(val *StreamAssetSortDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamAssetSortDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamAssetSortDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamAssetSortDirection(val *StreamAssetSortDirection) *NullableStreamAssetSortDirection {
	return &NullableStreamAssetSortDirection{value: val, isSet: true}
}

func (v NullableStreamAssetSortDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamAssetSortDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
