/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the MetroConnectASide type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetroConnectASide{}

// MetroConnectASide Metro Connection ASide configuration
type MetroConnectASide struct {
	PatchPanel           *MetroConnectPatchPanel `json:"patchPanel,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetroConnectASide MetroConnectASide

// NewMetroConnectASide instantiates a new MetroConnectASide object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetroConnectASide() *MetroConnectASide {
	this := MetroConnectASide{}
	return &this
}

// NewMetroConnectASideWithDefaults instantiates a new MetroConnectASide object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetroConnectASideWithDefaults() *MetroConnectASide {
	this := MetroConnectASide{}
	return &this
}

// GetPatchPanel returns the PatchPanel field value if set, zero value otherwise.
func (o *MetroConnectASide) GetPatchPanel() MetroConnectPatchPanel {
	if o == nil || IsNil(o.PatchPanel) {
		var ret MetroConnectPatchPanel
		return ret
	}
	return *o.PatchPanel
}

// GetPatchPanelOk returns a tuple with the PatchPanel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectASide) GetPatchPanelOk() (*MetroConnectPatchPanel, bool) {
	if o == nil || IsNil(o.PatchPanel) {
		return nil, false
	}
	return o.PatchPanel, true
}

// HasPatchPanel returns a boolean if a field has been set.
func (o *MetroConnectASide) HasPatchPanel() bool {
	if o != nil && !IsNil(o.PatchPanel) {
		return true
	}

	return false
}

// SetPatchPanel gets a reference to the given MetroConnectPatchPanel and assigns it to the PatchPanel field.
func (o *MetroConnectASide) SetPatchPanel(v MetroConnectPatchPanel) {
	o.PatchPanel = &v
}

func (o MetroConnectASide) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetroConnectASide) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PatchPanel) {
		toSerialize["patchPanel"] = o.PatchPanel
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetroConnectASide) UnmarshalJSON(data []byte) (err error) {
	varMetroConnectASide := _MetroConnectASide{}

	err = json.Unmarshal(data, &varMetroConnectASide)

	if err != nil {
		return err
	}

	*o = MetroConnectASide(varMetroConnectASide)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "patchPanel")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetroConnectASide struct {
	value *MetroConnectASide
	isSet bool
}

func (v NullableMetroConnectASide) Get() *MetroConnectASide {
	return v.value
}

func (v *NullableMetroConnectASide) Set(val *MetroConnectASide) {
	v.value = val
	v.isSet = true
}

func (v NullableMetroConnectASide) IsSet() bool {
	return v.isSet
}

func (v *NullableMetroConnectASide) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetroConnectASide(val *MetroConnectASide) *NullableMetroConnectASide {
	return &NullableMetroConnectASide{value: val, isSet: true}
}

func (v NullableMetroConnectASide) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetroConnectASide) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
