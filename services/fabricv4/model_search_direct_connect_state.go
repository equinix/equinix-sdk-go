/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// SearchDirectConnectState the model 'SearchDirectConnectState'
type SearchDirectConnectState string

// List of SearchDirectConnect_state
const (
	SEARCHDIRECTCONNECTSTATE_AVAILABLE SearchDirectConnectState = "Available"
	SEARCHDIRECTCONNECTSTATE_PENDING   SearchDirectConnectState = "Pending"
	SEARCHDIRECTCONNECTSTATE_DELETED   SearchDirectConnectState = "Deleted"
	SEARCHDIRECTCONNECTSTATE_DOWN      SearchDirectConnectState = "Down"
	SEARCHDIRECTCONNECTSTATE_REJECTED  SearchDirectConnectState = "Rejected"
)

// All allowed values of SearchDirectConnectState enum
var AllowedSearchDirectConnectStateEnumValues = []SearchDirectConnectState{
	"Available",
	"Pending",
	"Deleted",
	"Down",
	"Rejected",
}

func (v *SearchDirectConnectState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SearchDirectConnectState(value)
	for _, existing := range AllowedSearchDirectConnectStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SearchDirectConnectState", value)
}

// NewSearchDirectConnectStateFromValue returns a pointer to a valid SearchDirectConnectState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSearchDirectConnectStateFromValue(v string) (*SearchDirectConnectState, error) {
	ev := SearchDirectConnectState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SearchDirectConnectState: valid values are %v", v, AllowedSearchDirectConnectStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SearchDirectConnectState) IsValid() bool {
	for _, existing := range AllowedSearchDirectConnectStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SearchDirectConnect_state value
func (v SearchDirectConnectState) Ptr() *SearchDirectConnectState {
	return &v
}

type NullableSearchDirectConnectState struct {
	value *SearchDirectConnectState
	isSet bool
}

func (v NullableSearchDirectConnectState) Get() *SearchDirectConnectState {
	return v.value
}

func (v *NullableSearchDirectConnectState) Set(val *SearchDirectConnectState) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchDirectConnectState) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchDirectConnectState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchDirectConnectState(val *SearchDirectConnectState) *NullableSearchDirectConnectState {
	return &NullableSearchDirectConnectState{value: val, isSet: true}
}

func (v NullableSearchDirectConnectState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchDirectConnectState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
