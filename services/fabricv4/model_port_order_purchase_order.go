/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the PortOrderPurchaseOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortOrderPurchaseOrder{}

// PortOrderPurchaseOrder purchase order
type PortOrderPurchaseOrder struct {
	// purchase order number
	Number *string `json:"number,omitempty"`
	// purchase order amount
	Amount       *string `json:"amount,omitempty"`
	StartDate    *string `json:"startDate,omitempty"`
	EndDate      *string `json:"endDate,omitempty"`
	AttachmentId *string `json:"attachmentId,omitempty"`
	// Deprecated
	SelectionType        *PortOrderPurchaseOrderSelectionType `json:"selectionType,omitempty"`
	Type                 *PortOrderPurchaseOrderType          `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PortOrderPurchaseOrder PortOrderPurchaseOrder

// NewPortOrderPurchaseOrder instantiates a new PortOrderPurchaseOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortOrderPurchaseOrder() *PortOrderPurchaseOrder {
	this := PortOrderPurchaseOrder{}
	return &this
}

// NewPortOrderPurchaseOrderWithDefaults instantiates a new PortOrderPurchaseOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortOrderPurchaseOrderWithDefaults() *PortOrderPurchaseOrder {
	this := PortOrderPurchaseOrder{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *PortOrderPurchaseOrder) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortOrderPurchaseOrder) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *PortOrderPurchaseOrder) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *PortOrderPurchaseOrder) SetNumber(v string) {
	o.Number = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PortOrderPurchaseOrder) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortOrderPurchaseOrder) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PortOrderPurchaseOrder) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *PortOrderPurchaseOrder) SetAmount(v string) {
	o.Amount = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *PortOrderPurchaseOrder) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortOrderPurchaseOrder) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *PortOrderPurchaseOrder) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *PortOrderPurchaseOrder) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *PortOrderPurchaseOrder) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortOrderPurchaseOrder) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *PortOrderPurchaseOrder) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *PortOrderPurchaseOrder) SetEndDate(v string) {
	o.EndDate = &v
}

// GetAttachmentId returns the AttachmentId field value if set, zero value otherwise.
func (o *PortOrderPurchaseOrder) GetAttachmentId() string {
	if o == nil || IsNil(o.AttachmentId) {
		var ret string
		return ret
	}
	return *o.AttachmentId
}

// GetAttachmentIdOk returns a tuple with the AttachmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortOrderPurchaseOrder) GetAttachmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttachmentId) {
		return nil, false
	}
	return o.AttachmentId, true
}

// HasAttachmentId returns a boolean if a field has been set.
func (o *PortOrderPurchaseOrder) HasAttachmentId() bool {
	if o != nil && !IsNil(o.AttachmentId) {
		return true
	}

	return false
}

// SetAttachmentId gets a reference to the given string and assigns it to the AttachmentId field.
func (o *PortOrderPurchaseOrder) SetAttachmentId(v string) {
	o.AttachmentId = &v
}

// GetSelectionType returns the SelectionType field value if set, zero value otherwise.
// Deprecated
func (o *PortOrderPurchaseOrder) GetSelectionType() PortOrderPurchaseOrderSelectionType {
	if o == nil || IsNil(o.SelectionType) {
		var ret PortOrderPurchaseOrderSelectionType
		return ret
	}
	return *o.SelectionType
}

// GetSelectionTypeOk returns a tuple with the SelectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PortOrderPurchaseOrder) GetSelectionTypeOk() (*PortOrderPurchaseOrderSelectionType, bool) {
	if o == nil || IsNil(o.SelectionType) {
		return nil, false
	}
	return o.SelectionType, true
}

// HasSelectionType returns a boolean if a field has been set.
func (o *PortOrderPurchaseOrder) HasSelectionType() bool {
	if o != nil && !IsNil(o.SelectionType) {
		return true
	}

	return false
}

// SetSelectionType gets a reference to the given PortOrderPurchaseOrderSelectionType and assigns it to the SelectionType field.
// Deprecated
func (o *PortOrderPurchaseOrder) SetSelectionType(v PortOrderPurchaseOrderSelectionType) {
	o.SelectionType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PortOrderPurchaseOrder) GetType() PortOrderPurchaseOrderType {
	if o == nil || IsNil(o.Type) {
		var ret PortOrderPurchaseOrderType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortOrderPurchaseOrder) GetTypeOk() (*PortOrderPurchaseOrderType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PortOrderPurchaseOrder) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given PortOrderPurchaseOrderType and assigns it to the Type field.
func (o *PortOrderPurchaseOrder) SetType(v PortOrderPurchaseOrderType) {
	o.Type = &v
}

func (o PortOrderPurchaseOrder) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortOrderPurchaseOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.AttachmentId) {
		toSerialize["attachmentId"] = o.AttachmentId
	}
	if !IsNil(o.SelectionType) {
		toSerialize["selectionType"] = o.SelectionType
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PortOrderPurchaseOrder) UnmarshalJSON(data []byte) (err error) {
	varPortOrderPurchaseOrder := _PortOrderPurchaseOrder{}

	err = json.Unmarshal(data, &varPortOrderPurchaseOrder)

	if err != nil {
		return err
	}

	*o = PortOrderPurchaseOrder(varPortOrderPurchaseOrder)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "number")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "startDate")
		delete(additionalProperties, "endDate")
		delete(additionalProperties, "attachmentId")
		delete(additionalProperties, "selectionType")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePortOrderPurchaseOrder struct {
	value *PortOrderPurchaseOrder
	isSet bool
}

func (v NullablePortOrderPurchaseOrder) Get() *PortOrderPurchaseOrder {
	return v.value
}

func (v *NullablePortOrderPurchaseOrder) Set(val *PortOrderPurchaseOrder) {
	v.value = val
	v.isSet = true
}

func (v NullablePortOrderPurchaseOrder) IsSet() bool {
	return v.isSet
}

func (v *NullablePortOrderPurchaseOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortOrderPurchaseOrder(val *PortOrderPurchaseOrder) *NullablePortOrderPurchaseOrder {
	return &NullablePortOrderPurchaseOrder{value: val, isSet: true}
}

func (v NullablePortOrderPurchaseOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortOrderPurchaseOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
