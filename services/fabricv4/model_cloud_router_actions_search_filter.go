/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// CloudRouterActionsSearchFilter struct for CloudRouterActionsSearchFilter
type CloudRouterActionsSearchFilter struct {
	CloudRouterActionsSearchExpression *CloudRouterActionsSearchExpression
	CloudRouterActionsSearchOrFilter   *CloudRouterActionsSearchOrFilter
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CloudRouterActionsSearchFilter) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into CloudRouterActionsSearchExpression
	err = json.Unmarshal(data, &dst.CloudRouterActionsSearchExpression)
	if err == nil {
		jsonCloudRouterActionsSearchExpression, _ := json.Marshal(dst.CloudRouterActionsSearchExpression)
		if string(jsonCloudRouterActionsSearchExpression) == "{}" { // empty struct
			dst.CloudRouterActionsSearchExpression = nil
		} else {
			return nil // data stored in dst.CloudRouterActionsSearchExpression, return on the first match
		}
	} else {
		dst.CloudRouterActionsSearchExpression = nil
	}

	// try to unmarshal JSON data into CloudRouterActionsSearchOrFilter
	err = json.Unmarshal(data, &dst.CloudRouterActionsSearchOrFilter)
	if err == nil {
		jsonCloudRouterActionsSearchOrFilter, _ := json.Marshal(dst.CloudRouterActionsSearchOrFilter)
		if string(jsonCloudRouterActionsSearchOrFilter) == "{}" { // empty struct
			dst.CloudRouterActionsSearchOrFilter = nil
		} else {
			return nil // data stored in dst.CloudRouterActionsSearchOrFilter, return on the first match
		}
	} else {
		dst.CloudRouterActionsSearchOrFilter = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CloudRouterActionsSearchFilter)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CloudRouterActionsSearchFilter) MarshalJSON() ([]byte, error) {
	if src.CloudRouterActionsSearchExpression != nil {
		return json.Marshal(&src.CloudRouterActionsSearchExpression)
	}

	if src.CloudRouterActionsSearchOrFilter != nil {
		return json.Marshal(&src.CloudRouterActionsSearchOrFilter)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableCloudRouterActionsSearchFilter struct {
	value *CloudRouterActionsSearchFilter
	isSet bool
}

func (v NullableCloudRouterActionsSearchFilter) Get() *CloudRouterActionsSearchFilter {
	return v.value
}

func (v *NullableCloudRouterActionsSearchFilter) Set(val *CloudRouterActionsSearchFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudRouterActionsSearchFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudRouterActionsSearchFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudRouterActionsSearchFilter(val *CloudRouterActionsSearchFilter) *NullableCloudRouterActionsSearchFilter {
	return &NullableCloudRouterActionsSearchFilter{value: val, isSet: true}
}

func (v NullableCloudRouterActionsSearchFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudRouterActionsSearchFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
