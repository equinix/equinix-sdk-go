/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the CloudRouterForGatewayAttachmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudRouterForGatewayAttachmentResponse{}

// CloudRouterForGatewayAttachmentResponse Response schema showing the Fabric Cloud Router on a Gateway Attachment. This schema defines the structure of the response showing the Cloud Router when a Gateway Attachment is done on it.
type CloudRouterForGatewayAttachmentResponse struct {
	Href                 *string                                    `json:"href,omitempty"`
	Type                 *CloudRouterPostRequestBaseType            `json:"type,omitempty"`
	Uuid                 *string                                    `json:"uuid,omitempty"`
	AttachmentStatus     *GatewayAttachmentResponseAttachmentStatus `json:"attachmentStatus,omitempty"`
	ChangeLog            *Changelog                                 `json:"changeLog,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CloudRouterForGatewayAttachmentResponse CloudRouterForGatewayAttachmentResponse

// NewCloudRouterForGatewayAttachmentResponse instantiates a new CloudRouterForGatewayAttachmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudRouterForGatewayAttachmentResponse() *CloudRouterForGatewayAttachmentResponse {
	this := CloudRouterForGatewayAttachmentResponse{}
	return &this
}

// NewCloudRouterForGatewayAttachmentResponseWithDefaults instantiates a new CloudRouterForGatewayAttachmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudRouterForGatewayAttachmentResponseWithDefaults() *CloudRouterForGatewayAttachmentResponse {
	this := CloudRouterForGatewayAttachmentResponse{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *CloudRouterForGatewayAttachmentResponse) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudRouterForGatewayAttachmentResponse) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *CloudRouterForGatewayAttachmentResponse) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *CloudRouterForGatewayAttachmentResponse) SetHref(v string) {
	o.Href = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CloudRouterForGatewayAttachmentResponse) GetType() CloudRouterPostRequestBaseType {
	if o == nil || IsNil(o.Type) {
		var ret CloudRouterPostRequestBaseType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudRouterForGatewayAttachmentResponse) GetTypeOk() (*CloudRouterPostRequestBaseType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CloudRouterForGatewayAttachmentResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given CloudRouterPostRequestBaseType and assigns it to the Type field.
func (o *CloudRouterForGatewayAttachmentResponse) SetType(v CloudRouterPostRequestBaseType) {
	o.Type = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *CloudRouterForGatewayAttachmentResponse) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudRouterForGatewayAttachmentResponse) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *CloudRouterForGatewayAttachmentResponse) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *CloudRouterForGatewayAttachmentResponse) SetUuid(v string) {
	o.Uuid = &v
}

// GetAttachmentStatus returns the AttachmentStatus field value if set, zero value otherwise.
func (o *CloudRouterForGatewayAttachmentResponse) GetAttachmentStatus() GatewayAttachmentResponseAttachmentStatus {
	if o == nil || IsNil(o.AttachmentStatus) {
		var ret GatewayAttachmentResponseAttachmentStatus
		return ret
	}
	return *o.AttachmentStatus
}

// GetAttachmentStatusOk returns a tuple with the AttachmentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudRouterForGatewayAttachmentResponse) GetAttachmentStatusOk() (*GatewayAttachmentResponseAttachmentStatus, bool) {
	if o == nil || IsNil(o.AttachmentStatus) {
		return nil, false
	}
	return o.AttachmentStatus, true
}

// HasAttachmentStatus returns a boolean if a field has been set.
func (o *CloudRouterForGatewayAttachmentResponse) HasAttachmentStatus() bool {
	if o != nil && !IsNil(o.AttachmentStatus) {
		return true
	}

	return false
}

// SetAttachmentStatus gets a reference to the given GatewayAttachmentResponseAttachmentStatus and assigns it to the AttachmentStatus field.
func (o *CloudRouterForGatewayAttachmentResponse) SetAttachmentStatus(v GatewayAttachmentResponseAttachmentStatus) {
	o.AttachmentStatus = &v
}

// GetChangeLog returns the ChangeLog field value if set, zero value otherwise.
func (o *CloudRouterForGatewayAttachmentResponse) GetChangeLog() Changelog {
	if o == nil || IsNil(o.ChangeLog) {
		var ret Changelog
		return ret
	}
	return *o.ChangeLog
}

// GetChangeLogOk returns a tuple with the ChangeLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudRouterForGatewayAttachmentResponse) GetChangeLogOk() (*Changelog, bool) {
	if o == nil || IsNil(o.ChangeLog) {
		return nil, false
	}
	return o.ChangeLog, true
}

// HasChangeLog returns a boolean if a field has been set.
func (o *CloudRouterForGatewayAttachmentResponse) HasChangeLog() bool {
	if o != nil && !IsNil(o.ChangeLog) {
		return true
	}

	return false
}

// SetChangeLog gets a reference to the given Changelog and assigns it to the ChangeLog field.
func (o *CloudRouterForGatewayAttachmentResponse) SetChangeLog(v Changelog) {
	o.ChangeLog = &v
}

func (o CloudRouterForGatewayAttachmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudRouterForGatewayAttachmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.AttachmentStatus) {
		toSerialize["attachmentStatus"] = o.AttachmentStatus
	}
	if !IsNil(o.ChangeLog) {
		toSerialize["changeLog"] = o.ChangeLog
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CloudRouterForGatewayAttachmentResponse) UnmarshalJSON(data []byte) (err error) {
	varCloudRouterForGatewayAttachmentResponse := _CloudRouterForGatewayAttachmentResponse{}

	err = json.Unmarshal(data, &varCloudRouterForGatewayAttachmentResponse)

	if err != nil {
		return err
	}

	*o = CloudRouterForGatewayAttachmentResponse(varCloudRouterForGatewayAttachmentResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "href")
		delete(additionalProperties, "type")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "attachmentStatus")
		delete(additionalProperties, "changeLog")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCloudRouterForGatewayAttachmentResponse struct {
	value *CloudRouterForGatewayAttachmentResponse
	isSet bool
}

func (v NullableCloudRouterForGatewayAttachmentResponse) Get() *CloudRouterForGatewayAttachmentResponse {
	return v.value
}

func (v *NullableCloudRouterForGatewayAttachmentResponse) Set(val *CloudRouterForGatewayAttachmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudRouterForGatewayAttachmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudRouterForGatewayAttachmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudRouterForGatewayAttachmentResponse(val *CloudRouterForGatewayAttachmentResponse) *NullableCloudRouterForGatewayAttachmentResponse {
	return &NullableCloudRouterForGatewayAttachmentResponse{value: val, isSet: true}
}

func (v NullableCloudRouterForGatewayAttachmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudRouterForGatewayAttachmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
