/*
Equinix Fabric API v4

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the RoutingProtocolBGPData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingProtocolBGPData{}

// RoutingProtocolBGPData struct for RoutingProtocolBGPData
type RoutingProtocolBGPData struct {
	Type    *RoutingProtocolBGPTypeType `json:"type,omitempty"`
	Name    *string                     `json:"name,omitempty"`
	BgpIpv4 *BGPConnectionIpv4          `json:"bgpIpv4,omitempty"`
	BgpIpv6 *BGPConnectionIpv6          `json:"bgpIpv6,omitempty"`
	// Customer asn
	CustomerAsn *int64 `json:"customerAsn,omitempty"`
	// Equinix asn
	EquinixAsn *int64 `json:"equinixAsn,omitempty"`
	// BGP authorization key
	BgpAuthKey *string `json:"bgpAuthKey,omitempty"`
	// Enable AS number override
	AsOverrideEnabled *bool               `json:"asOverrideEnabled,omitempty"`
	Bfd               *RoutingProtocolBFD `json:"bfd,omitempty"`
	// Routing Protocol URI
	Href *string `json:"href,omitempty"`
	// Routing protocol identifier
	Uuid                 *string                      `json:"uuid,omitempty"`
	State                *RoutingProtocolBGPDataState `json:"state,omitempty"`
	Operation            *RoutingProtocolOperation    `json:"operation,omitempty"`
	Change               *RoutingProtocolChange       `json:"change,omitempty"`
	Changelog            *Changelog                   `json:"changelog,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RoutingProtocolBGPData RoutingProtocolBGPData

// NewRoutingProtocolBGPData instantiates a new RoutingProtocolBGPData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingProtocolBGPData() *RoutingProtocolBGPData {
	this := RoutingProtocolBGPData{}
	return &this
}

// NewRoutingProtocolBGPDataWithDefaults instantiates a new RoutingProtocolBGPData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingProtocolBGPDataWithDefaults() *RoutingProtocolBGPData {
	this := RoutingProtocolBGPData{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetType() RoutingProtocolBGPTypeType {
	if o == nil || IsNil(o.Type) {
		var ret RoutingProtocolBGPTypeType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetTypeOk() (*RoutingProtocolBGPTypeType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given RoutingProtocolBGPTypeType and assigns it to the Type field.
func (o *RoutingProtocolBGPData) SetType(v RoutingProtocolBGPTypeType) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RoutingProtocolBGPData) SetName(v string) {
	o.Name = &v
}

// GetBgpIpv4 returns the BgpIpv4 field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetBgpIpv4() BGPConnectionIpv4 {
	if o == nil || IsNil(o.BgpIpv4) {
		var ret BGPConnectionIpv4
		return ret
	}
	return *o.BgpIpv4
}

// GetBgpIpv4Ok returns a tuple with the BgpIpv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetBgpIpv4Ok() (*BGPConnectionIpv4, bool) {
	if o == nil || IsNil(o.BgpIpv4) {
		return nil, false
	}
	return o.BgpIpv4, true
}

// HasBgpIpv4 returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasBgpIpv4() bool {
	if o != nil && !IsNil(o.BgpIpv4) {
		return true
	}

	return false
}

// SetBgpIpv4 gets a reference to the given BGPConnectionIpv4 and assigns it to the BgpIpv4 field.
func (o *RoutingProtocolBGPData) SetBgpIpv4(v BGPConnectionIpv4) {
	o.BgpIpv4 = &v
}

// GetBgpIpv6 returns the BgpIpv6 field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetBgpIpv6() BGPConnectionIpv6 {
	if o == nil || IsNil(o.BgpIpv6) {
		var ret BGPConnectionIpv6
		return ret
	}
	return *o.BgpIpv6
}

// GetBgpIpv6Ok returns a tuple with the BgpIpv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetBgpIpv6Ok() (*BGPConnectionIpv6, bool) {
	if o == nil || IsNil(o.BgpIpv6) {
		return nil, false
	}
	return o.BgpIpv6, true
}

// HasBgpIpv6 returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasBgpIpv6() bool {
	if o != nil && !IsNil(o.BgpIpv6) {
		return true
	}

	return false
}

// SetBgpIpv6 gets a reference to the given BGPConnectionIpv6 and assigns it to the BgpIpv6 field.
func (o *RoutingProtocolBGPData) SetBgpIpv6(v BGPConnectionIpv6) {
	o.BgpIpv6 = &v
}

// GetCustomerAsn returns the CustomerAsn field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetCustomerAsn() int64 {
	if o == nil || IsNil(o.CustomerAsn) {
		var ret int64
		return ret
	}
	return *o.CustomerAsn
}

// GetCustomerAsnOk returns a tuple with the CustomerAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetCustomerAsnOk() (*int64, bool) {
	if o == nil || IsNil(o.CustomerAsn) {
		return nil, false
	}
	return o.CustomerAsn, true
}

// HasCustomerAsn returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasCustomerAsn() bool {
	if o != nil && !IsNil(o.CustomerAsn) {
		return true
	}

	return false
}

// SetCustomerAsn gets a reference to the given int64 and assigns it to the CustomerAsn field.
func (o *RoutingProtocolBGPData) SetCustomerAsn(v int64) {
	o.CustomerAsn = &v
}

// GetEquinixAsn returns the EquinixAsn field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetEquinixAsn() int64 {
	if o == nil || IsNil(o.EquinixAsn) {
		var ret int64
		return ret
	}
	return *o.EquinixAsn
}

// GetEquinixAsnOk returns a tuple with the EquinixAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetEquinixAsnOk() (*int64, bool) {
	if o == nil || IsNil(o.EquinixAsn) {
		return nil, false
	}
	return o.EquinixAsn, true
}

// HasEquinixAsn returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasEquinixAsn() bool {
	if o != nil && !IsNil(o.EquinixAsn) {
		return true
	}

	return false
}

// SetEquinixAsn gets a reference to the given int64 and assigns it to the EquinixAsn field.
func (o *RoutingProtocolBGPData) SetEquinixAsn(v int64) {
	o.EquinixAsn = &v
}

// GetBgpAuthKey returns the BgpAuthKey field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetBgpAuthKey() string {
	if o == nil || IsNil(o.BgpAuthKey) {
		var ret string
		return ret
	}
	return *o.BgpAuthKey
}

// GetBgpAuthKeyOk returns a tuple with the BgpAuthKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetBgpAuthKeyOk() (*string, bool) {
	if o == nil || IsNil(o.BgpAuthKey) {
		return nil, false
	}
	return o.BgpAuthKey, true
}

// HasBgpAuthKey returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasBgpAuthKey() bool {
	if o != nil && !IsNil(o.BgpAuthKey) {
		return true
	}

	return false
}

// SetBgpAuthKey gets a reference to the given string and assigns it to the BgpAuthKey field.
func (o *RoutingProtocolBGPData) SetBgpAuthKey(v string) {
	o.BgpAuthKey = &v
}

// GetAsOverrideEnabled returns the AsOverrideEnabled field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetAsOverrideEnabled() bool {
	if o == nil || IsNil(o.AsOverrideEnabled) {
		var ret bool
		return ret
	}
	return *o.AsOverrideEnabled
}

// GetAsOverrideEnabledOk returns a tuple with the AsOverrideEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetAsOverrideEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AsOverrideEnabled) {
		return nil, false
	}
	return o.AsOverrideEnabled, true
}

// HasAsOverrideEnabled returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasAsOverrideEnabled() bool {
	if o != nil && !IsNil(o.AsOverrideEnabled) {
		return true
	}

	return false
}

// SetAsOverrideEnabled gets a reference to the given bool and assigns it to the AsOverrideEnabled field.
func (o *RoutingProtocolBGPData) SetAsOverrideEnabled(v bool) {
	o.AsOverrideEnabled = &v
}

// GetBfd returns the Bfd field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetBfd() RoutingProtocolBFD {
	if o == nil || IsNil(o.Bfd) {
		var ret RoutingProtocolBFD
		return ret
	}
	return *o.Bfd
}

// GetBfdOk returns a tuple with the Bfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetBfdOk() (*RoutingProtocolBFD, bool) {
	if o == nil || IsNil(o.Bfd) {
		return nil, false
	}
	return o.Bfd, true
}

// HasBfd returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasBfd() bool {
	if o != nil && !IsNil(o.Bfd) {
		return true
	}

	return false
}

// SetBfd gets a reference to the given RoutingProtocolBFD and assigns it to the Bfd field.
func (o *RoutingProtocolBGPData) SetBfd(v RoutingProtocolBFD) {
	o.Bfd = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *RoutingProtocolBGPData) SetHref(v string) {
	o.Href = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *RoutingProtocolBGPData) SetUuid(v string) {
	o.Uuid = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetState() RoutingProtocolBGPDataState {
	if o == nil || IsNil(o.State) {
		var ret RoutingProtocolBGPDataState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetStateOk() (*RoutingProtocolBGPDataState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given RoutingProtocolBGPDataState and assigns it to the State field.
func (o *RoutingProtocolBGPData) SetState(v RoutingProtocolBGPDataState) {
	o.State = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetOperation() RoutingProtocolOperation {
	if o == nil || IsNil(o.Operation) {
		var ret RoutingProtocolOperation
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetOperationOk() (*RoutingProtocolOperation, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given RoutingProtocolOperation and assigns it to the Operation field.
func (o *RoutingProtocolBGPData) SetOperation(v RoutingProtocolOperation) {
	o.Operation = &v
}

// GetChange returns the Change field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetChange() RoutingProtocolChange {
	if o == nil || IsNil(o.Change) {
		var ret RoutingProtocolChange
		return ret
	}
	return *o.Change
}

// GetChangeOk returns a tuple with the Change field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetChangeOk() (*RoutingProtocolChange, bool) {
	if o == nil || IsNil(o.Change) {
		return nil, false
	}
	return o.Change, true
}

// HasChange returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasChange() bool {
	if o != nil && !IsNil(o.Change) {
		return true
	}

	return false
}

// SetChange gets a reference to the given RoutingProtocolChange and assigns it to the Change field.
func (o *RoutingProtocolBGPData) SetChange(v RoutingProtocolChange) {
	o.Change = &v
}

// GetChangelog returns the Changelog field value if set, zero value otherwise.
func (o *RoutingProtocolBGPData) GetChangelog() Changelog {
	if o == nil || IsNil(o.Changelog) {
		var ret Changelog
		return ret
	}
	return *o.Changelog
}

// GetChangelogOk returns a tuple with the Changelog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolBGPData) GetChangelogOk() (*Changelog, bool) {
	if o == nil || IsNil(o.Changelog) {
		return nil, false
	}
	return o.Changelog, true
}

// HasChangelog returns a boolean if a field has been set.
func (o *RoutingProtocolBGPData) HasChangelog() bool {
	if o != nil && !IsNil(o.Changelog) {
		return true
	}

	return false
}

// SetChangelog gets a reference to the given Changelog and assigns it to the Changelog field.
func (o *RoutingProtocolBGPData) SetChangelog(v Changelog) {
	o.Changelog = &v
}

func (o RoutingProtocolBGPData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingProtocolBGPData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.BgpIpv4) {
		toSerialize["bgpIpv4"] = o.BgpIpv4
	}
	if !IsNil(o.BgpIpv6) {
		toSerialize["bgpIpv6"] = o.BgpIpv6
	}
	if !IsNil(o.CustomerAsn) {
		toSerialize["customerAsn"] = o.CustomerAsn
	}
	if !IsNil(o.EquinixAsn) {
		toSerialize["equinixAsn"] = o.EquinixAsn
	}
	if !IsNil(o.BgpAuthKey) {
		toSerialize["bgpAuthKey"] = o.BgpAuthKey
	}
	if !IsNil(o.AsOverrideEnabled) {
		toSerialize["asOverrideEnabled"] = o.AsOverrideEnabled
	}
	if !IsNil(o.Bfd) {
		toSerialize["bfd"] = o.Bfd
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.Change) {
		toSerialize["change"] = o.Change
	}
	if !IsNil(o.Changelog) {
		toSerialize["changelog"] = o.Changelog
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RoutingProtocolBGPData) UnmarshalJSON(data []byte) (err error) {
	varRoutingProtocolBGPData := _RoutingProtocolBGPData{}

	err = json.Unmarshal(data, &varRoutingProtocolBGPData)

	if err != nil {
		return err
	}

	*o = RoutingProtocolBGPData(varRoutingProtocolBGPData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "bgpIpv4")
		delete(additionalProperties, "bgpIpv6")
		delete(additionalProperties, "customerAsn")
		delete(additionalProperties, "equinixAsn")
		delete(additionalProperties, "bgpAuthKey")
		delete(additionalProperties, "asOverrideEnabled")
		delete(additionalProperties, "bfd")
		delete(additionalProperties, "href")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "state")
		delete(additionalProperties, "operation")
		delete(additionalProperties, "change")
		delete(additionalProperties, "changelog")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRoutingProtocolBGPData struct {
	value *RoutingProtocolBGPData
	isSet bool
}

func (v NullableRoutingProtocolBGPData) Get() *RoutingProtocolBGPData {
	return v.value
}

func (v *NullableRoutingProtocolBGPData) Set(val *RoutingProtocolBGPData) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingProtocolBGPData) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingProtocolBGPData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingProtocolBGPData(val *RoutingProtocolBGPData) *NullableRoutingProtocolBGPData {
	return &NullableRoutingProtocolBGPData{value: val, isSet: true}
}

func (v NullableRoutingProtocolBGPData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingProtocolBGPData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
