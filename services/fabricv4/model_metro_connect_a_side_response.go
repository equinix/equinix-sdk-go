/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the MetroConnectASideResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetroConnectASideResponse{}

// MetroConnectASideResponse Metro Connection ASide configuration
type MetroConnectASideResponse struct {
	PatchPanel           *MetroConnectPatchPanel `json:"patchPanel,omitempty"`
	Port                 *MetroConnectPort       `json:"port,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetroConnectASideResponse MetroConnectASideResponse

// NewMetroConnectASideResponse instantiates a new MetroConnectASideResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetroConnectASideResponse() *MetroConnectASideResponse {
	this := MetroConnectASideResponse{}
	return &this
}

// NewMetroConnectASideResponseWithDefaults instantiates a new MetroConnectASideResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetroConnectASideResponseWithDefaults() *MetroConnectASideResponse {
	this := MetroConnectASideResponse{}
	return &this
}

// GetPatchPanel returns the PatchPanel field value if set, zero value otherwise.
func (o *MetroConnectASideResponse) GetPatchPanel() MetroConnectPatchPanel {
	if o == nil || IsNil(o.PatchPanel) {
		var ret MetroConnectPatchPanel
		return ret
	}
	return *o.PatchPanel
}

// GetPatchPanelOk returns a tuple with the PatchPanel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectASideResponse) GetPatchPanelOk() (*MetroConnectPatchPanel, bool) {
	if o == nil || IsNil(o.PatchPanel) {
		return nil, false
	}
	return o.PatchPanel, true
}

// HasPatchPanel returns a boolean if a field has been set.
func (o *MetroConnectASideResponse) HasPatchPanel() bool {
	if o != nil && !IsNil(o.PatchPanel) {
		return true
	}

	return false
}

// SetPatchPanel gets a reference to the given MetroConnectPatchPanel and assigns it to the PatchPanel field.
func (o *MetroConnectASideResponse) SetPatchPanel(v MetroConnectPatchPanel) {
	o.PatchPanel = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *MetroConnectASideResponse) GetPort() MetroConnectPort {
	if o == nil || IsNil(o.Port) {
		var ret MetroConnectPort
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectASideResponse) GetPortOk() (*MetroConnectPort, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *MetroConnectASideResponse) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given MetroConnectPort and assigns it to the Port field.
func (o *MetroConnectASideResponse) SetPort(v MetroConnectPort) {
	o.Port = &v
}

func (o MetroConnectASideResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetroConnectASideResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PatchPanel) {
		toSerialize["patchPanel"] = o.PatchPanel
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetroConnectASideResponse) UnmarshalJSON(data []byte) (err error) {
	varMetroConnectASideResponse := _MetroConnectASideResponse{}

	err = json.Unmarshal(data, &varMetroConnectASideResponse)

	if err != nil {
		return err
	}

	*o = MetroConnectASideResponse(varMetroConnectASideResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "patchPanel")
		delete(additionalProperties, "port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetroConnectASideResponse struct {
	value *MetroConnectASideResponse
	isSet bool
}

func (v NullableMetroConnectASideResponse) Get() *MetroConnectASideResponse {
	return v.value
}

func (v *NullableMetroConnectASideResponse) Set(val *MetroConnectASideResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMetroConnectASideResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMetroConnectASideResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetroConnectASideResponse(val *MetroConnectASideResponse) *NullableMetroConnectASideResponse {
	return &NullableMetroConnectASideResponse{value: val, isSet: true}
}

func (v NullableMetroConnectASideResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetroConnectASideResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
