/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the LinkProtocolGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkProtocolGetResponse{}

// LinkProtocolGetResponse List of Vlans
type LinkProtocolGetResponse struct {
	Pagination           *Pagination            `json:"pagination,omitempty"`
	Data                 []LinkProtocolResponse `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LinkProtocolGetResponse LinkProtocolGetResponse

// NewLinkProtocolGetResponse instantiates a new LinkProtocolGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkProtocolGetResponse() *LinkProtocolGetResponse {
	this := LinkProtocolGetResponse{}
	return &this
}

// NewLinkProtocolGetResponseWithDefaults instantiates a new LinkProtocolGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkProtocolGetResponseWithDefaults() *LinkProtocolGetResponse {
	this := LinkProtocolGetResponse{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *LinkProtocolGetResponse) GetPagination() Pagination {
	if o == nil || IsNil(o.Pagination) {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolGetResponse) GetPaginationOk() (*Pagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *LinkProtocolGetResponse) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *LinkProtocolGetResponse) SetPagination(v Pagination) {
	o.Pagination = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *LinkProtocolGetResponse) GetData() []LinkProtocolResponse {
	if o == nil || IsNil(o.Data) {
		var ret []LinkProtocolResponse
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolGetResponse) GetDataOk() ([]LinkProtocolResponse, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *LinkProtocolGetResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []LinkProtocolResponse and assigns it to the Data field.
func (o *LinkProtocolGetResponse) SetData(v []LinkProtocolResponse) {
	o.Data = v
}

func (o LinkProtocolGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkProtocolGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LinkProtocolGetResponse) UnmarshalJSON(data []byte) (err error) {
	varLinkProtocolGetResponse := _LinkProtocolGetResponse{}

	err = json.Unmarshal(data, &varLinkProtocolGetResponse)

	if err != nil {
		return err
	}

	*o = LinkProtocolGetResponse(varLinkProtocolGetResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pagination")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLinkProtocolGetResponse struct {
	value *LinkProtocolGetResponse
	isSet bool
}

func (v NullableLinkProtocolGetResponse) Get() *LinkProtocolGetResponse {
	return v.value
}

func (v *NullableLinkProtocolGetResponse) Set(val *LinkProtocolGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkProtocolGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkProtocolGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkProtocolGetResponse(val *LinkProtocolGetResponse) *NullableLinkProtocolGetResponse {
	return &NullableLinkProtocolGetResponse{value: val, isSet: true}
}

func (v NullableLinkProtocolGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkProtocolGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
