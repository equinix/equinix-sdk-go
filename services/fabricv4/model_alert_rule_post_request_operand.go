/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// AlertRulePostRequestOperand Stream alert rule metric operand
type AlertRulePostRequestOperand string

// List of AlertRulePostRequest_operand
const (
	ALERTRULEPOSTREQUESTOPERAND_ABOVE AlertRulePostRequestOperand = "ABOVE"
	ALERTRULEPOSTREQUESTOPERAND_BELOW AlertRulePostRequestOperand = "BELOW"
)

// All allowed values of AlertRulePostRequestOperand enum
var AllowedAlertRulePostRequestOperandEnumValues = []AlertRulePostRequestOperand{
	"ABOVE",
	"BELOW",
}

func (v *AlertRulePostRequestOperand) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AlertRulePostRequestOperand(value)
	for _, existing := range AllowedAlertRulePostRequestOperandEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AlertRulePostRequestOperand", value)
}

// NewAlertRulePostRequestOperandFromValue returns a pointer to a valid AlertRulePostRequestOperand
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAlertRulePostRequestOperandFromValue(v string) (*AlertRulePostRequestOperand, error) {
	ev := AlertRulePostRequestOperand(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AlertRulePostRequestOperand: valid values are %v", v, AllowedAlertRulePostRequestOperandEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AlertRulePostRequestOperand) IsValid() bool {
	for _, existing := range AllowedAlertRulePostRequestOperandEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AlertRulePostRequest_operand value
func (v AlertRulePostRequestOperand) Ptr() *AlertRulePostRequestOperand {
	return &v
}

type NullableAlertRulePostRequestOperand struct {
	value *AlertRulePostRequestOperand
	isSet bool
}

func (v NullableAlertRulePostRequestOperand) Get() *AlertRulePostRequestOperand {
	return v.value
}

func (v *NullableAlertRulePostRequestOperand) Set(val *AlertRulePostRequestOperand) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRulePostRequestOperand) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRulePostRequestOperand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRulePostRequestOperand(val *AlertRulePostRequestOperand) *NullableAlertRulePostRequestOperand {
	return &NullableAlertRulePostRequestOperand{value: val, isSet: true}
}

func (v NullableAlertRulePostRequestOperand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRulePostRequestOperand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
