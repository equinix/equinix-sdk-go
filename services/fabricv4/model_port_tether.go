/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the PortTether type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortTether{}

// PortTether Port physical connection
type PortTether struct {
	// Port cross connect identifier
	CrossConnectId *string `json:"crossConnectId,omitempty"`
	// Port cabinet number
	CabinetNumber *string `json:"cabinetNumber,omitempty"`
	// Port system name
	SystemName *string `json:"systemName,omitempty"`
	// Port patch panel
	PatchPanel *string `json:"patchPanel,omitempty"`
	// Port patch panel port A
	PatchPanelPortA *string `json:"patchPanelPortA,omitempty"`
	// Port patch panel port B
	PatchPanelPortB *string `json:"patchPanelPortB,omitempty"`
	// z-side/Equinix IBX
	Ibx                  *string `json:"ibx,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PortTether PortTether

// NewPortTether instantiates a new PortTether object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortTether() *PortTether {
	this := PortTether{}
	return &this
}

// NewPortTetherWithDefaults instantiates a new PortTether object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortTetherWithDefaults() *PortTether {
	this := PortTether{}
	return &this
}

// GetCrossConnectId returns the CrossConnectId field value if set, zero value otherwise.
func (o *PortTether) GetCrossConnectId() string {
	if o == nil || IsNil(o.CrossConnectId) {
		var ret string
		return ret
	}
	return *o.CrossConnectId
}

// GetCrossConnectIdOk returns a tuple with the CrossConnectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortTether) GetCrossConnectIdOk() (*string, bool) {
	if o == nil || IsNil(o.CrossConnectId) {
		return nil, false
	}
	return o.CrossConnectId, true
}

// HasCrossConnectId returns a boolean if a field has been set.
func (o *PortTether) HasCrossConnectId() bool {
	if o != nil && !IsNil(o.CrossConnectId) {
		return true
	}

	return false
}

// SetCrossConnectId gets a reference to the given string and assigns it to the CrossConnectId field.
func (o *PortTether) SetCrossConnectId(v string) {
	o.CrossConnectId = &v
}

// GetCabinetNumber returns the CabinetNumber field value if set, zero value otherwise.
func (o *PortTether) GetCabinetNumber() string {
	if o == nil || IsNil(o.CabinetNumber) {
		var ret string
		return ret
	}
	return *o.CabinetNumber
}

// GetCabinetNumberOk returns a tuple with the CabinetNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortTether) GetCabinetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CabinetNumber) {
		return nil, false
	}
	return o.CabinetNumber, true
}

// HasCabinetNumber returns a boolean if a field has been set.
func (o *PortTether) HasCabinetNumber() bool {
	if o != nil && !IsNil(o.CabinetNumber) {
		return true
	}

	return false
}

// SetCabinetNumber gets a reference to the given string and assigns it to the CabinetNumber field.
func (o *PortTether) SetCabinetNumber(v string) {
	o.CabinetNumber = &v
}

// GetSystemName returns the SystemName field value if set, zero value otherwise.
func (o *PortTether) GetSystemName() string {
	if o == nil || IsNil(o.SystemName) {
		var ret string
		return ret
	}
	return *o.SystemName
}

// GetSystemNameOk returns a tuple with the SystemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortTether) GetSystemNameOk() (*string, bool) {
	if o == nil || IsNil(o.SystemName) {
		return nil, false
	}
	return o.SystemName, true
}

// HasSystemName returns a boolean if a field has been set.
func (o *PortTether) HasSystemName() bool {
	if o != nil && !IsNil(o.SystemName) {
		return true
	}

	return false
}

// SetSystemName gets a reference to the given string and assigns it to the SystemName field.
func (o *PortTether) SetSystemName(v string) {
	o.SystemName = &v
}

// GetPatchPanel returns the PatchPanel field value if set, zero value otherwise.
func (o *PortTether) GetPatchPanel() string {
	if o == nil || IsNil(o.PatchPanel) {
		var ret string
		return ret
	}
	return *o.PatchPanel
}

// GetPatchPanelOk returns a tuple with the PatchPanel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortTether) GetPatchPanelOk() (*string, bool) {
	if o == nil || IsNil(o.PatchPanel) {
		return nil, false
	}
	return o.PatchPanel, true
}

// HasPatchPanel returns a boolean if a field has been set.
func (o *PortTether) HasPatchPanel() bool {
	if o != nil && !IsNil(o.PatchPanel) {
		return true
	}

	return false
}

// SetPatchPanel gets a reference to the given string and assigns it to the PatchPanel field.
func (o *PortTether) SetPatchPanel(v string) {
	o.PatchPanel = &v
}

// GetPatchPanelPortA returns the PatchPanelPortA field value if set, zero value otherwise.
func (o *PortTether) GetPatchPanelPortA() string {
	if o == nil || IsNil(o.PatchPanelPortA) {
		var ret string
		return ret
	}
	return *o.PatchPanelPortA
}

// GetPatchPanelPortAOk returns a tuple with the PatchPanelPortA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortTether) GetPatchPanelPortAOk() (*string, bool) {
	if o == nil || IsNil(o.PatchPanelPortA) {
		return nil, false
	}
	return o.PatchPanelPortA, true
}

// HasPatchPanelPortA returns a boolean if a field has been set.
func (o *PortTether) HasPatchPanelPortA() bool {
	if o != nil && !IsNil(o.PatchPanelPortA) {
		return true
	}

	return false
}

// SetPatchPanelPortA gets a reference to the given string and assigns it to the PatchPanelPortA field.
func (o *PortTether) SetPatchPanelPortA(v string) {
	o.PatchPanelPortA = &v
}

// GetPatchPanelPortB returns the PatchPanelPortB field value if set, zero value otherwise.
func (o *PortTether) GetPatchPanelPortB() string {
	if o == nil || IsNil(o.PatchPanelPortB) {
		var ret string
		return ret
	}
	return *o.PatchPanelPortB
}

// GetPatchPanelPortBOk returns a tuple with the PatchPanelPortB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortTether) GetPatchPanelPortBOk() (*string, bool) {
	if o == nil || IsNil(o.PatchPanelPortB) {
		return nil, false
	}
	return o.PatchPanelPortB, true
}

// HasPatchPanelPortB returns a boolean if a field has been set.
func (o *PortTether) HasPatchPanelPortB() bool {
	if o != nil && !IsNil(o.PatchPanelPortB) {
		return true
	}

	return false
}

// SetPatchPanelPortB gets a reference to the given string and assigns it to the PatchPanelPortB field.
func (o *PortTether) SetPatchPanelPortB(v string) {
	o.PatchPanelPortB = &v
}

// GetIbx returns the Ibx field value if set, zero value otherwise.
func (o *PortTether) GetIbx() string {
	if o == nil || IsNil(o.Ibx) {
		var ret string
		return ret
	}
	return *o.Ibx
}

// GetIbxOk returns a tuple with the Ibx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortTether) GetIbxOk() (*string, bool) {
	if o == nil || IsNil(o.Ibx) {
		return nil, false
	}
	return o.Ibx, true
}

// HasIbx returns a boolean if a field has been set.
func (o *PortTether) HasIbx() bool {
	if o != nil && !IsNil(o.Ibx) {
		return true
	}

	return false
}

// SetIbx gets a reference to the given string and assigns it to the Ibx field.
func (o *PortTether) SetIbx(v string) {
	o.Ibx = &v
}

func (o PortTether) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortTether) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CrossConnectId) {
		toSerialize["crossConnectId"] = o.CrossConnectId
	}
	if !IsNil(o.CabinetNumber) {
		toSerialize["cabinetNumber"] = o.CabinetNumber
	}
	if !IsNil(o.SystemName) {
		toSerialize["systemName"] = o.SystemName
	}
	if !IsNil(o.PatchPanel) {
		toSerialize["patchPanel"] = o.PatchPanel
	}
	if !IsNil(o.PatchPanelPortA) {
		toSerialize["patchPanelPortA"] = o.PatchPanelPortA
	}
	if !IsNil(o.PatchPanelPortB) {
		toSerialize["patchPanelPortB"] = o.PatchPanelPortB
	}
	if !IsNil(o.Ibx) {
		toSerialize["ibx"] = o.Ibx
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PortTether) UnmarshalJSON(data []byte) (err error) {
	varPortTether := _PortTether{}

	err = json.Unmarshal(data, &varPortTether)

	if err != nil {
		return err
	}

	*o = PortTether(varPortTether)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "crossConnectId")
		delete(additionalProperties, "cabinetNumber")
		delete(additionalProperties, "systemName")
		delete(additionalProperties, "patchPanel")
		delete(additionalProperties, "patchPanelPortA")
		delete(additionalProperties, "patchPanelPortB")
		delete(additionalProperties, "ibx")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePortTether struct {
	value *PortTether
	isSet bool
}

func (v NullablePortTether) Get() *PortTether {
	return v.value
}

func (v *NullablePortTether) Set(val *PortTether) {
	v.value = val
	v.isSet = true
}

func (v NullablePortTether) IsSet() bool {
	return v.isSet
}

func (v *NullablePortTether) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortTether(val *PortTether) *NullablePortTether {
	return &NullablePortTether{value: val, isSet: true}
}

func (v NullablePortTether) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortTether) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
