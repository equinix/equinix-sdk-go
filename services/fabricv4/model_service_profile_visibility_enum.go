/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// ServiceProfileVisibilityEnum the model 'ServiceProfileVisibilityEnum'
type ServiceProfileVisibilityEnum string

// List of ServiceProfileVisibilityEnum
const (
	SERVICEPROFILEVISIBILITYENUM_PRIVATE ServiceProfileVisibilityEnum = "PRIVATE"
	SERVICEPROFILEVISIBILITYENUM_PUBLIC  ServiceProfileVisibilityEnum = "PUBLIC"
)

// All allowed values of ServiceProfileVisibilityEnum enum
var AllowedServiceProfileVisibilityEnumEnumValues = []ServiceProfileVisibilityEnum{
	"PRIVATE",
	"PUBLIC",
}

func (v *ServiceProfileVisibilityEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceProfileVisibilityEnum(value)
	for _, existing := range AllowedServiceProfileVisibilityEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceProfileVisibilityEnum", value)
}

// NewServiceProfileVisibilityEnumFromValue returns a pointer to a valid ServiceProfileVisibilityEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceProfileVisibilityEnumFromValue(v string) (*ServiceProfileVisibilityEnum, error) {
	ev := ServiceProfileVisibilityEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceProfileVisibilityEnum: valid values are %v", v, AllowedServiceProfileVisibilityEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceProfileVisibilityEnum) IsValid() bool {
	for _, existing := range AllowedServiceProfileVisibilityEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceProfileVisibilityEnum value
func (v ServiceProfileVisibilityEnum) Ptr() *ServiceProfileVisibilityEnum {
	return &v
}

type NullableServiceProfileVisibilityEnum struct {
	value *ServiceProfileVisibilityEnum
	isSet bool
}

func (v NullableServiceProfileVisibilityEnum) Get() *ServiceProfileVisibilityEnum {
	return v.value
}

func (v *NullableServiceProfileVisibilityEnum) Set(val *ServiceProfileVisibilityEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileVisibilityEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileVisibilityEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileVisibilityEnum(val *ServiceProfileVisibilityEnum) *NullableServiceProfileVisibilityEnum {
	return &NullableServiceProfileVisibilityEnum{value: val, isSet: true}
}

func (v NullableServiceProfileVisibilityEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileVisibilityEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
