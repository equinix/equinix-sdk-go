/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// RouteAggregationSortItemProperty Possible field names to use on sorting
type RouteAggregationSortItemProperty string

// List of RouteAggregationSortItem_property
const (
	ROUTEAGGREGATIONSORTITEMPROPERTY_TYPE                         RouteAggregationSortItemProperty = "/type"
	ROUTEAGGREGATIONSORTITEMPROPERTY_UUID                         RouteAggregationSortItemProperty = "/uuid"
	ROUTEAGGREGATIONSORTITEMPROPERTY_NAME                         RouteAggregationSortItemProperty = "/name"
	ROUTEAGGREGATIONSORTITEMPROPERTY_PROJECT_PROJECT_ID           RouteAggregationSortItemProperty = "/project/projectId"
	ROUTEAGGREGATIONSORTITEMPROPERTY_STATE                        RouteAggregationSortItemProperty = "/state"
	ROUTEAGGREGATIONSORTITEMPROPERTY_CONNECTIONS_COUNT            RouteAggregationSortItemProperty = "/connectionsCount"
	ROUTEAGGREGATIONSORTITEMPROPERTY_CHANGE_LOG_CREATED_DATE_TIME RouteAggregationSortItemProperty = "/changeLog/createdDateTime"
	ROUTEAGGREGATIONSORTITEMPROPERTY_CHANGE_LOG_UPDATED_DATE_TIME RouteAggregationSortItemProperty = "/changeLog/updatedDateTime"
)

// All allowed values of RouteAggregationSortItemProperty enum
var AllowedRouteAggregationSortItemPropertyEnumValues = []RouteAggregationSortItemProperty{
	"/type",
	"/uuid",
	"/name",
	"/project/projectId",
	"/state",
	"/connectionsCount",
	"/changeLog/createdDateTime",
	"/changeLog/updatedDateTime",
}

func (v *RouteAggregationSortItemProperty) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RouteAggregationSortItemProperty(value)
	for _, existing := range AllowedRouteAggregationSortItemPropertyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RouteAggregationSortItemProperty", value)
}

// NewRouteAggregationSortItemPropertyFromValue returns a pointer to a valid RouteAggregationSortItemProperty
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRouteAggregationSortItemPropertyFromValue(v string) (*RouteAggregationSortItemProperty, error) {
	ev := RouteAggregationSortItemProperty(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RouteAggregationSortItemProperty: valid values are %v", v, AllowedRouteAggregationSortItemPropertyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RouteAggregationSortItemProperty) IsValid() bool {
	for _, existing := range AllowedRouteAggregationSortItemPropertyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RouteAggregationSortItem_property value
func (v RouteAggregationSortItemProperty) Ptr() *RouteAggregationSortItemProperty {
	return &v
}

type NullableRouteAggregationSortItemProperty struct {
	value *RouteAggregationSortItemProperty
	isSet bool
}

func (v NullableRouteAggregationSortItemProperty) Get() *RouteAggregationSortItemProperty {
	return v.value
}

func (v *NullableRouteAggregationSortItemProperty) Set(val *RouteAggregationSortItemProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteAggregationSortItemProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteAggregationSortItemProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteAggregationSortItemProperty(val *RouteAggregationSortItemProperty) *NullableRouteAggregationSortItemProperty {
	return &NullableRouteAggregationSortItemProperty{value: val, isSet: true}
}

func (v NullableRouteAggregationSortItemProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteAggregationSortItemProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
