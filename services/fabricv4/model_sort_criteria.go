/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the SortCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SortCriteria{}

// SortCriteria struct for SortCriteria
type SortCriteria struct {
	Direction            *SortDirection `json:"direction,omitempty"`
	Property             *SortBy        `json:"property,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SortCriteria SortCriteria

// NewSortCriteria instantiates a new SortCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSortCriteria() *SortCriteria {
	this := SortCriteria{}
	var direction SortDirection = SORTDIRECTION_DESC
	this.Direction = &direction
	var property SortBy = SORTBY_CHANGE_LOG_UPDATED_DATE_TIME
	this.Property = &property
	return &this
}

// NewSortCriteriaWithDefaults instantiates a new SortCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSortCriteriaWithDefaults() *SortCriteria {
	this := SortCriteria{}
	var direction SortDirection = SORTDIRECTION_DESC
	this.Direction = &direction
	var property SortBy = SORTBY_CHANGE_LOG_UPDATED_DATE_TIME
	this.Property = &property
	return &this
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *SortCriteria) GetDirection() SortDirection {
	if o == nil || IsNil(o.Direction) {
		var ret SortDirection
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SortCriteria) GetDirectionOk() (*SortDirection, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *SortCriteria) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given SortDirection and assigns it to the Direction field.
func (o *SortCriteria) SetDirection(v SortDirection) {
	o.Direction = &v
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *SortCriteria) GetProperty() SortBy {
	if o == nil || IsNil(o.Property) {
		var ret SortBy
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SortCriteria) GetPropertyOk() (*SortBy, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *SortCriteria) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given SortBy and assigns it to the Property field.
func (o *SortCriteria) SetProperty(v SortBy) {
	o.Property = &v
}

func (o SortCriteria) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SortCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.Property) {
		toSerialize["property"] = o.Property
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SortCriteria) UnmarshalJSON(data []byte) (err error) {
	varSortCriteria := _SortCriteria{}

	err = json.Unmarshal(data, &varSortCriteria)

	if err != nil {
		return err
	}

	*o = SortCriteria(varSortCriteria)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "direction")
		delete(additionalProperties, "property")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSortCriteria struct {
	value *SortCriteria
	isSet bool
}

func (v NullableSortCriteria) Get() *SortCriteria {
	return v.value
}

func (v *NullableSortCriteria) Set(val *SortCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableSortCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableSortCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSortCriteria(val *SortCriteria) *NullableSortCriteria {
	return &NullableSortCriteria{value: val, isSet: true}
}

func (v NullableSortCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSortCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
