/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the PortSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortSettings{}

// PortSettings Port configuration settings
type PortSettings struct {
	// Deprecated
	Buyout *bool `json:"buyout,omitempty"`
	// Deprecated
	ViewPortPermission *bool `json:"viewPortPermission,omitempty"`
	// Deprecated
	PlaceVcOrderPermission *bool `json:"placeVcOrderPermission,omitempty"`
	// Deprecated
	Layer3Enabled     *bool                          `json:"layer3Enabled,omitempty"`
	SharedPortType    *bool                          `json:"sharedPortType,omitempty"`
	SharedPortProduct *PortSettingsSharedPortProduct `json:"sharedPortProduct,omitempty"`
	// Deprecated
	PackageType          *PortSettingsPackageType `json:"packageType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PortSettings PortSettings

// NewPortSettings instantiates a new PortSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortSettings() *PortSettings {
	this := PortSettings{}
	return &this
}

// NewPortSettingsWithDefaults instantiates a new PortSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortSettingsWithDefaults() *PortSettings {
	this := PortSettings{}
	return &this
}

// GetBuyout returns the Buyout field value if set, zero value otherwise.
// Deprecated
func (o *PortSettings) GetBuyout() bool {
	if o == nil || IsNil(o.Buyout) {
		var ret bool
		return ret
	}
	return *o.Buyout
}

// GetBuyoutOk returns a tuple with the Buyout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PortSettings) GetBuyoutOk() (*bool, bool) {
	if o == nil || IsNil(o.Buyout) {
		return nil, false
	}
	return o.Buyout, true
}

// HasBuyout returns a boolean if a field has been set.
func (o *PortSettings) HasBuyout() bool {
	if o != nil && !IsNil(o.Buyout) {
		return true
	}

	return false
}

// SetBuyout gets a reference to the given bool and assigns it to the Buyout field.
// Deprecated
func (o *PortSettings) SetBuyout(v bool) {
	o.Buyout = &v
}

// GetViewPortPermission returns the ViewPortPermission field value if set, zero value otherwise.
// Deprecated
func (o *PortSettings) GetViewPortPermission() bool {
	if o == nil || IsNil(o.ViewPortPermission) {
		var ret bool
		return ret
	}
	return *o.ViewPortPermission
}

// GetViewPortPermissionOk returns a tuple with the ViewPortPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PortSettings) GetViewPortPermissionOk() (*bool, bool) {
	if o == nil || IsNil(o.ViewPortPermission) {
		return nil, false
	}
	return o.ViewPortPermission, true
}

// HasViewPortPermission returns a boolean if a field has been set.
func (o *PortSettings) HasViewPortPermission() bool {
	if o != nil && !IsNil(o.ViewPortPermission) {
		return true
	}

	return false
}

// SetViewPortPermission gets a reference to the given bool and assigns it to the ViewPortPermission field.
// Deprecated
func (o *PortSettings) SetViewPortPermission(v bool) {
	o.ViewPortPermission = &v
}

// GetPlaceVcOrderPermission returns the PlaceVcOrderPermission field value if set, zero value otherwise.
// Deprecated
func (o *PortSettings) GetPlaceVcOrderPermission() bool {
	if o == nil || IsNil(o.PlaceVcOrderPermission) {
		var ret bool
		return ret
	}
	return *o.PlaceVcOrderPermission
}

// GetPlaceVcOrderPermissionOk returns a tuple with the PlaceVcOrderPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PortSettings) GetPlaceVcOrderPermissionOk() (*bool, bool) {
	if o == nil || IsNil(o.PlaceVcOrderPermission) {
		return nil, false
	}
	return o.PlaceVcOrderPermission, true
}

// HasPlaceVcOrderPermission returns a boolean if a field has been set.
func (o *PortSettings) HasPlaceVcOrderPermission() bool {
	if o != nil && !IsNil(o.PlaceVcOrderPermission) {
		return true
	}

	return false
}

// SetPlaceVcOrderPermission gets a reference to the given bool and assigns it to the PlaceVcOrderPermission field.
// Deprecated
func (o *PortSettings) SetPlaceVcOrderPermission(v bool) {
	o.PlaceVcOrderPermission = &v
}

// GetLayer3Enabled returns the Layer3Enabled field value if set, zero value otherwise.
// Deprecated
func (o *PortSettings) GetLayer3Enabled() bool {
	if o == nil || IsNil(o.Layer3Enabled) {
		var ret bool
		return ret
	}
	return *o.Layer3Enabled
}

// GetLayer3EnabledOk returns a tuple with the Layer3Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PortSettings) GetLayer3EnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Layer3Enabled) {
		return nil, false
	}
	return o.Layer3Enabled, true
}

// HasLayer3Enabled returns a boolean if a field has been set.
func (o *PortSettings) HasLayer3Enabled() bool {
	if o != nil && !IsNil(o.Layer3Enabled) {
		return true
	}

	return false
}

// SetLayer3Enabled gets a reference to the given bool and assigns it to the Layer3Enabled field.
// Deprecated
func (o *PortSettings) SetLayer3Enabled(v bool) {
	o.Layer3Enabled = &v
}

// GetSharedPortType returns the SharedPortType field value if set, zero value otherwise.
func (o *PortSettings) GetSharedPortType() bool {
	if o == nil || IsNil(o.SharedPortType) {
		var ret bool
		return ret
	}
	return *o.SharedPortType
}

// GetSharedPortTypeOk returns a tuple with the SharedPortType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortSettings) GetSharedPortTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.SharedPortType) {
		return nil, false
	}
	return o.SharedPortType, true
}

// HasSharedPortType returns a boolean if a field has been set.
func (o *PortSettings) HasSharedPortType() bool {
	if o != nil && !IsNil(o.SharedPortType) {
		return true
	}

	return false
}

// SetSharedPortType gets a reference to the given bool and assigns it to the SharedPortType field.
func (o *PortSettings) SetSharedPortType(v bool) {
	o.SharedPortType = &v
}

// GetSharedPortProduct returns the SharedPortProduct field value if set, zero value otherwise.
func (o *PortSettings) GetSharedPortProduct() PortSettingsSharedPortProduct {
	if o == nil || IsNil(o.SharedPortProduct) {
		var ret PortSettingsSharedPortProduct
		return ret
	}
	return *o.SharedPortProduct
}

// GetSharedPortProductOk returns a tuple with the SharedPortProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortSettings) GetSharedPortProductOk() (*PortSettingsSharedPortProduct, bool) {
	if o == nil || IsNil(o.SharedPortProduct) {
		return nil, false
	}
	return o.SharedPortProduct, true
}

// HasSharedPortProduct returns a boolean if a field has been set.
func (o *PortSettings) HasSharedPortProduct() bool {
	if o != nil && !IsNil(o.SharedPortProduct) {
		return true
	}

	return false
}

// SetSharedPortProduct gets a reference to the given PortSettingsSharedPortProduct and assigns it to the SharedPortProduct field.
func (o *PortSettings) SetSharedPortProduct(v PortSettingsSharedPortProduct) {
	o.SharedPortProduct = &v
}

// GetPackageType returns the PackageType field value if set, zero value otherwise.
// Deprecated
func (o *PortSettings) GetPackageType() PortSettingsPackageType {
	if o == nil || IsNil(o.PackageType) {
		var ret PortSettingsPackageType
		return ret
	}
	return *o.PackageType
}

// GetPackageTypeOk returns a tuple with the PackageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PortSettings) GetPackageTypeOk() (*PortSettingsPackageType, bool) {
	if o == nil || IsNil(o.PackageType) {
		return nil, false
	}
	return o.PackageType, true
}

// HasPackageType returns a boolean if a field has been set.
func (o *PortSettings) HasPackageType() bool {
	if o != nil && !IsNil(o.PackageType) {
		return true
	}

	return false
}

// SetPackageType gets a reference to the given PortSettingsPackageType and assigns it to the PackageType field.
// Deprecated
func (o *PortSettings) SetPackageType(v PortSettingsPackageType) {
	o.PackageType = &v
}

func (o PortSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Buyout) {
		toSerialize["buyout"] = o.Buyout
	}
	if !IsNil(o.ViewPortPermission) {
		toSerialize["viewPortPermission"] = o.ViewPortPermission
	}
	if !IsNil(o.PlaceVcOrderPermission) {
		toSerialize["placeVcOrderPermission"] = o.PlaceVcOrderPermission
	}
	if !IsNil(o.Layer3Enabled) {
		toSerialize["layer3Enabled"] = o.Layer3Enabled
	}
	if !IsNil(o.SharedPortType) {
		toSerialize["sharedPortType"] = o.SharedPortType
	}
	if !IsNil(o.SharedPortProduct) {
		toSerialize["sharedPortProduct"] = o.SharedPortProduct
	}
	if !IsNil(o.PackageType) {
		toSerialize["packageType"] = o.PackageType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PortSettings) UnmarshalJSON(data []byte) (err error) {
	varPortSettings := _PortSettings{}

	err = json.Unmarshal(data, &varPortSettings)

	if err != nil {
		return err
	}

	*o = PortSettings(varPortSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "buyout")
		delete(additionalProperties, "viewPortPermission")
		delete(additionalProperties, "placeVcOrderPermission")
		delete(additionalProperties, "layer3Enabled")
		delete(additionalProperties, "sharedPortType")
		delete(additionalProperties, "sharedPortProduct")
		delete(additionalProperties, "packageType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePortSettings struct {
	value *PortSettings
	isSet bool
}

func (v NullablePortSettings) Get() *PortSettings {
	return v.value
}

func (v *NullablePortSettings) Set(val *PortSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePortSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePortSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortSettings(val *PortSettings) *NullablePortSettings {
	return &NullablePortSettings{value: val, isSet: true}
}

func (v NullablePortSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
