/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the EndCustomer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndCustomer{}

// EndCustomer struct for EndCustomer
type EndCustomer struct {
	// Indicate if endCustomer info should be disclosed or not
	IsDisclosed          *bool   `json:"isDisclosed,omitempty"`
	Name                 *string `json:"name,omitempty"`
	MdmId                *string `json:"mdmId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EndCustomer EndCustomer

// NewEndCustomer instantiates a new EndCustomer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndCustomer() *EndCustomer {
	this := EndCustomer{}
	var isDisclosed bool = false
	this.IsDisclosed = &isDisclosed
	return &this
}

// NewEndCustomerWithDefaults instantiates a new EndCustomer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndCustomerWithDefaults() *EndCustomer {
	this := EndCustomer{}
	var isDisclosed bool = false
	this.IsDisclosed = &isDisclosed
	return &this
}

// GetIsDisclosed returns the IsDisclosed field value if set, zero value otherwise.
func (o *EndCustomer) GetIsDisclosed() bool {
	if o == nil || IsNil(o.IsDisclosed) {
		var ret bool
		return ret
	}
	return *o.IsDisclosed
}

// GetIsDisclosedOk returns a tuple with the IsDisclosed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndCustomer) GetIsDisclosedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDisclosed) {
		return nil, false
	}
	return o.IsDisclosed, true
}

// HasIsDisclosed returns a boolean if a field has been set.
func (o *EndCustomer) HasIsDisclosed() bool {
	if o != nil && !IsNil(o.IsDisclosed) {
		return true
	}

	return false
}

// SetIsDisclosed gets a reference to the given bool and assigns it to the IsDisclosed field.
func (o *EndCustomer) SetIsDisclosed(v bool) {
	o.IsDisclosed = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EndCustomer) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndCustomer) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EndCustomer) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EndCustomer) SetName(v string) {
	o.Name = &v
}

// GetMdmId returns the MdmId field value if set, zero value otherwise.
func (o *EndCustomer) GetMdmId() string {
	if o == nil || IsNil(o.MdmId) {
		var ret string
		return ret
	}
	return *o.MdmId
}

// GetMdmIdOk returns a tuple with the MdmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndCustomer) GetMdmIdOk() (*string, bool) {
	if o == nil || IsNil(o.MdmId) {
		return nil, false
	}
	return o.MdmId, true
}

// HasMdmId returns a boolean if a field has been set.
func (o *EndCustomer) HasMdmId() bool {
	if o != nil && !IsNil(o.MdmId) {
		return true
	}

	return false
}

// SetMdmId gets a reference to the given string and assigns it to the MdmId field.
func (o *EndCustomer) SetMdmId(v string) {
	o.MdmId = &v
}

func (o EndCustomer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndCustomer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsDisclosed) {
		toSerialize["isDisclosed"] = o.IsDisclosed
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.MdmId) {
		toSerialize["mdmId"] = o.MdmId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EndCustomer) UnmarshalJSON(data []byte) (err error) {
	varEndCustomer := _EndCustomer{}

	err = json.Unmarshal(data, &varEndCustomer)

	if err != nil {
		return err
	}

	*o = EndCustomer(varEndCustomer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "isDisclosed")
		delete(additionalProperties, "name")
		delete(additionalProperties, "mdmId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEndCustomer struct {
	value *EndCustomer
	isSet bool
}

func (v NullableEndCustomer) Get() *EndCustomer {
	return v.value
}

func (v *NullableEndCustomer) Set(val *EndCustomer) {
	v.value = val
	v.isSet = true
}

func (v NullableEndCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableEndCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndCustomer(val *EndCustomer) *NullableEndCustomer {
	return &NullableEndCustomer{value: val, isSet: true}
}

func (v NullableEndCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
