/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// ConnectionOperationOperationalStatus Connection operational status
type ConnectionOperationOperationalStatus string

// List of ConnectionOperation_operationalStatus
const (
	CONNECTIONOPERATIONOPERATIONALSTATUS_UP   ConnectionOperationOperationalStatus = "UP"
	CONNECTIONOPERATIONOPERATIONALSTATUS_DOWN ConnectionOperationOperationalStatus = "DOWN"
)

// All allowed values of ConnectionOperationOperationalStatus enum
var AllowedConnectionOperationOperationalStatusEnumValues = []ConnectionOperationOperationalStatus{
	"UP",
	"DOWN",
}

func (v *ConnectionOperationOperationalStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConnectionOperationOperationalStatus(value)
	for _, existing := range AllowedConnectionOperationOperationalStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ConnectionOperationOperationalStatus", value)
}

// NewConnectionOperationOperationalStatusFromValue returns a pointer to a valid ConnectionOperationOperationalStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConnectionOperationOperationalStatusFromValue(v string) (*ConnectionOperationOperationalStatus, error) {
	ev := ConnectionOperationOperationalStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ConnectionOperationOperationalStatus: valid values are %v", v, AllowedConnectionOperationOperationalStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConnectionOperationOperationalStatus) IsValid() bool {
	for _, existing := range AllowedConnectionOperationOperationalStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ConnectionOperation_operationalStatus value
func (v ConnectionOperationOperationalStatus) Ptr() *ConnectionOperationOperationalStatus {
	return &v
}

type NullableConnectionOperationOperationalStatus struct {
	value *ConnectionOperationOperationalStatus
	isSet bool
}

func (v NullableConnectionOperationOperationalStatus) Get() *ConnectionOperationOperationalStatus {
	return v.value
}

func (v *NullableConnectionOperationOperationalStatus) Set(val *ConnectionOperationOperationalStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOperationOperationalStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOperationOperationalStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOperationOperationalStatus(val *ConnectionOperationOperationalStatus) *NullableConnectionOperationOperationalStatus {
	return &NullableConnectionOperationOperationalStatus{value: val, isSet: true}
}

func (v NullableConnectionOperationOperationalStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOperationOperationalStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
