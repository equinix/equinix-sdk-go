/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// AWSProviderResource - struct for AWSProviderResource
type AWSProviderResource struct {
	AWSDirectConnect         *AWSDirectConnect
	AWSPermission            *AWSPermission
	AWSVirtualPrivateGateway *AWSVirtualPrivateGateway
}

// AWSDirectConnectAsAWSProviderResource is a convenience function that returns AWSDirectConnect wrapped in AWSProviderResource
func AWSDirectConnectAsAWSProviderResource(v *AWSDirectConnect) AWSProviderResource {
	return AWSProviderResource{
		AWSDirectConnect: v,
	}
}

// AWSPermissionAsAWSProviderResource is a convenience function that returns AWSPermission wrapped in AWSProviderResource
func AWSPermissionAsAWSProviderResource(v *AWSPermission) AWSProviderResource {
	return AWSProviderResource{
		AWSPermission: v,
	}
}

// AWSVirtualPrivateGatewayAsAWSProviderResource is a convenience function that returns AWSVirtualPrivateGateway wrapped in AWSProviderResource
func AWSVirtualPrivateGatewayAsAWSProviderResource(v *AWSVirtualPrivateGateway) AWSProviderResource {
	return AWSProviderResource{
		AWSVirtualPrivateGateway: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AWSProviderResource) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AWSDirectConnect
	err = newStrictDecoder(data).Decode(&dst.AWSDirectConnect)
	if err == nil {
		jsonAWSDirectConnect, _ := json.Marshal(dst.AWSDirectConnect)
		if string(jsonAWSDirectConnect) == "{}" { // empty struct
			dst.AWSDirectConnect = nil
		} else {
			if err = validator.Validate(dst.AWSDirectConnect); err != nil {
				dst.AWSDirectConnect = nil
			} else {
				match++
			}
		}
	} else {
		dst.AWSDirectConnect = nil
	}

	// try to unmarshal data into AWSPermission
	err = newStrictDecoder(data).Decode(&dst.AWSPermission)
	if err == nil {
		jsonAWSPermission, _ := json.Marshal(dst.AWSPermission)
		if string(jsonAWSPermission) == "{}" { // empty struct
			dst.AWSPermission = nil
		} else {
			if err = validator.Validate(dst.AWSPermission); err != nil {
				dst.AWSPermission = nil
			} else {
				match++
			}
		}
	} else {
		dst.AWSPermission = nil
	}

	// try to unmarshal data into AWSVirtualPrivateGateway
	err = newStrictDecoder(data).Decode(&dst.AWSVirtualPrivateGateway)
	if err == nil {
		jsonAWSVirtualPrivateGateway, _ := json.Marshal(dst.AWSVirtualPrivateGateway)
		if string(jsonAWSVirtualPrivateGateway) == "{}" { // empty struct
			dst.AWSVirtualPrivateGateway = nil
		} else {
			if err = validator.Validate(dst.AWSVirtualPrivateGateway); err != nil {
				dst.AWSVirtualPrivateGateway = nil
			} else {
				match++
			}
		}
	} else {
		dst.AWSVirtualPrivateGateway = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AWSDirectConnect = nil
		dst.AWSPermission = nil
		dst.AWSVirtualPrivateGateway = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AWSProviderResource)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AWSProviderResource)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AWSProviderResource) MarshalJSON() ([]byte, error) {
	if src.AWSDirectConnect != nil {
		return json.Marshal(&src.AWSDirectConnect)
	}

	if src.AWSPermission != nil {
		return json.Marshal(&src.AWSPermission)
	}

	if src.AWSVirtualPrivateGateway != nil {
		return json.Marshal(&src.AWSVirtualPrivateGateway)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AWSProviderResource) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AWSDirectConnect != nil {
		return obj.AWSDirectConnect
	}

	if obj.AWSPermission != nil {
		return obj.AWSPermission
	}

	if obj.AWSVirtualPrivateGateway != nil {
		return obj.AWSVirtualPrivateGateway
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj AWSProviderResource) GetActualInstanceValue() interface{} {
	if obj.AWSDirectConnect != nil {
		return *obj.AWSDirectConnect
	}

	if obj.AWSPermission != nil {
		return *obj.AWSPermission
	}

	if obj.AWSVirtualPrivateGateway != nil {
		return *obj.AWSVirtualPrivateGateway
	}

	// all schemas are nil
	return nil
}

type NullableAWSProviderResource struct {
	value *AWSProviderResource
	isSet bool
}

func (v NullableAWSProviderResource) Get() *AWSProviderResource {
	return v.value
}

func (v *NullableAWSProviderResource) Set(val *AWSProviderResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSProviderResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSProviderResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSProviderResource(val *AWSProviderResource) *NullableAWSProviderResource {
	return &NullableAWSProviderResource{value: val, isSet: true}
}

func (v NullableAWSProviderResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSProviderResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
