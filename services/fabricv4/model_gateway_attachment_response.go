/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the GatewayAttachmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayAttachmentResponse{}

// GatewayAttachmentResponse Schema representing a Gateway attaching or detaching on a Cloud Router. This schema defines the structure of the response returned when a Gateway is attached or detached to a Cloud Router.
type GatewayAttachmentResponse struct {
	Href                 *string                                    `json:"href,omitempty"`
	Type                 *GatewayAttachmentResponseType             `json:"type,omitempty"`
	Uuid                 *string                                    `json:"uuid,omitempty"`
	AttachmentStatus     *GatewayAttachmentResponseAttachmentStatus `json:"attachmentStatus,omitempty"`
	Errors               []Error                                    `json:"errors,omitempty"`
	ChangeLog            *Changelog                                 `json:"changeLog,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayAttachmentResponse GatewayAttachmentResponse

// NewGatewayAttachmentResponse instantiates a new GatewayAttachmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayAttachmentResponse() *GatewayAttachmentResponse {
	this := GatewayAttachmentResponse{}
	return &this
}

// NewGatewayAttachmentResponseWithDefaults instantiates a new GatewayAttachmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayAttachmentResponseWithDefaults() *GatewayAttachmentResponse {
	this := GatewayAttachmentResponse{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *GatewayAttachmentResponse) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayAttachmentResponse) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *GatewayAttachmentResponse) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *GatewayAttachmentResponse) SetHref(v string) {
	o.Href = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GatewayAttachmentResponse) GetType() GatewayAttachmentResponseType {
	if o == nil || IsNil(o.Type) {
		var ret GatewayAttachmentResponseType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayAttachmentResponse) GetTypeOk() (*GatewayAttachmentResponseType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GatewayAttachmentResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given GatewayAttachmentResponseType and assigns it to the Type field.
func (o *GatewayAttachmentResponse) SetType(v GatewayAttachmentResponseType) {
	o.Type = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *GatewayAttachmentResponse) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayAttachmentResponse) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *GatewayAttachmentResponse) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *GatewayAttachmentResponse) SetUuid(v string) {
	o.Uuid = &v
}

// GetAttachmentStatus returns the AttachmentStatus field value if set, zero value otherwise.
func (o *GatewayAttachmentResponse) GetAttachmentStatus() GatewayAttachmentResponseAttachmentStatus {
	if o == nil || IsNil(o.AttachmentStatus) {
		var ret GatewayAttachmentResponseAttachmentStatus
		return ret
	}
	return *o.AttachmentStatus
}

// GetAttachmentStatusOk returns a tuple with the AttachmentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayAttachmentResponse) GetAttachmentStatusOk() (*GatewayAttachmentResponseAttachmentStatus, bool) {
	if o == nil || IsNil(o.AttachmentStatus) {
		return nil, false
	}
	return o.AttachmentStatus, true
}

// HasAttachmentStatus returns a boolean if a field has been set.
func (o *GatewayAttachmentResponse) HasAttachmentStatus() bool {
	if o != nil && !IsNil(o.AttachmentStatus) {
		return true
	}

	return false
}

// SetAttachmentStatus gets a reference to the given GatewayAttachmentResponseAttachmentStatus and assigns it to the AttachmentStatus field.
func (o *GatewayAttachmentResponse) SetAttachmentStatus(v GatewayAttachmentResponseAttachmentStatus) {
	o.AttachmentStatus = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *GatewayAttachmentResponse) GetErrors() []Error {
	if o == nil || IsNil(o.Errors) {
		var ret []Error
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayAttachmentResponse) GetErrorsOk() ([]Error, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GatewayAttachmentResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Error and assigns it to the Errors field.
func (o *GatewayAttachmentResponse) SetErrors(v []Error) {
	o.Errors = v
}

// GetChangeLog returns the ChangeLog field value if set, zero value otherwise.
func (o *GatewayAttachmentResponse) GetChangeLog() Changelog {
	if o == nil || IsNil(o.ChangeLog) {
		var ret Changelog
		return ret
	}
	return *o.ChangeLog
}

// GetChangeLogOk returns a tuple with the ChangeLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayAttachmentResponse) GetChangeLogOk() (*Changelog, bool) {
	if o == nil || IsNil(o.ChangeLog) {
		return nil, false
	}
	return o.ChangeLog, true
}

// HasChangeLog returns a boolean if a field has been set.
func (o *GatewayAttachmentResponse) HasChangeLog() bool {
	if o != nil && !IsNil(o.ChangeLog) {
		return true
	}

	return false
}

// SetChangeLog gets a reference to the given Changelog and assigns it to the ChangeLog field.
func (o *GatewayAttachmentResponse) SetChangeLog(v Changelog) {
	o.ChangeLog = &v
}

func (o GatewayAttachmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayAttachmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.AttachmentStatus) {
		toSerialize["attachmentStatus"] = o.AttachmentStatus
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.ChangeLog) {
		toSerialize["changeLog"] = o.ChangeLog
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayAttachmentResponse) UnmarshalJSON(data []byte) (err error) {
	varGatewayAttachmentResponse := _GatewayAttachmentResponse{}

	err = json.Unmarshal(data, &varGatewayAttachmentResponse)

	if err != nil {
		return err
	}

	*o = GatewayAttachmentResponse(varGatewayAttachmentResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "href")
		delete(additionalProperties, "type")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "attachmentStatus")
		delete(additionalProperties, "errors")
		delete(additionalProperties, "changeLog")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayAttachmentResponse struct {
	value *GatewayAttachmentResponse
	isSet bool
}

func (v NullableGatewayAttachmentResponse) Get() *GatewayAttachmentResponse {
	return v.value
}

func (v *NullableGatewayAttachmentResponse) Set(val *GatewayAttachmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayAttachmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayAttachmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayAttachmentResponse(val *GatewayAttachmentResponse) *NullableGatewayAttachmentResponse {
	return &NullableGatewayAttachmentResponse{value: val, isSet: true}
}

func (v NullableGatewayAttachmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayAttachmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
