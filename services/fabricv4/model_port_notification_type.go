/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// PortNotificationType Notification Type
type PortNotificationType string

// List of PortNotification_type
const (
	PORTNOTIFICATIONTYPE_NOTIFICATION PortNotificationType = "NOTIFICATION"
	PORTNOTIFICATIONTYPE_TECHNICAL    PortNotificationType = "TECHNICAL"
	PORTNOTIFICATIONTYPE_PEERING      PortNotificationType = "PEERING"
	PORTNOTIFICATIONTYPE_ESCALATION   PortNotificationType = "ESCALATION"
)

// All allowed values of PortNotificationType enum
var AllowedPortNotificationTypeEnumValues = []PortNotificationType{
	"NOTIFICATION",
	"TECHNICAL",
	"PEERING",
	"ESCALATION",
}

func (v *PortNotificationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PortNotificationType(value)
	for _, existing := range AllowedPortNotificationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PortNotificationType", value)
}

// NewPortNotificationTypeFromValue returns a pointer to a valid PortNotificationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortNotificationTypeFromValue(v string) (*PortNotificationType, error) {
	ev := PortNotificationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PortNotificationType: valid values are %v", v, AllowedPortNotificationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortNotificationType) IsValid() bool {
	for _, existing := range AllowedPortNotificationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PortNotification_type value
func (v PortNotificationType) Ptr() *PortNotificationType {
	return &v
}

type NullablePortNotificationType struct {
	value *PortNotificationType
	isSet bool
}

func (v NullablePortNotificationType) Get() *PortNotificationType {
	return v.value
}

func (v *NullablePortNotificationType) Set(val *PortNotificationType) {
	v.value = val
	v.isSet = true
}

func (v NullablePortNotificationType) IsSet() bool {
	return v.isSet
}

func (v *NullablePortNotificationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortNotificationType(val *PortNotificationType) *NullablePortNotificationType {
	return &NullablePortNotificationType{value: val, isSet: true}
}

func (v NullablePortNotificationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortNotificationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
