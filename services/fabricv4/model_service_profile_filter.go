/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// ServiceProfileFilter struct for ServiceProfileFilter
type ServiceProfileFilter struct {
	ServiceProfileAndFilter        *ServiceProfileAndFilter
	ServiceProfileSimpleExpression *ServiceProfileSimpleExpression
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ServiceProfileFilter) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ServiceProfileAndFilter
	err = json.Unmarshal(data, &dst.ServiceProfileAndFilter)
	if err == nil {
		jsonServiceProfileAndFilter, _ := json.Marshal(dst.ServiceProfileAndFilter)
		if string(jsonServiceProfileAndFilter) == "{}" { // empty struct
			dst.ServiceProfileAndFilter = nil
		} else {
			return nil // data stored in dst.ServiceProfileAndFilter, return on the first match
		}
	} else {
		dst.ServiceProfileAndFilter = nil
	}

	// try to unmarshal JSON data into ServiceProfileSimpleExpression
	err = json.Unmarshal(data, &dst.ServiceProfileSimpleExpression)
	if err == nil {
		jsonServiceProfileSimpleExpression, _ := json.Marshal(dst.ServiceProfileSimpleExpression)
		if string(jsonServiceProfileSimpleExpression) == "{}" { // empty struct
			dst.ServiceProfileSimpleExpression = nil
		} else {
			return nil // data stored in dst.ServiceProfileSimpleExpression, return on the first match
		}
	} else {
		dst.ServiceProfileSimpleExpression = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ServiceProfileFilter)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ServiceProfileFilter) MarshalJSON() ([]byte, error) {
	if src.ServiceProfileAndFilter != nil {
		return json.Marshal(&src.ServiceProfileAndFilter)
	}

	if src.ServiceProfileSimpleExpression != nil {
		return json.Marshal(&src.ServiceProfileSimpleExpression)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableServiceProfileFilter struct {
	value *ServiceProfileFilter
	isSet bool
}

func (v NullableServiceProfileFilter) Get() *ServiceProfileFilter {
	return v.value
}

func (v *NullableServiceProfileFilter) Set(val *ServiceProfileFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileFilter(val *ServiceProfileFilter) *NullableServiceProfileFilter {
	return &NullableServiceProfileFilter{value: val, isSet: true}
}

func (v NullableServiceProfileFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
