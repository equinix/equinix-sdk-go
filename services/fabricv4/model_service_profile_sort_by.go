/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// ServiceProfileSortBy Possible field names to use on sorting
type ServiceProfileSortBy string

// List of ServiceProfileSortBy
const (
	SERVICEPROFILESORTBY_NAME                         ServiceProfileSortBy = "/name"
	SERVICEPROFILESORTBY_STATE                        ServiceProfileSortBy = "/state"
	SERVICEPROFILESORTBY_CHANGE_LOG_CREATED_DATE_TIME ServiceProfileSortBy = "/changeLog/createdDateTime"
	SERVICEPROFILESORTBY_CHANGE_LOG_UPDATED_DATE_TIME ServiceProfileSortBy = "/changeLog/updatedDateTime"
)

// All allowed values of ServiceProfileSortBy enum
var AllowedServiceProfileSortByEnumValues = []ServiceProfileSortBy{
	"/name",
	"/state",
	"/changeLog/createdDateTime",
	"/changeLog/updatedDateTime",
}

func (v *ServiceProfileSortBy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceProfileSortBy(value)
	for _, existing := range AllowedServiceProfileSortByEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceProfileSortBy", value)
}

// NewServiceProfileSortByFromValue returns a pointer to a valid ServiceProfileSortBy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceProfileSortByFromValue(v string) (*ServiceProfileSortBy, error) {
	ev := ServiceProfileSortBy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceProfileSortBy: valid values are %v", v, AllowedServiceProfileSortByEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceProfileSortBy) IsValid() bool {
	for _, existing := range AllowedServiceProfileSortByEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceProfileSortBy value
func (v ServiceProfileSortBy) Ptr() *ServiceProfileSortBy {
	return &v
}

type NullableServiceProfileSortBy struct {
	value *ServiceProfileSortBy
	isSet bool
}

func (v NullableServiceProfileSortBy) Get() *ServiceProfileSortBy {
	return v.value
}

func (v *NullableServiceProfileSortBy) Set(val *ServiceProfileSortBy) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileSortBy) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileSortBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileSortBy(val *ServiceProfileSortBy) *NullableServiceProfileSortBy {
	return &NullableServiceProfileSortBy{value: val, isSet: true}
}

func (v NullableServiceProfileSortBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileSortBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
