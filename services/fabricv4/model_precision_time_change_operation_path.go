/*
Equinix Fabric API v4

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// PrecisionTimeChangeOperationPath path inside document leading to updated parameter
type PrecisionTimeChangeOperationPath string

// List of precisionTimeChangeOperation_path
const (
	PRECISIONTIMECHANGEOPERATIONPATH_NAME         PrecisionTimeChangeOperationPath = "/name"
	PRECISIONTIMECHANGEOPERATIONPATH_PACKAGE_CODE PrecisionTimeChangeOperationPath = "/package/code"
)

// All allowed values of PrecisionTimeChangeOperationPath enum
var AllowedPrecisionTimeChangeOperationPathEnumValues = []PrecisionTimeChangeOperationPath{
	"/name",
	"/package/code",
}

func (v *PrecisionTimeChangeOperationPath) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PrecisionTimeChangeOperationPath(value)
	for _, existing := range AllowedPrecisionTimeChangeOperationPathEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PrecisionTimeChangeOperationPath", value)
}

// NewPrecisionTimeChangeOperationPathFromValue returns a pointer to a valid PrecisionTimeChangeOperationPath
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrecisionTimeChangeOperationPathFromValue(v string) (*PrecisionTimeChangeOperationPath, error) {
	ev := PrecisionTimeChangeOperationPath(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PrecisionTimeChangeOperationPath: valid values are %v", v, AllowedPrecisionTimeChangeOperationPathEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrecisionTimeChangeOperationPath) IsValid() bool {
	for _, existing := range AllowedPrecisionTimeChangeOperationPathEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to precisionTimeChangeOperation_path value
func (v PrecisionTimeChangeOperationPath) Ptr() *PrecisionTimeChangeOperationPath {
	return &v
}

type NullablePrecisionTimeChangeOperationPath struct {
	value *PrecisionTimeChangeOperationPath
	isSet bool
}

func (v NullablePrecisionTimeChangeOperationPath) Get() *PrecisionTimeChangeOperationPath {
	return v.value
}

func (v *NullablePrecisionTimeChangeOperationPath) Set(val *PrecisionTimeChangeOperationPath) {
	v.value = val
	v.isSet = true
}

func (v NullablePrecisionTimeChangeOperationPath) IsSet() bool {
	return v.isSet
}

func (v *NullablePrecisionTimeChangeOperationPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrecisionTimeChangeOperationPath(val *PrecisionTimeChangeOperationPath) *NullablePrecisionTimeChangeOperationPath {
	return &NullablePrecisionTimeChangeOperationPath{value: val, isSet: true}
}

func (v NullablePrecisionTimeChangeOperationPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrecisionTimeChangeOperationPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
