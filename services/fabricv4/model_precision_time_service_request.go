/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// checks if the PrecisionTimeServiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrecisionTimeServiceRequest{}

// PrecisionTimeServiceRequest Create Precision Time Service Request Schema.
type PrecisionTimeServiceRequest struct {
	Type PrecisionTimeServiceRequestType `json:"type"`
	// Precision Time Service name.
	Name        string                      `json:"name"`
	Package     PrecisionTimePackageRequest `json:"package"`
	Connections []VirtualConnectionUuid     `json:"connections"`
	Ipv4        Ipv4                        `json:"ipv4"`
	// NTP Advanced configuration - MD5 Authentication.
	NtpAdvancedConfiguration []Md5                    `json:"ntpAdvancedConfiguration,omitempty"`
	PtpAdvancedConfiguration *PtpAdvanceConfiguration `json:"ptpAdvancedConfiguration,omitempty"`
	Project                  *Project                 `json:"project,omitempty"`
	Order                    *PrecisionTimeOrder      `json:"order,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _PrecisionTimeServiceRequest PrecisionTimeServiceRequest

// NewPrecisionTimeServiceRequest instantiates a new PrecisionTimeServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrecisionTimeServiceRequest(type_ PrecisionTimeServiceRequestType, name string, package_ PrecisionTimePackageRequest, connections []VirtualConnectionUuid, ipv4 Ipv4) *PrecisionTimeServiceRequest {
	this := PrecisionTimeServiceRequest{}
	this.Type = type_
	this.Name = name
	this.Package = package_
	this.Connections = connections
	this.Ipv4 = ipv4
	return &this
}

// NewPrecisionTimeServiceRequestWithDefaults instantiates a new PrecisionTimeServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrecisionTimeServiceRequestWithDefaults() *PrecisionTimeServiceRequest {
	this := PrecisionTimeServiceRequest{}
	return &this
}

// GetType returns the Type field value
func (o *PrecisionTimeServiceRequest) GetType() PrecisionTimeServiceRequestType {
	if o == nil {
		var ret PrecisionTimeServiceRequestType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PrecisionTimeServiceRequest) GetTypeOk() (*PrecisionTimeServiceRequestType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PrecisionTimeServiceRequest) SetType(v PrecisionTimeServiceRequestType) {
	o.Type = v
}

// GetName returns the Name field value
func (o *PrecisionTimeServiceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PrecisionTimeServiceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PrecisionTimeServiceRequest) SetName(v string) {
	o.Name = v
}

// GetPackage returns the Package field value
func (o *PrecisionTimeServiceRequest) GetPackage() PrecisionTimePackageRequest {
	if o == nil {
		var ret PrecisionTimePackageRequest
		return ret
	}

	return o.Package
}

// GetPackageOk returns a tuple with the Package field value
// and a boolean to check if the value has been set.
func (o *PrecisionTimeServiceRequest) GetPackageOk() (*PrecisionTimePackageRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Package, true
}

// SetPackage sets field value
func (o *PrecisionTimeServiceRequest) SetPackage(v PrecisionTimePackageRequest) {
	o.Package = v
}

// GetConnections returns the Connections field value
func (o *PrecisionTimeServiceRequest) GetConnections() []VirtualConnectionUuid {
	if o == nil {
		var ret []VirtualConnectionUuid
		return ret
	}

	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value
// and a boolean to check if the value has been set.
func (o *PrecisionTimeServiceRequest) GetConnectionsOk() ([]VirtualConnectionUuid, bool) {
	if o == nil {
		return nil, false
	}
	return o.Connections, true
}

// SetConnections sets field value
func (o *PrecisionTimeServiceRequest) SetConnections(v []VirtualConnectionUuid) {
	o.Connections = v
}

// GetIpv4 returns the Ipv4 field value
func (o *PrecisionTimeServiceRequest) GetIpv4() Ipv4 {
	if o == nil {
		var ret Ipv4
		return ret
	}

	return o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value
// and a boolean to check if the value has been set.
func (o *PrecisionTimeServiceRequest) GetIpv4Ok() (*Ipv4, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipv4, true
}

// SetIpv4 sets field value
func (o *PrecisionTimeServiceRequest) SetIpv4(v Ipv4) {
	o.Ipv4 = v
}

// GetNtpAdvancedConfiguration returns the NtpAdvancedConfiguration field value if set, zero value otherwise.
func (o *PrecisionTimeServiceRequest) GetNtpAdvancedConfiguration() []Md5 {
	if o == nil || IsNil(o.NtpAdvancedConfiguration) {
		var ret []Md5
		return ret
	}
	return o.NtpAdvancedConfiguration
}

// GetNtpAdvancedConfigurationOk returns a tuple with the NtpAdvancedConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrecisionTimeServiceRequest) GetNtpAdvancedConfigurationOk() ([]Md5, bool) {
	if o == nil || IsNil(o.NtpAdvancedConfiguration) {
		return nil, false
	}
	return o.NtpAdvancedConfiguration, true
}

// HasNtpAdvancedConfiguration returns a boolean if a field has been set.
func (o *PrecisionTimeServiceRequest) HasNtpAdvancedConfiguration() bool {
	if o != nil && !IsNil(o.NtpAdvancedConfiguration) {
		return true
	}

	return false
}

// SetNtpAdvancedConfiguration gets a reference to the given []Md5 and assigns it to the NtpAdvancedConfiguration field.
func (o *PrecisionTimeServiceRequest) SetNtpAdvancedConfiguration(v []Md5) {
	o.NtpAdvancedConfiguration = v
}

// GetPtpAdvancedConfiguration returns the PtpAdvancedConfiguration field value if set, zero value otherwise.
func (o *PrecisionTimeServiceRequest) GetPtpAdvancedConfiguration() PtpAdvanceConfiguration {
	if o == nil || IsNil(o.PtpAdvancedConfiguration) {
		var ret PtpAdvanceConfiguration
		return ret
	}
	return *o.PtpAdvancedConfiguration
}

// GetPtpAdvancedConfigurationOk returns a tuple with the PtpAdvancedConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrecisionTimeServiceRequest) GetPtpAdvancedConfigurationOk() (*PtpAdvanceConfiguration, bool) {
	if o == nil || IsNil(o.PtpAdvancedConfiguration) {
		return nil, false
	}
	return o.PtpAdvancedConfiguration, true
}

// HasPtpAdvancedConfiguration returns a boolean if a field has been set.
func (o *PrecisionTimeServiceRequest) HasPtpAdvancedConfiguration() bool {
	if o != nil && !IsNil(o.PtpAdvancedConfiguration) {
		return true
	}

	return false
}

// SetPtpAdvancedConfiguration gets a reference to the given PtpAdvanceConfiguration and assigns it to the PtpAdvancedConfiguration field.
func (o *PrecisionTimeServiceRequest) SetPtpAdvancedConfiguration(v PtpAdvanceConfiguration) {
	o.PtpAdvancedConfiguration = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *PrecisionTimeServiceRequest) GetProject() Project {
	if o == nil || IsNil(o.Project) {
		var ret Project
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrecisionTimeServiceRequest) GetProjectOk() (*Project, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *PrecisionTimeServiceRequest) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given Project and assigns it to the Project field.
func (o *PrecisionTimeServiceRequest) SetProject(v Project) {
	o.Project = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *PrecisionTimeServiceRequest) GetOrder() PrecisionTimeOrder {
	if o == nil || IsNil(o.Order) {
		var ret PrecisionTimeOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrecisionTimeServiceRequest) GetOrderOk() (*PrecisionTimeOrder, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *PrecisionTimeServiceRequest) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given PrecisionTimeOrder and assigns it to the Order field.
func (o *PrecisionTimeServiceRequest) SetOrder(v PrecisionTimeOrder) {
	o.Order = &v
}

func (o PrecisionTimeServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrecisionTimeServiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	toSerialize["package"] = o.Package
	toSerialize["connections"] = o.Connections
	toSerialize["ipv4"] = o.Ipv4
	if !IsNil(o.NtpAdvancedConfiguration) {
		toSerialize["ntpAdvancedConfiguration"] = o.NtpAdvancedConfiguration
	}
	if !IsNil(o.PtpAdvancedConfiguration) {
		toSerialize["ptpAdvancedConfiguration"] = o.PtpAdvancedConfiguration
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PrecisionTimeServiceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"name",
		"package",
		"connections",
		"ipv4",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPrecisionTimeServiceRequest := _PrecisionTimeServiceRequest{}

	err = json.Unmarshal(data, &varPrecisionTimeServiceRequest)

	if err != nil {
		return err
	}

	*o = PrecisionTimeServiceRequest(varPrecisionTimeServiceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "package")
		delete(additionalProperties, "connections")
		delete(additionalProperties, "ipv4")
		delete(additionalProperties, "ntpAdvancedConfiguration")
		delete(additionalProperties, "ptpAdvancedConfiguration")
		delete(additionalProperties, "project")
		delete(additionalProperties, "order")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePrecisionTimeServiceRequest struct {
	value *PrecisionTimeServiceRequest
	isSet bool
}

func (v NullablePrecisionTimeServiceRequest) Get() *PrecisionTimeServiceRequest {
	return v.value
}

func (v *NullablePrecisionTimeServiceRequest) Set(val *PrecisionTimeServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePrecisionTimeServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePrecisionTimeServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrecisionTimeServiceRequest(val *PrecisionTimeServiceRequest) *NullablePrecisionTimeServiceRequest {
	return &NullablePrecisionTimeServiceRequest{value: val, isSet: true}
}

func (v NullablePrecisionTimeServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrecisionTimeServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
