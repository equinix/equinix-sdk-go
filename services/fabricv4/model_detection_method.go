/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the DetectionMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetectionMethod{}

// DetectionMethod struct for DetectionMethod
type DetectionMethod struct {
	Type *DetectionMethodType `json:"type,omitempty"`
	// Stream alert rule metric window size
	WindowSize *string                 `json:"windowSize,omitempty"`
	Operand    *DetectionMethodOperand `json:"operand,omitempty"`
	// Stream alert rule metric warning threshold
	WarningThreshold *string `json:"warningThreshold,omitempty"`
	// Stream alert rule metric critical threshold
	CriticalThreshold    *string `json:"criticalThreshold,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DetectionMethod DetectionMethod

// NewDetectionMethod instantiates a new DetectionMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetectionMethod() *DetectionMethod {
	this := DetectionMethod{}
	return &this
}

// NewDetectionMethodWithDefaults instantiates a new DetectionMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetectionMethodWithDefaults() *DetectionMethod {
	this := DetectionMethod{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DetectionMethod) GetType() DetectionMethodType {
	if o == nil || IsNil(o.Type) {
		var ret DetectionMethodType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectionMethod) GetTypeOk() (*DetectionMethodType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DetectionMethod) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given DetectionMethodType and assigns it to the Type field.
func (o *DetectionMethod) SetType(v DetectionMethodType) {
	o.Type = &v
}

// GetWindowSize returns the WindowSize field value if set, zero value otherwise.
func (o *DetectionMethod) GetWindowSize() string {
	if o == nil || IsNil(o.WindowSize) {
		var ret string
		return ret
	}
	return *o.WindowSize
}

// GetWindowSizeOk returns a tuple with the WindowSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectionMethod) GetWindowSizeOk() (*string, bool) {
	if o == nil || IsNil(o.WindowSize) {
		return nil, false
	}
	return o.WindowSize, true
}

// HasWindowSize returns a boolean if a field has been set.
func (o *DetectionMethod) HasWindowSize() bool {
	if o != nil && !IsNil(o.WindowSize) {
		return true
	}

	return false
}

// SetWindowSize gets a reference to the given string and assigns it to the WindowSize field.
func (o *DetectionMethod) SetWindowSize(v string) {
	o.WindowSize = &v
}

// GetOperand returns the Operand field value if set, zero value otherwise.
func (o *DetectionMethod) GetOperand() DetectionMethodOperand {
	if o == nil || IsNil(o.Operand) {
		var ret DetectionMethodOperand
		return ret
	}
	return *o.Operand
}

// GetOperandOk returns a tuple with the Operand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectionMethod) GetOperandOk() (*DetectionMethodOperand, bool) {
	if o == nil || IsNil(o.Operand) {
		return nil, false
	}
	return o.Operand, true
}

// HasOperand returns a boolean if a field has been set.
func (o *DetectionMethod) HasOperand() bool {
	if o != nil && !IsNil(o.Operand) {
		return true
	}

	return false
}

// SetOperand gets a reference to the given DetectionMethodOperand and assigns it to the Operand field.
func (o *DetectionMethod) SetOperand(v DetectionMethodOperand) {
	o.Operand = &v
}

// GetWarningThreshold returns the WarningThreshold field value if set, zero value otherwise.
func (o *DetectionMethod) GetWarningThreshold() string {
	if o == nil || IsNil(o.WarningThreshold) {
		var ret string
		return ret
	}
	return *o.WarningThreshold
}

// GetWarningThresholdOk returns a tuple with the WarningThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectionMethod) GetWarningThresholdOk() (*string, bool) {
	if o == nil || IsNil(o.WarningThreshold) {
		return nil, false
	}
	return o.WarningThreshold, true
}

// HasWarningThreshold returns a boolean if a field has been set.
func (o *DetectionMethod) HasWarningThreshold() bool {
	if o != nil && !IsNil(o.WarningThreshold) {
		return true
	}

	return false
}

// SetWarningThreshold gets a reference to the given string and assigns it to the WarningThreshold field.
func (o *DetectionMethod) SetWarningThreshold(v string) {
	o.WarningThreshold = &v
}

// GetCriticalThreshold returns the CriticalThreshold field value if set, zero value otherwise.
func (o *DetectionMethod) GetCriticalThreshold() string {
	if o == nil || IsNil(o.CriticalThreshold) {
		var ret string
		return ret
	}
	return *o.CriticalThreshold
}

// GetCriticalThresholdOk returns a tuple with the CriticalThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectionMethod) GetCriticalThresholdOk() (*string, bool) {
	if o == nil || IsNil(o.CriticalThreshold) {
		return nil, false
	}
	return o.CriticalThreshold, true
}

// HasCriticalThreshold returns a boolean if a field has been set.
func (o *DetectionMethod) HasCriticalThreshold() bool {
	if o != nil && !IsNil(o.CriticalThreshold) {
		return true
	}

	return false
}

// SetCriticalThreshold gets a reference to the given string and assigns it to the CriticalThreshold field.
func (o *DetectionMethod) SetCriticalThreshold(v string) {
	o.CriticalThreshold = &v
}

func (o DetectionMethod) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetectionMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.WindowSize) {
		toSerialize["windowSize"] = o.WindowSize
	}
	if !IsNil(o.Operand) {
		toSerialize["operand"] = o.Operand
	}
	if !IsNil(o.WarningThreshold) {
		toSerialize["warningThreshold"] = o.WarningThreshold
	}
	if !IsNil(o.CriticalThreshold) {
		toSerialize["criticalThreshold"] = o.CriticalThreshold
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DetectionMethod) UnmarshalJSON(data []byte) (err error) {
	varDetectionMethod := _DetectionMethod{}

	err = json.Unmarshal(data, &varDetectionMethod)

	if err != nil {
		return err
	}

	*o = DetectionMethod(varDetectionMethod)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "windowSize")
		delete(additionalProperties, "operand")
		delete(additionalProperties, "warningThreshold")
		delete(additionalProperties, "criticalThreshold")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDetectionMethod struct {
	value *DetectionMethod
	isSet bool
}

func (v NullableDetectionMethod) Get() *DetectionMethod {
	return v.value
}

func (v *NullableDetectionMethod) Set(val *DetectionMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableDetectionMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableDetectionMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetectionMethod(val *DetectionMethod) *NullableDetectionMethod {
	return &NullableDetectionMethod{value: val, isSet: true}
}

func (v NullableDetectionMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetectionMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
