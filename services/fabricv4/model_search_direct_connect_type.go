/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// SearchDirectConnectType the model 'SearchDirectConnectType'
type SearchDirectConnectType string

// List of SearchDirectConnect_type
const (
	SEARCHDIRECTCONNECTTYPE_DIRECT_CONNECT SearchDirectConnectType = "DIRECT_CONNECT"
)

// All allowed values of SearchDirectConnectType enum
var AllowedSearchDirectConnectTypeEnumValues = []SearchDirectConnectType{
	"DIRECT_CONNECT",
}

func (v *SearchDirectConnectType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SearchDirectConnectType(value)
	for _, existing := range AllowedSearchDirectConnectTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SearchDirectConnectType", value)
}

// NewSearchDirectConnectTypeFromValue returns a pointer to a valid SearchDirectConnectType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSearchDirectConnectTypeFromValue(v string) (*SearchDirectConnectType, error) {
	ev := SearchDirectConnectType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SearchDirectConnectType: valid values are %v", v, AllowedSearchDirectConnectTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SearchDirectConnectType) IsValid() bool {
	for _, existing := range AllowedSearchDirectConnectTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SearchDirectConnect_type value
func (v SearchDirectConnectType) Ptr() *SearchDirectConnectType {
	return &v
}

type NullableSearchDirectConnectType struct {
	value *SearchDirectConnectType
	isSet bool
}

func (v NullableSearchDirectConnectType) Get() *SearchDirectConnectType {
	return v.value
}

func (v *NullableSearchDirectConnectType) Set(val *SearchDirectConnectType) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchDirectConnectType) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchDirectConnectType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchDirectConnectType(val *SearchDirectConnectType) *NullableSearchDirectConnectType {
	return &NullableSearchDirectConnectType{value: val, isSet: true}
}

func (v NullableSearchDirectConnectType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchDirectConnectType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
