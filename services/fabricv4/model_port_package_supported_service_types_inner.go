/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// PortPackageSupportedServiceTypesInner Port Package Service Type
type PortPackageSupportedServiceTypesInner string

// List of PortPackage_supportedServiceTypes_inner
const (
	PORTPACKAGESUPPORTEDSERVICETYPESINNER_MSP PortPackageSupportedServiceTypesInner = "MSP"
)

// All allowed values of PortPackageSupportedServiceTypesInner enum
var AllowedPortPackageSupportedServiceTypesInnerEnumValues = []PortPackageSupportedServiceTypesInner{
	"MSP",
}

func (v *PortPackageSupportedServiceTypesInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PortPackageSupportedServiceTypesInner(value)
	for _, existing := range AllowedPortPackageSupportedServiceTypesInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PortPackageSupportedServiceTypesInner", value)
}

// NewPortPackageSupportedServiceTypesInnerFromValue returns a pointer to a valid PortPackageSupportedServiceTypesInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortPackageSupportedServiceTypesInnerFromValue(v string) (*PortPackageSupportedServiceTypesInner, error) {
	ev := PortPackageSupportedServiceTypesInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PortPackageSupportedServiceTypesInner: valid values are %v", v, AllowedPortPackageSupportedServiceTypesInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortPackageSupportedServiceTypesInner) IsValid() bool {
	for _, existing := range AllowedPortPackageSupportedServiceTypesInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PortPackage_supportedServiceTypes_inner value
func (v PortPackageSupportedServiceTypesInner) Ptr() *PortPackageSupportedServiceTypesInner {
	return &v
}

type NullablePortPackageSupportedServiceTypesInner struct {
	value *PortPackageSupportedServiceTypesInner
	isSet bool
}

func (v NullablePortPackageSupportedServiceTypesInner) Get() *PortPackageSupportedServiceTypesInner {
	return v.value
}

func (v *NullablePortPackageSupportedServiceTypesInner) Set(val *PortPackageSupportedServiceTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePortPackageSupportedServiceTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePortPackageSupportedServiceTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortPackageSupportedServiceTypesInner(val *PortPackageSupportedServiceTypesInner) *NullablePortPackageSupportedServiceTypesInner {
	return &NullablePortPackageSupportedServiceTypesInner{value: val, isSet: true}
}

func (v NullablePortPackageSupportedServiceTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortPackageSupportedServiceTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
