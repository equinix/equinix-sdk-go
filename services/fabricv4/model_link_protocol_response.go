/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the LinkProtocolResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkProtocolResponse{}

// LinkProtocolResponse Link Protocol response
type LinkProtocolResponse struct {
	// LinkProtocol URI
	Href *string `json:"href,omitempty"`
	// Equinix-assigned network identifier
	Uuid                 *string                   `json:"uuid,omitempty"`
	State                *LinkProtocolState        `json:"state,omitempty"`
	Type                 *LinkProtocolRequestType  `json:"type,omitempty"`
	VlanTag              *int32                    `json:"vlanTag,omitempty"`
	Vni                  *int32                    `json:"vni,omitempty"`
	VlanTagMin           *int32                    `json:"vlanTagMin,omitempty"`
	VlanTagMax           *int32                    `json:"vlanTagMax,omitempty"`
	VlanSTag             *int32                    `json:"vlanSTag,omitempty"`
	VlanCTag             *int32                    `json:"vlanCTag,omitempty"`
	VlanCTagMin          *int32                    `json:"vlanCTagMin,omitempty"`
	VlanCTagMax          *int32                    `json:"vlanCTagMax,omitempty"`
	SubInterface         *SubInterface             `json:"subInterface,omitempty"`
	Asset                *LinkProtocolConnection   `json:"asset,omitempty"`
	ServiceToken         *LinkProtocolServiceToken `json:"serviceToken,omitempty"`
	ChangeLog            *Changelog                `json:"changeLog,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LinkProtocolResponse LinkProtocolResponse

// NewLinkProtocolResponse instantiates a new LinkProtocolResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkProtocolResponse() *LinkProtocolResponse {
	this := LinkProtocolResponse{}
	return &this
}

// NewLinkProtocolResponseWithDefaults instantiates a new LinkProtocolResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkProtocolResponseWithDefaults() *LinkProtocolResponse {
	this := LinkProtocolResponse{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *LinkProtocolResponse) SetHref(v string) {
	o.Href = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *LinkProtocolResponse) SetUuid(v string) {
	o.Uuid = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetState() LinkProtocolState {
	if o == nil || IsNil(o.State) {
		var ret LinkProtocolState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetStateOk() (*LinkProtocolState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given LinkProtocolState and assigns it to the State field.
func (o *LinkProtocolResponse) SetState(v LinkProtocolState) {
	o.State = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetType() LinkProtocolRequestType {
	if o == nil || IsNil(o.Type) {
		var ret LinkProtocolRequestType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetTypeOk() (*LinkProtocolRequestType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given LinkProtocolRequestType and assigns it to the Type field.
func (o *LinkProtocolResponse) SetType(v LinkProtocolRequestType) {
	o.Type = &v
}

// GetVlanTag returns the VlanTag field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetVlanTag() int32 {
	if o == nil || IsNil(o.VlanTag) {
		var ret int32
		return ret
	}
	return *o.VlanTag
}

// GetVlanTagOk returns a tuple with the VlanTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetVlanTagOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanTag) {
		return nil, false
	}
	return o.VlanTag, true
}

// HasVlanTag returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasVlanTag() bool {
	if o != nil && !IsNil(o.VlanTag) {
		return true
	}

	return false
}

// SetVlanTag gets a reference to the given int32 and assigns it to the VlanTag field.
func (o *LinkProtocolResponse) SetVlanTag(v int32) {
	o.VlanTag = &v
}

// GetVni returns the Vni field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetVni() int32 {
	if o == nil || IsNil(o.Vni) {
		var ret int32
		return ret
	}
	return *o.Vni
}

// GetVniOk returns a tuple with the Vni field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetVniOk() (*int32, bool) {
	if o == nil || IsNil(o.Vni) {
		return nil, false
	}
	return o.Vni, true
}

// HasVni returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasVni() bool {
	if o != nil && !IsNil(o.Vni) {
		return true
	}

	return false
}

// SetVni gets a reference to the given int32 and assigns it to the Vni field.
func (o *LinkProtocolResponse) SetVni(v int32) {
	o.Vni = &v
}

// GetVlanTagMin returns the VlanTagMin field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetVlanTagMin() int32 {
	if o == nil || IsNil(o.VlanTagMin) {
		var ret int32
		return ret
	}
	return *o.VlanTagMin
}

// GetVlanTagMinOk returns a tuple with the VlanTagMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetVlanTagMinOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanTagMin) {
		return nil, false
	}
	return o.VlanTagMin, true
}

// HasVlanTagMin returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasVlanTagMin() bool {
	if o != nil && !IsNil(o.VlanTagMin) {
		return true
	}

	return false
}

// SetVlanTagMin gets a reference to the given int32 and assigns it to the VlanTagMin field.
func (o *LinkProtocolResponse) SetVlanTagMin(v int32) {
	o.VlanTagMin = &v
}

// GetVlanTagMax returns the VlanTagMax field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetVlanTagMax() int32 {
	if o == nil || IsNil(o.VlanTagMax) {
		var ret int32
		return ret
	}
	return *o.VlanTagMax
}

// GetVlanTagMaxOk returns a tuple with the VlanTagMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetVlanTagMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanTagMax) {
		return nil, false
	}
	return o.VlanTagMax, true
}

// HasVlanTagMax returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasVlanTagMax() bool {
	if o != nil && !IsNil(o.VlanTagMax) {
		return true
	}

	return false
}

// SetVlanTagMax gets a reference to the given int32 and assigns it to the VlanTagMax field.
func (o *LinkProtocolResponse) SetVlanTagMax(v int32) {
	o.VlanTagMax = &v
}

// GetVlanSTag returns the VlanSTag field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetVlanSTag() int32 {
	if o == nil || IsNil(o.VlanSTag) {
		var ret int32
		return ret
	}
	return *o.VlanSTag
}

// GetVlanSTagOk returns a tuple with the VlanSTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetVlanSTagOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanSTag) {
		return nil, false
	}
	return o.VlanSTag, true
}

// HasVlanSTag returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasVlanSTag() bool {
	if o != nil && !IsNil(o.VlanSTag) {
		return true
	}

	return false
}

// SetVlanSTag gets a reference to the given int32 and assigns it to the VlanSTag field.
func (o *LinkProtocolResponse) SetVlanSTag(v int32) {
	o.VlanSTag = &v
}

// GetVlanCTag returns the VlanCTag field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetVlanCTag() int32 {
	if o == nil || IsNil(o.VlanCTag) {
		var ret int32
		return ret
	}
	return *o.VlanCTag
}

// GetVlanCTagOk returns a tuple with the VlanCTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetVlanCTagOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanCTag) {
		return nil, false
	}
	return o.VlanCTag, true
}

// HasVlanCTag returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasVlanCTag() bool {
	if o != nil && !IsNil(o.VlanCTag) {
		return true
	}

	return false
}

// SetVlanCTag gets a reference to the given int32 and assigns it to the VlanCTag field.
func (o *LinkProtocolResponse) SetVlanCTag(v int32) {
	o.VlanCTag = &v
}

// GetVlanCTagMin returns the VlanCTagMin field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetVlanCTagMin() int32 {
	if o == nil || IsNil(o.VlanCTagMin) {
		var ret int32
		return ret
	}
	return *o.VlanCTagMin
}

// GetVlanCTagMinOk returns a tuple with the VlanCTagMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetVlanCTagMinOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanCTagMin) {
		return nil, false
	}
	return o.VlanCTagMin, true
}

// HasVlanCTagMin returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasVlanCTagMin() bool {
	if o != nil && !IsNil(o.VlanCTagMin) {
		return true
	}

	return false
}

// SetVlanCTagMin gets a reference to the given int32 and assigns it to the VlanCTagMin field.
func (o *LinkProtocolResponse) SetVlanCTagMin(v int32) {
	o.VlanCTagMin = &v
}

// GetVlanCTagMax returns the VlanCTagMax field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetVlanCTagMax() int32 {
	if o == nil || IsNil(o.VlanCTagMax) {
		var ret int32
		return ret
	}
	return *o.VlanCTagMax
}

// GetVlanCTagMaxOk returns a tuple with the VlanCTagMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetVlanCTagMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanCTagMax) {
		return nil, false
	}
	return o.VlanCTagMax, true
}

// HasVlanCTagMax returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasVlanCTagMax() bool {
	if o != nil && !IsNil(o.VlanCTagMax) {
		return true
	}

	return false
}

// SetVlanCTagMax gets a reference to the given int32 and assigns it to the VlanCTagMax field.
func (o *LinkProtocolResponse) SetVlanCTagMax(v int32) {
	o.VlanCTagMax = &v
}

// GetSubInterface returns the SubInterface field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetSubInterface() SubInterface {
	if o == nil || IsNil(o.SubInterface) {
		var ret SubInterface
		return ret
	}
	return *o.SubInterface
}

// GetSubInterfaceOk returns a tuple with the SubInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetSubInterfaceOk() (*SubInterface, bool) {
	if o == nil || IsNil(o.SubInterface) {
		return nil, false
	}
	return o.SubInterface, true
}

// HasSubInterface returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasSubInterface() bool {
	if o != nil && !IsNil(o.SubInterface) {
		return true
	}

	return false
}

// SetSubInterface gets a reference to the given SubInterface and assigns it to the SubInterface field.
func (o *LinkProtocolResponse) SetSubInterface(v SubInterface) {
	o.SubInterface = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetAsset() LinkProtocolConnection {
	if o == nil || IsNil(o.Asset) {
		var ret LinkProtocolConnection
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetAssetOk() (*LinkProtocolConnection, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given LinkProtocolConnection and assigns it to the Asset field.
func (o *LinkProtocolResponse) SetAsset(v LinkProtocolConnection) {
	o.Asset = &v
}

// GetServiceToken returns the ServiceToken field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetServiceToken() LinkProtocolServiceToken {
	if o == nil || IsNil(o.ServiceToken) {
		var ret LinkProtocolServiceToken
		return ret
	}
	return *o.ServiceToken
}

// GetServiceTokenOk returns a tuple with the ServiceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetServiceTokenOk() (*LinkProtocolServiceToken, bool) {
	if o == nil || IsNil(o.ServiceToken) {
		return nil, false
	}
	return o.ServiceToken, true
}

// HasServiceToken returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasServiceToken() bool {
	if o != nil && !IsNil(o.ServiceToken) {
		return true
	}

	return false
}

// SetServiceToken gets a reference to the given LinkProtocolServiceToken and assigns it to the ServiceToken field.
func (o *LinkProtocolResponse) SetServiceToken(v LinkProtocolServiceToken) {
	o.ServiceToken = &v
}

// GetChangeLog returns the ChangeLog field value if set, zero value otherwise.
func (o *LinkProtocolResponse) GetChangeLog() Changelog {
	if o == nil || IsNil(o.ChangeLog) {
		var ret Changelog
		return ret
	}
	return *o.ChangeLog
}

// GetChangeLogOk returns a tuple with the ChangeLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkProtocolResponse) GetChangeLogOk() (*Changelog, bool) {
	if o == nil || IsNil(o.ChangeLog) {
		return nil, false
	}
	return o.ChangeLog, true
}

// HasChangeLog returns a boolean if a field has been set.
func (o *LinkProtocolResponse) HasChangeLog() bool {
	if o != nil && !IsNil(o.ChangeLog) {
		return true
	}

	return false
}

// SetChangeLog gets a reference to the given Changelog and assigns it to the ChangeLog field.
func (o *LinkProtocolResponse) SetChangeLog(v Changelog) {
	o.ChangeLog = &v
}

func (o LinkProtocolResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkProtocolResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VlanTag) {
		toSerialize["vlanTag"] = o.VlanTag
	}
	if !IsNil(o.Vni) {
		toSerialize["vni"] = o.Vni
	}
	if !IsNil(o.VlanTagMin) {
		toSerialize["vlanTagMin"] = o.VlanTagMin
	}
	if !IsNil(o.VlanTagMax) {
		toSerialize["vlanTagMax"] = o.VlanTagMax
	}
	if !IsNil(o.VlanSTag) {
		toSerialize["vlanSTag"] = o.VlanSTag
	}
	if !IsNil(o.VlanCTag) {
		toSerialize["vlanCTag"] = o.VlanCTag
	}
	if !IsNil(o.VlanCTagMin) {
		toSerialize["vlanCTagMin"] = o.VlanCTagMin
	}
	if !IsNil(o.VlanCTagMax) {
		toSerialize["vlanCTagMax"] = o.VlanCTagMax
	}
	if !IsNil(o.SubInterface) {
		toSerialize["subInterface"] = o.SubInterface
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.ServiceToken) {
		toSerialize["serviceToken"] = o.ServiceToken
	}
	if !IsNil(o.ChangeLog) {
		toSerialize["changeLog"] = o.ChangeLog
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LinkProtocolResponse) UnmarshalJSON(data []byte) (err error) {
	varLinkProtocolResponse := _LinkProtocolResponse{}

	err = json.Unmarshal(data, &varLinkProtocolResponse)

	if err != nil {
		return err
	}

	*o = LinkProtocolResponse(varLinkProtocolResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "href")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "state")
		delete(additionalProperties, "type")
		delete(additionalProperties, "vlanTag")
		delete(additionalProperties, "vni")
		delete(additionalProperties, "vlanTagMin")
		delete(additionalProperties, "vlanTagMax")
		delete(additionalProperties, "vlanSTag")
		delete(additionalProperties, "vlanCTag")
		delete(additionalProperties, "vlanCTagMin")
		delete(additionalProperties, "vlanCTagMax")
		delete(additionalProperties, "subInterface")
		delete(additionalProperties, "asset")
		delete(additionalProperties, "serviceToken")
		delete(additionalProperties, "changeLog")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLinkProtocolResponse struct {
	value *LinkProtocolResponse
	isSet bool
}

func (v NullableLinkProtocolResponse) Get() *LinkProtocolResponse {
	return v.value
}

func (v *NullableLinkProtocolResponse) Set(val *LinkProtocolResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkProtocolResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkProtocolResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkProtocolResponse(val *LinkProtocolResponse) *NullableLinkProtocolResponse {
	return &NullableLinkProtocolResponse{value: val, isSet: true}
}

func (v NullableLinkProtocolResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkProtocolResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
