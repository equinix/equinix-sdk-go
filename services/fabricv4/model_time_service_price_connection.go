/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the TimeServicePriceConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeServicePriceConnection{}

// TimeServicePriceConnection Time Service Price Connection configuration
type TimeServicePriceConnection struct {
	ASide                *TimeServicePriceConnectionASide `json:"aSide,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TimeServicePriceConnection TimeServicePriceConnection

// NewTimeServicePriceConnection instantiates a new TimeServicePriceConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeServicePriceConnection() *TimeServicePriceConnection {
	this := TimeServicePriceConnection{}
	return &this
}

// NewTimeServicePriceConnectionWithDefaults instantiates a new TimeServicePriceConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeServicePriceConnectionWithDefaults() *TimeServicePriceConnection {
	this := TimeServicePriceConnection{}
	return &this
}

// GetASide returns the ASide field value if set, zero value otherwise.
func (o *TimeServicePriceConnection) GetASide() TimeServicePriceConnectionASide {
	if o == nil || IsNil(o.ASide) {
		var ret TimeServicePriceConnectionASide
		return ret
	}
	return *o.ASide
}

// GetASideOk returns a tuple with the ASide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeServicePriceConnection) GetASideOk() (*TimeServicePriceConnectionASide, bool) {
	if o == nil || IsNil(o.ASide) {
		return nil, false
	}
	return o.ASide, true
}

// HasASide returns a boolean if a field has been set.
func (o *TimeServicePriceConnection) HasASide() bool {
	if o != nil && !IsNil(o.ASide) {
		return true
	}

	return false
}

// SetASide gets a reference to the given TimeServicePriceConnectionASide and assigns it to the ASide field.
func (o *TimeServicePriceConnection) SetASide(v TimeServicePriceConnectionASide) {
	o.ASide = &v
}

func (o TimeServicePriceConnection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeServicePriceConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ASide) {
		toSerialize["aSide"] = o.ASide
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TimeServicePriceConnection) UnmarshalJSON(data []byte) (err error) {
	varTimeServicePriceConnection := _TimeServicePriceConnection{}

	err = json.Unmarshal(data, &varTimeServicePriceConnection)

	if err != nil {
		return err
	}

	*o = TimeServicePriceConnection(varTimeServicePriceConnection)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "aSide")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTimeServicePriceConnection struct {
	value *TimeServicePriceConnection
	isSet bool
}

func (v NullableTimeServicePriceConnection) Get() *TimeServicePriceConnection {
	return v.value
}

func (v *NullableTimeServicePriceConnection) Set(val *TimeServicePriceConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeServicePriceConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeServicePriceConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeServicePriceConnection(val *TimeServicePriceConnection) *NullableTimeServicePriceConnection {
	return &NullableTimeServicePriceConnection{value: val, isSet: true}
}

func (v NullableTimeServicePriceConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeServicePriceConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
