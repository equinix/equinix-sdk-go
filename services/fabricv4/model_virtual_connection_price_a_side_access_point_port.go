/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the VirtualConnectionPriceASideAccessPointPort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualConnectionPriceASideAccessPointPort{}

// VirtualConnectionPriceASideAccessPointPort struct for VirtualConnectionPriceASideAccessPointPort
type VirtualConnectionPriceASideAccessPointPort struct {
	Settings             *VirtualConnectionPriceASideAccessPointPortSettings `json:"settings,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VirtualConnectionPriceASideAccessPointPort VirtualConnectionPriceASideAccessPointPort

// NewVirtualConnectionPriceASideAccessPointPort instantiates a new VirtualConnectionPriceASideAccessPointPort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualConnectionPriceASideAccessPointPort() *VirtualConnectionPriceASideAccessPointPort {
	this := VirtualConnectionPriceASideAccessPointPort{}
	return &this
}

// NewVirtualConnectionPriceASideAccessPointPortWithDefaults instantiates a new VirtualConnectionPriceASideAccessPointPort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualConnectionPriceASideAccessPointPortWithDefaults() *VirtualConnectionPriceASideAccessPointPort {
	this := VirtualConnectionPriceASideAccessPointPort{}
	return &this
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *VirtualConnectionPriceASideAccessPointPort) GetSettings() VirtualConnectionPriceASideAccessPointPortSettings {
	if o == nil || IsNil(o.Settings) {
		var ret VirtualConnectionPriceASideAccessPointPortSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConnectionPriceASideAccessPointPort) GetSettingsOk() (*VirtualConnectionPriceASideAccessPointPortSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *VirtualConnectionPriceASideAccessPointPort) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given VirtualConnectionPriceASideAccessPointPortSettings and assigns it to the Settings field.
func (o *VirtualConnectionPriceASideAccessPointPort) SetSettings(v VirtualConnectionPriceASideAccessPointPortSettings) {
	o.Settings = &v
}

func (o VirtualConnectionPriceASideAccessPointPort) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualConnectionPriceASideAccessPointPort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VirtualConnectionPriceASideAccessPointPort) UnmarshalJSON(data []byte) (err error) {
	varVirtualConnectionPriceASideAccessPointPort := _VirtualConnectionPriceASideAccessPointPort{}

	err = json.Unmarshal(data, &varVirtualConnectionPriceASideAccessPointPort)

	if err != nil {
		return err
	}

	*o = VirtualConnectionPriceASideAccessPointPort(varVirtualConnectionPriceASideAccessPointPort)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "settings")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVirtualConnectionPriceASideAccessPointPort struct {
	value *VirtualConnectionPriceASideAccessPointPort
	isSet bool
}

func (v NullableVirtualConnectionPriceASideAccessPointPort) Get() *VirtualConnectionPriceASideAccessPointPort {
	return v.value
}

func (v *NullableVirtualConnectionPriceASideAccessPointPort) Set(val *VirtualConnectionPriceASideAccessPointPort) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualConnectionPriceASideAccessPointPort) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualConnectionPriceASideAccessPointPort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualConnectionPriceASideAccessPointPort(val *VirtualConnectionPriceASideAccessPointPort) *NullableVirtualConnectionPriceASideAccessPointPort {
	return &NullableVirtualConnectionPriceASideAccessPointPort{value: val, isSet: true}
}

func (v NullableVirtualConnectionPriceASideAccessPointPort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualConnectionPriceASideAccessPointPort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
