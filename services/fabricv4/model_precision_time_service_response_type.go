/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// PrecisionTimeServiceResponseType Precision Time Service type refers to the corresponding protocol.
type PrecisionTimeServiceResponseType string

// List of precisionTimeServiceResponse_type
const (
	PRECISIONTIMESERVICERESPONSETYPE_NTP PrecisionTimeServiceResponseType = "NTP"
	PRECISIONTIMESERVICERESPONSETYPE_PTP PrecisionTimeServiceResponseType = "PTP"
)

// All allowed values of PrecisionTimeServiceResponseType enum
var AllowedPrecisionTimeServiceResponseTypeEnumValues = []PrecisionTimeServiceResponseType{
	"NTP",
	"PTP",
}

func (v *PrecisionTimeServiceResponseType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PrecisionTimeServiceResponseType(value)
	for _, existing := range AllowedPrecisionTimeServiceResponseTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PrecisionTimeServiceResponseType", value)
}

// NewPrecisionTimeServiceResponseTypeFromValue returns a pointer to a valid PrecisionTimeServiceResponseType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrecisionTimeServiceResponseTypeFromValue(v string) (*PrecisionTimeServiceResponseType, error) {
	ev := PrecisionTimeServiceResponseType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PrecisionTimeServiceResponseType: valid values are %v", v, AllowedPrecisionTimeServiceResponseTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrecisionTimeServiceResponseType) IsValid() bool {
	for _, existing := range AllowedPrecisionTimeServiceResponseTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to precisionTimeServiceResponse_type value
func (v PrecisionTimeServiceResponseType) Ptr() *PrecisionTimeServiceResponseType {
	return &v
}

type NullablePrecisionTimeServiceResponseType struct {
	value *PrecisionTimeServiceResponseType
	isSet bool
}

func (v NullablePrecisionTimeServiceResponseType) Get() *PrecisionTimeServiceResponseType {
	return v.value
}

func (v *NullablePrecisionTimeServiceResponseType) Set(val *PrecisionTimeServiceResponseType) {
	v.value = val
	v.isSet = true
}

func (v NullablePrecisionTimeServiceResponseType) IsSet() bool {
	return v.isSet
}

func (v *NullablePrecisionTimeServiceResponseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrecisionTimeServiceResponseType(val *PrecisionTimeServiceResponseType) *NullablePrecisionTimeServiceResponseType {
	return &NullablePrecisionTimeServiceResponseType{value: val, isSet: true}
}

func (v NullablePrecisionTimeServiceResponseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrecisionTimeServiceResponseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
