/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// checks if the AWSVirtualPrivateGatewayResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AWSVirtualPrivateGatewayResponse{}

// AWSVirtualPrivateGatewayResponse struct for AWSVirtualPrivateGatewayResponse
type AWSVirtualPrivateGatewayResponse struct {
	// Virtual private gateway id.
	Id                   *string            `json:"id,omitempty"`
	Type                 string             `json:"type"`
	State                DeploymentState    `json:"state"`
	Required             *bool              `json:"required,omitempty"`
	VpcId                string             `json:"vpcId"`
	SubnetId             string             `json:"subnetId"`
	DeploymentProperties TopologyProperties `json:"deploymentProperties"`
	AdditionalProperties map[string]interface{}
}

type _AWSVirtualPrivateGatewayResponse AWSVirtualPrivateGatewayResponse

// NewAWSVirtualPrivateGatewayResponse instantiates a new AWSVirtualPrivateGatewayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAWSVirtualPrivateGatewayResponse(type_ string, state DeploymentState, vpcId string, subnetId string, deploymentProperties TopologyProperties) *AWSVirtualPrivateGatewayResponse {
	this := AWSVirtualPrivateGatewayResponse{}
	this.Type = type_
	this.State = state
	this.VpcId = vpcId
	this.SubnetId = subnetId
	this.DeploymentProperties = deploymentProperties
	return &this
}

// NewAWSVirtualPrivateGatewayResponseWithDefaults instantiates a new AWSVirtualPrivateGatewayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSVirtualPrivateGatewayResponseWithDefaults() *AWSVirtualPrivateGatewayResponse {
	this := AWSVirtualPrivateGatewayResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AWSVirtualPrivateGatewayResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSVirtualPrivateGatewayResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AWSVirtualPrivateGatewayResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AWSVirtualPrivateGatewayResponse) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value
func (o *AWSVirtualPrivateGatewayResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AWSVirtualPrivateGatewayResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AWSVirtualPrivateGatewayResponse) SetType(v string) {
	o.Type = v
}

// GetState returns the State field value
func (o *AWSVirtualPrivateGatewayResponse) GetState() DeploymentState {
	if o == nil {
		var ret DeploymentState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *AWSVirtualPrivateGatewayResponse) GetStateOk() (*DeploymentState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *AWSVirtualPrivateGatewayResponse) SetState(v DeploymentState) {
	o.State = v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *AWSVirtualPrivateGatewayResponse) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSVirtualPrivateGatewayResponse) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *AWSVirtualPrivateGatewayResponse) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *AWSVirtualPrivateGatewayResponse) SetRequired(v bool) {
	o.Required = &v
}

// GetVpcId returns the VpcId field value
func (o *AWSVirtualPrivateGatewayResponse) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *AWSVirtualPrivateGatewayResponse) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *AWSVirtualPrivateGatewayResponse) SetVpcId(v string) {
	o.VpcId = v
}

// GetSubnetId returns the SubnetId field value
func (o *AWSVirtualPrivateGatewayResponse) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *AWSVirtualPrivateGatewayResponse) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *AWSVirtualPrivateGatewayResponse) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetDeploymentProperties returns the DeploymentProperties field value
func (o *AWSVirtualPrivateGatewayResponse) GetDeploymentProperties() TopologyProperties {
	if o == nil {
		var ret TopologyProperties
		return ret
	}

	return o.DeploymentProperties
}

// GetDeploymentPropertiesOk returns a tuple with the DeploymentProperties field value
// and a boolean to check if the value has been set.
func (o *AWSVirtualPrivateGatewayResponse) GetDeploymentPropertiesOk() (*TopologyProperties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploymentProperties, true
}

// SetDeploymentProperties sets field value
func (o *AWSVirtualPrivateGatewayResponse) SetDeploymentProperties(v TopologyProperties) {
	o.DeploymentProperties = v
}

func (o AWSVirtualPrivateGatewayResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AWSVirtualPrivateGatewayResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["type"] = o.Type
	toSerialize["state"] = o.State
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	toSerialize["vpcId"] = o.VpcId
	toSerialize["subnetId"] = o.SubnetId
	toSerialize["deploymentProperties"] = o.DeploymentProperties

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AWSVirtualPrivateGatewayResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"state",
		"vpcId",
		"subnetId",
		"deploymentProperties",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAWSVirtualPrivateGatewayResponse := _AWSVirtualPrivateGatewayResponse{}

	err = json.Unmarshal(data, &varAWSVirtualPrivateGatewayResponse)

	if err != nil {
		return err
	}

	*o = AWSVirtualPrivateGatewayResponse(varAWSVirtualPrivateGatewayResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "type")
		delete(additionalProperties, "state")
		delete(additionalProperties, "required")
		delete(additionalProperties, "vpcId")
		delete(additionalProperties, "subnetId")
		delete(additionalProperties, "deploymentProperties")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAWSVirtualPrivateGatewayResponse struct {
	value *AWSVirtualPrivateGatewayResponse
	isSet bool
}

func (v NullableAWSVirtualPrivateGatewayResponse) Get() *AWSVirtualPrivateGatewayResponse {
	return v.value
}

func (v *NullableAWSVirtualPrivateGatewayResponse) Set(val *AWSVirtualPrivateGatewayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSVirtualPrivateGatewayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSVirtualPrivateGatewayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSVirtualPrivateGatewayResponse(val *AWSVirtualPrivateGatewayResponse) *NullableAWSVirtualPrivateGatewayResponse {
	return &NullableAWSVirtualPrivateGatewayResponse{value: val, isSet: true}
}

func (v NullableAWSVirtualPrivateGatewayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSVirtualPrivateGatewayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
