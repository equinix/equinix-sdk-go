/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// PortOrderPurchaseOrderType the model 'PortOrderPurchaseOrderType'
type PortOrderPurchaseOrderType string

// List of PortOrder_purchaseOrder_type
const (
	PORTORDERPURCHASEORDERTYPE_EXEMPTION PortOrderPurchaseOrderType = "EXEMPTION"
	PORTORDERPURCHASEORDERTYPE_EXISTING  PortOrderPurchaseOrderType = "EXISTING"
	PORTORDERPURCHASEORDERTYPE_NEW       PortOrderPurchaseOrderType = "NEW"
	PORTORDERPURCHASEORDERTYPE_BLANKET   PortOrderPurchaseOrderType = "BLANKET"
)

// All allowed values of PortOrderPurchaseOrderType enum
var AllowedPortOrderPurchaseOrderTypeEnumValues = []PortOrderPurchaseOrderType{
	"EXEMPTION",
	"EXISTING",
	"NEW",
	"BLANKET",
}

func (v *PortOrderPurchaseOrderType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PortOrderPurchaseOrderType(value)
	for _, existing := range AllowedPortOrderPurchaseOrderTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PortOrderPurchaseOrderType", value)
}

// NewPortOrderPurchaseOrderTypeFromValue returns a pointer to a valid PortOrderPurchaseOrderType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPortOrderPurchaseOrderTypeFromValue(v string) (*PortOrderPurchaseOrderType, error) {
	ev := PortOrderPurchaseOrderType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PortOrderPurchaseOrderType: valid values are %v", v, AllowedPortOrderPurchaseOrderTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PortOrderPurchaseOrderType) IsValid() bool {
	for _, existing := range AllowedPortOrderPurchaseOrderTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PortOrder_purchaseOrder_type value
func (v PortOrderPurchaseOrderType) Ptr() *PortOrderPurchaseOrderType {
	return &v
}

type NullablePortOrderPurchaseOrderType struct {
	value *PortOrderPurchaseOrderType
	isSet bool
}

func (v NullablePortOrderPurchaseOrderType) Get() *PortOrderPurchaseOrderType {
	return v.value
}

func (v *NullablePortOrderPurchaseOrderType) Set(val *PortOrderPurchaseOrderType) {
	v.value = val
	v.isSet = true
}

func (v NullablePortOrderPurchaseOrderType) IsSet() bool {
	return v.isSet
}

func (v *NullablePortOrderPurchaseOrderType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortOrderPurchaseOrderType(val *PortOrderPurchaseOrderType) *NullablePortOrderPurchaseOrderType {
	return &NullablePortOrderPurchaseOrderType{value: val, isSet: true}
}

func (v NullablePortOrderPurchaseOrderType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortOrderPurchaseOrderType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
