/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the MetroConnectPatchPanel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetroConnectPatchPanel{}

// MetroConnectPatchPanel Patch panel object
type MetroConnectPatchPanel struct {
	// Patch Panel ID
	Id *string `json:"id,omitempty"`
	// Patch Panel Port A
	PortA *string `json:"portA,omitempty"`
	// Patch Panel Port B
	PortB *string `json:"portB,omitempty"`
	// Type of Connector
	ConnectorType *string `json:"connectorType,omitempty"`
	// Cage Unique Space Id
	CageUniqueSpaceId *string `json:"cageUniqueSpaceId,omitempty"`
	// Cabinet Unique Space Id
	CabinetUniqueSpaceId *string `json:"cabinetUniqueSpaceId,omitempty"`
	// IBX identifier
	Ibx                  *string `json:"ibx,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetroConnectPatchPanel MetroConnectPatchPanel

// NewMetroConnectPatchPanel instantiates a new MetroConnectPatchPanel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetroConnectPatchPanel() *MetroConnectPatchPanel {
	this := MetroConnectPatchPanel{}
	return &this
}

// NewMetroConnectPatchPanelWithDefaults instantiates a new MetroConnectPatchPanel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetroConnectPatchPanelWithDefaults() *MetroConnectPatchPanel {
	this := MetroConnectPatchPanel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetroConnectPatchPanel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPatchPanel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetroConnectPatchPanel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MetroConnectPatchPanel) SetId(v string) {
	o.Id = &v
}

// GetPortA returns the PortA field value if set, zero value otherwise.
func (o *MetroConnectPatchPanel) GetPortA() string {
	if o == nil || IsNil(o.PortA) {
		var ret string
		return ret
	}
	return *o.PortA
}

// GetPortAOk returns a tuple with the PortA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPatchPanel) GetPortAOk() (*string, bool) {
	if o == nil || IsNil(o.PortA) {
		return nil, false
	}
	return o.PortA, true
}

// HasPortA returns a boolean if a field has been set.
func (o *MetroConnectPatchPanel) HasPortA() bool {
	if o != nil && !IsNil(o.PortA) {
		return true
	}

	return false
}

// SetPortA gets a reference to the given string and assigns it to the PortA field.
func (o *MetroConnectPatchPanel) SetPortA(v string) {
	o.PortA = &v
}

// GetPortB returns the PortB field value if set, zero value otherwise.
func (o *MetroConnectPatchPanel) GetPortB() string {
	if o == nil || IsNil(o.PortB) {
		var ret string
		return ret
	}
	return *o.PortB
}

// GetPortBOk returns a tuple with the PortB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPatchPanel) GetPortBOk() (*string, bool) {
	if o == nil || IsNil(o.PortB) {
		return nil, false
	}
	return o.PortB, true
}

// HasPortB returns a boolean if a field has been set.
func (o *MetroConnectPatchPanel) HasPortB() bool {
	if o != nil && !IsNil(o.PortB) {
		return true
	}

	return false
}

// SetPortB gets a reference to the given string and assigns it to the PortB field.
func (o *MetroConnectPatchPanel) SetPortB(v string) {
	o.PortB = &v
}

// GetConnectorType returns the ConnectorType field value if set, zero value otherwise.
func (o *MetroConnectPatchPanel) GetConnectorType() string {
	if o == nil || IsNil(o.ConnectorType) {
		var ret string
		return ret
	}
	return *o.ConnectorType
}

// GetConnectorTypeOk returns a tuple with the ConnectorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPatchPanel) GetConnectorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorType) {
		return nil, false
	}
	return o.ConnectorType, true
}

// HasConnectorType returns a boolean if a field has been set.
func (o *MetroConnectPatchPanel) HasConnectorType() bool {
	if o != nil && !IsNil(o.ConnectorType) {
		return true
	}

	return false
}

// SetConnectorType gets a reference to the given string and assigns it to the ConnectorType field.
func (o *MetroConnectPatchPanel) SetConnectorType(v string) {
	o.ConnectorType = &v
}

// GetCageUniqueSpaceId returns the CageUniqueSpaceId field value if set, zero value otherwise.
func (o *MetroConnectPatchPanel) GetCageUniqueSpaceId() string {
	if o == nil || IsNil(o.CageUniqueSpaceId) {
		var ret string
		return ret
	}
	return *o.CageUniqueSpaceId
}

// GetCageUniqueSpaceIdOk returns a tuple with the CageUniqueSpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPatchPanel) GetCageUniqueSpaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.CageUniqueSpaceId) {
		return nil, false
	}
	return o.CageUniqueSpaceId, true
}

// HasCageUniqueSpaceId returns a boolean if a field has been set.
func (o *MetroConnectPatchPanel) HasCageUniqueSpaceId() bool {
	if o != nil && !IsNil(o.CageUniqueSpaceId) {
		return true
	}

	return false
}

// SetCageUniqueSpaceId gets a reference to the given string and assigns it to the CageUniqueSpaceId field.
func (o *MetroConnectPatchPanel) SetCageUniqueSpaceId(v string) {
	o.CageUniqueSpaceId = &v
}

// GetCabinetUniqueSpaceId returns the CabinetUniqueSpaceId field value if set, zero value otherwise.
func (o *MetroConnectPatchPanel) GetCabinetUniqueSpaceId() string {
	if o == nil || IsNil(o.CabinetUniqueSpaceId) {
		var ret string
		return ret
	}
	return *o.CabinetUniqueSpaceId
}

// GetCabinetUniqueSpaceIdOk returns a tuple with the CabinetUniqueSpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPatchPanel) GetCabinetUniqueSpaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.CabinetUniqueSpaceId) {
		return nil, false
	}
	return o.CabinetUniqueSpaceId, true
}

// HasCabinetUniqueSpaceId returns a boolean if a field has been set.
func (o *MetroConnectPatchPanel) HasCabinetUniqueSpaceId() bool {
	if o != nil && !IsNil(o.CabinetUniqueSpaceId) {
		return true
	}

	return false
}

// SetCabinetUniqueSpaceId gets a reference to the given string and assigns it to the CabinetUniqueSpaceId field.
func (o *MetroConnectPatchPanel) SetCabinetUniqueSpaceId(v string) {
	o.CabinetUniqueSpaceId = &v
}

// GetIbx returns the Ibx field value if set, zero value otherwise.
func (o *MetroConnectPatchPanel) GetIbx() string {
	if o == nil || IsNil(o.Ibx) {
		var ret string
		return ret
	}
	return *o.Ibx
}

// GetIbxOk returns a tuple with the Ibx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPatchPanel) GetIbxOk() (*string, bool) {
	if o == nil || IsNil(o.Ibx) {
		return nil, false
	}
	return o.Ibx, true
}

// HasIbx returns a boolean if a field has been set.
func (o *MetroConnectPatchPanel) HasIbx() bool {
	if o != nil && !IsNil(o.Ibx) {
		return true
	}

	return false
}

// SetIbx gets a reference to the given string and assigns it to the Ibx field.
func (o *MetroConnectPatchPanel) SetIbx(v string) {
	o.Ibx = &v
}

func (o MetroConnectPatchPanel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetroConnectPatchPanel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PortA) {
		toSerialize["portA"] = o.PortA
	}
	if !IsNil(o.PortB) {
		toSerialize["portB"] = o.PortB
	}
	if !IsNil(o.ConnectorType) {
		toSerialize["connectorType"] = o.ConnectorType
	}
	if !IsNil(o.CageUniqueSpaceId) {
		toSerialize["cageUniqueSpaceId"] = o.CageUniqueSpaceId
	}
	if !IsNil(o.CabinetUniqueSpaceId) {
		toSerialize["cabinetUniqueSpaceId"] = o.CabinetUniqueSpaceId
	}
	if !IsNil(o.Ibx) {
		toSerialize["ibx"] = o.Ibx
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetroConnectPatchPanel) UnmarshalJSON(data []byte) (err error) {
	varMetroConnectPatchPanel := _MetroConnectPatchPanel{}

	err = json.Unmarshal(data, &varMetroConnectPatchPanel)

	if err != nil {
		return err
	}

	*o = MetroConnectPatchPanel(varMetroConnectPatchPanel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "portA")
		delete(additionalProperties, "portB")
		delete(additionalProperties, "connectorType")
		delete(additionalProperties, "cageUniqueSpaceId")
		delete(additionalProperties, "cabinetUniqueSpaceId")
		delete(additionalProperties, "ibx")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetroConnectPatchPanel struct {
	value *MetroConnectPatchPanel
	isSet bool
}

func (v NullableMetroConnectPatchPanel) Get() *MetroConnectPatchPanel {
	return v.value
}

func (v *NullableMetroConnectPatchPanel) Set(val *MetroConnectPatchPanel) {
	v.value = val
	v.isSet = true
}

func (v NullableMetroConnectPatchPanel) IsSet() bool {
	return v.isSet
}

func (v *NullableMetroConnectPatchPanel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetroConnectPatchPanel(val *MetroConnectPatchPanel) *NullableMetroConnectPatchPanel {
	return &NullableMetroConnectPatchPanel{value: val, isSet: true}
}

func (v NullableMetroConnectPatchPanel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetroConnectPatchPanel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
