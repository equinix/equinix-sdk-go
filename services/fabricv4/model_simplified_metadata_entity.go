/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the SimplifiedMetadataEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimplifiedMetadataEntity{}

// SimplifiedMetadataEntity Configuration details for port used at the access point.
type SimplifiedMetadataEntity struct {
	// url to entity
	Href *string `json:"href,omitempty"`
	// Equinix assigned Identifier
	Uuid *string `json:"uuid,omitempty"`
	// Type of Port
	Type *string `json:"type,omitempty"`
	// Customer virtual port Id
	CvpId *int32 `json:"cvpId,omitempty"`
	// Port Bandwidth
	Bandwidth *float32 `json:"bandwidth,omitempty"`
	// Port Name
	PortName *string `json:"portName,omitempty"`
	// Port Encapsulation
	EncapsulationProtocolType *string `json:"encapsulationProtocolType,omitempty"`
	// Account Name
	AccountName *string `json:"accountName,omitempty"`
	// Port Priority
	Priority             *string             `json:"priority,omitempty"`
	Location             *SimplifiedLocation `json:"location,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SimplifiedMetadataEntity SimplifiedMetadataEntity

// NewSimplifiedMetadataEntity instantiates a new SimplifiedMetadataEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimplifiedMetadataEntity() *SimplifiedMetadataEntity {
	this := SimplifiedMetadataEntity{}
	return &this
}

// NewSimplifiedMetadataEntityWithDefaults instantiates a new SimplifiedMetadataEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimplifiedMetadataEntityWithDefaults() *SimplifiedMetadataEntity {
	this := SimplifiedMetadataEntity{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *SimplifiedMetadataEntity) SetHref(v string) {
	o.Href = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *SimplifiedMetadataEntity) SetUuid(v string) {
	o.Uuid = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SimplifiedMetadataEntity) SetType(v string) {
	o.Type = &v
}

// GetCvpId returns the CvpId field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetCvpId() int32 {
	if o == nil || IsNil(o.CvpId) {
		var ret int32
		return ret
	}
	return *o.CvpId
}

// GetCvpIdOk returns a tuple with the CvpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetCvpIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CvpId) {
		return nil, false
	}
	return o.CvpId, true
}

// HasCvpId returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasCvpId() bool {
	if o != nil && !IsNil(o.CvpId) {
		return true
	}

	return false
}

// SetCvpId gets a reference to the given int32 and assigns it to the CvpId field.
func (o *SimplifiedMetadataEntity) SetCvpId(v int32) {
	o.CvpId = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetBandwidth() float32 {
	if o == nil || IsNil(o.Bandwidth) {
		var ret float32
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetBandwidthOk() (*float32, bool) {
	if o == nil || IsNil(o.Bandwidth) {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasBandwidth() bool {
	if o != nil && !IsNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given float32 and assigns it to the Bandwidth field.
func (o *SimplifiedMetadataEntity) SetBandwidth(v float32) {
	o.Bandwidth = &v
}

// GetPortName returns the PortName field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetPortName() string {
	if o == nil || IsNil(o.PortName) {
		var ret string
		return ret
	}
	return *o.PortName
}

// GetPortNameOk returns a tuple with the PortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetPortNameOk() (*string, bool) {
	if o == nil || IsNil(o.PortName) {
		return nil, false
	}
	return o.PortName, true
}

// HasPortName returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasPortName() bool {
	if o != nil && !IsNil(o.PortName) {
		return true
	}

	return false
}

// SetPortName gets a reference to the given string and assigns it to the PortName field.
func (o *SimplifiedMetadataEntity) SetPortName(v string) {
	o.PortName = &v
}

// GetEncapsulationProtocolType returns the EncapsulationProtocolType field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetEncapsulationProtocolType() string {
	if o == nil || IsNil(o.EncapsulationProtocolType) {
		var ret string
		return ret
	}
	return *o.EncapsulationProtocolType
}

// GetEncapsulationProtocolTypeOk returns a tuple with the EncapsulationProtocolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetEncapsulationProtocolTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EncapsulationProtocolType) {
		return nil, false
	}
	return o.EncapsulationProtocolType, true
}

// HasEncapsulationProtocolType returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasEncapsulationProtocolType() bool {
	if o != nil && !IsNil(o.EncapsulationProtocolType) {
		return true
	}

	return false
}

// SetEncapsulationProtocolType gets a reference to the given string and assigns it to the EncapsulationProtocolType field.
func (o *SimplifiedMetadataEntity) SetEncapsulationProtocolType(v string) {
	o.EncapsulationProtocolType = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *SimplifiedMetadataEntity) SetAccountName(v string) {
	o.AccountName = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *SimplifiedMetadataEntity) SetPriority(v string) {
	o.Priority = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *SimplifiedMetadataEntity) GetLocation() SimplifiedLocation {
	if o == nil || IsNil(o.Location) {
		var ret SimplifiedLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplifiedMetadataEntity) GetLocationOk() (*SimplifiedLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *SimplifiedMetadataEntity) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given SimplifiedLocation and assigns it to the Location field.
func (o *SimplifiedMetadataEntity) SetLocation(v SimplifiedLocation) {
	o.Location = &v
}

func (o SimplifiedMetadataEntity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimplifiedMetadataEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CvpId) {
		toSerialize["cvpId"] = o.CvpId
	}
	if !IsNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !IsNil(o.PortName) {
		toSerialize["portName"] = o.PortName
	}
	if !IsNil(o.EncapsulationProtocolType) {
		toSerialize["encapsulationProtocolType"] = o.EncapsulationProtocolType
	}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SimplifiedMetadataEntity) UnmarshalJSON(data []byte) (err error) {
	varSimplifiedMetadataEntity := _SimplifiedMetadataEntity{}

	err = json.Unmarshal(data, &varSimplifiedMetadataEntity)

	if err != nil {
		return err
	}

	*o = SimplifiedMetadataEntity(varSimplifiedMetadataEntity)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "href")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "type")
		delete(additionalProperties, "cvpId")
		delete(additionalProperties, "bandwidth")
		delete(additionalProperties, "portName")
		delete(additionalProperties, "encapsulationProtocolType")
		delete(additionalProperties, "accountName")
		delete(additionalProperties, "priority")
		delete(additionalProperties, "location")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSimplifiedMetadataEntity struct {
	value *SimplifiedMetadataEntity
	isSet bool
}

func (v NullableSimplifiedMetadataEntity) Get() *SimplifiedMetadataEntity {
	return v.value
}

func (v *NullableSimplifiedMetadataEntity) Set(val *SimplifiedMetadataEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableSimplifiedMetadataEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableSimplifiedMetadataEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimplifiedMetadataEntity(val *SimplifiedMetadataEntity) *NullableSimplifiedMetadataEntity {
	return &NullableSimplifiedMetadataEntity{value: val, isSet: true}
}

func (v NullableSimplifiedMetadataEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimplifiedMetadataEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
