/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// checks if the MetroConnectPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetroConnectPostRequest{}

// MetroConnectPostRequest Create Metro Connect
type MetroConnectPostRequest struct {
	// Metro Connect Type
	Type string `json:"type"`
	// Bandwidth in Mbps
	Bandwidth                   int32                                              `json:"bandwidth"`
	ConnectivityDestinationType MetroConnectPostRequestConnectivityDestinationType `json:"connectivityDestinationType"`
	ASide                       MetroConnectASide                                  `json:"aSide"`
	ZSide                       MetroConnectZSide                                  `json:"zSide"`
	Order                       *MetroConnectOrder                                 `json:"order,omitempty"`
	Project                     *Project                                           `json:"project,omitempty"`
	Account                     SimplifiedAccount                                  `json:"account"`
	// Preferences for notifications on connection configuration or status changes
	Notifications        []SimplifiedNotification `json:"notifications,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetroConnectPostRequest MetroConnectPostRequest

// NewMetroConnectPostRequest instantiates a new MetroConnectPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetroConnectPostRequest(type_ string, bandwidth int32, connectivityDestinationType MetroConnectPostRequestConnectivityDestinationType, aSide MetroConnectASide, zSide MetroConnectZSide, account SimplifiedAccount) *MetroConnectPostRequest {
	this := MetroConnectPostRequest{}
	this.Type = type_
	this.Bandwidth = bandwidth
	this.ConnectivityDestinationType = connectivityDestinationType
	this.ASide = aSide
	this.ZSide = zSide
	this.Account = account
	return &this
}

// NewMetroConnectPostRequestWithDefaults instantiates a new MetroConnectPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetroConnectPostRequestWithDefaults() *MetroConnectPostRequest {
	this := MetroConnectPostRequest{}
	return &this
}

// GetType returns the Type field value
func (o *MetroConnectPostRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MetroConnectPostRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MetroConnectPostRequest) SetType(v string) {
	o.Type = v
}

// GetBandwidth returns the Bandwidth field value
func (o *MetroConnectPostRequest) GetBandwidth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value
// and a boolean to check if the value has been set.
func (o *MetroConnectPostRequest) GetBandwidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bandwidth, true
}

// SetBandwidth sets field value
func (o *MetroConnectPostRequest) SetBandwidth(v int32) {
	o.Bandwidth = v
}

// GetConnectivityDestinationType returns the ConnectivityDestinationType field value
func (o *MetroConnectPostRequest) GetConnectivityDestinationType() MetroConnectPostRequestConnectivityDestinationType {
	if o == nil {
		var ret MetroConnectPostRequestConnectivityDestinationType
		return ret
	}

	return o.ConnectivityDestinationType
}

// GetConnectivityDestinationTypeOk returns a tuple with the ConnectivityDestinationType field value
// and a boolean to check if the value has been set.
func (o *MetroConnectPostRequest) GetConnectivityDestinationTypeOk() (*MetroConnectPostRequestConnectivityDestinationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectivityDestinationType, true
}

// SetConnectivityDestinationType sets field value
func (o *MetroConnectPostRequest) SetConnectivityDestinationType(v MetroConnectPostRequestConnectivityDestinationType) {
	o.ConnectivityDestinationType = v
}

// GetASide returns the ASide field value
func (o *MetroConnectPostRequest) GetASide() MetroConnectASide {
	if o == nil {
		var ret MetroConnectASide
		return ret
	}

	return o.ASide
}

// GetASideOk returns a tuple with the ASide field value
// and a boolean to check if the value has been set.
func (o *MetroConnectPostRequest) GetASideOk() (*MetroConnectASide, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ASide, true
}

// SetASide sets field value
func (o *MetroConnectPostRequest) SetASide(v MetroConnectASide) {
	o.ASide = v
}

// GetZSide returns the ZSide field value
func (o *MetroConnectPostRequest) GetZSide() MetroConnectZSide {
	if o == nil {
		var ret MetroConnectZSide
		return ret
	}

	return o.ZSide
}

// GetZSideOk returns a tuple with the ZSide field value
// and a boolean to check if the value has been set.
func (o *MetroConnectPostRequest) GetZSideOk() (*MetroConnectZSide, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZSide, true
}

// SetZSide sets field value
func (o *MetroConnectPostRequest) SetZSide(v MetroConnectZSide) {
	o.ZSide = v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *MetroConnectPostRequest) GetOrder() MetroConnectOrder {
	if o == nil || IsNil(o.Order) {
		var ret MetroConnectOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPostRequest) GetOrderOk() (*MetroConnectOrder, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *MetroConnectPostRequest) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given MetroConnectOrder and assigns it to the Order field.
func (o *MetroConnectPostRequest) SetOrder(v MetroConnectOrder) {
	o.Order = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *MetroConnectPostRequest) GetProject() Project {
	if o == nil || IsNil(o.Project) {
		var ret Project
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPostRequest) GetProjectOk() (*Project, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *MetroConnectPostRequest) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given Project and assigns it to the Project field.
func (o *MetroConnectPostRequest) SetProject(v Project) {
	o.Project = &v
}

// GetAccount returns the Account field value
func (o *MetroConnectPostRequest) GetAccount() SimplifiedAccount {
	if o == nil {
		var ret SimplifiedAccount
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *MetroConnectPostRequest) GetAccountOk() (*SimplifiedAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *MetroConnectPostRequest) SetAccount(v SimplifiedAccount) {
	o.Account = v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *MetroConnectPostRequest) GetNotifications() []SimplifiedNotification {
	if o == nil || IsNil(o.Notifications) {
		var ret []SimplifiedNotification
		return ret
	}
	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectPostRequest) GetNotificationsOk() ([]SimplifiedNotification, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *MetroConnectPostRequest) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given []SimplifiedNotification and assigns it to the Notifications field.
func (o *MetroConnectPostRequest) SetNotifications(v []SimplifiedNotification) {
	o.Notifications = v
}

func (o MetroConnectPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetroConnectPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["bandwidth"] = o.Bandwidth
	toSerialize["connectivityDestinationType"] = o.ConnectivityDestinationType
	toSerialize["aSide"] = o.ASide
	toSerialize["zSide"] = o.ZSide
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	toSerialize["account"] = o.Account
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetroConnectPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"bandwidth",
		"connectivityDestinationType",
		"aSide",
		"zSide",
		"account",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetroConnectPostRequest := _MetroConnectPostRequest{}

	err = json.Unmarshal(data, &varMetroConnectPostRequest)

	if err != nil {
		return err
	}

	*o = MetroConnectPostRequest(varMetroConnectPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "bandwidth")
		delete(additionalProperties, "connectivityDestinationType")
		delete(additionalProperties, "aSide")
		delete(additionalProperties, "zSide")
		delete(additionalProperties, "order")
		delete(additionalProperties, "project")
		delete(additionalProperties, "account")
		delete(additionalProperties, "notifications")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetroConnectPostRequest struct {
	value *MetroConnectPostRequest
	isSet bool
}

func (v NullableMetroConnectPostRequest) Get() *MetroConnectPostRequest {
	return v.value
}

func (v *NullableMetroConnectPostRequest) Set(val *MetroConnectPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMetroConnectPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMetroConnectPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetroConnectPostRequest(val *MetroConnectPostRequest) *NullableMetroConnectPostRequest {
	return &NullableMetroConnectPostRequest{value: val, isSet: true}
}

func (v NullableMetroConnectPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetroConnectPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
