/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// CloudRouterActionsSearchSortBy Possible field names to use on sorting
type CloudRouterActionsSearchSortBy string

// List of CloudRouterActionsSearchSortBy
const (
	CLOUDROUTERACTIONSSEARCHSORTBY_CHANGE_LOG_CREATED_DATE_TIME CloudRouterActionsSearchSortBy = "/changeLog/createdDateTime"
	CLOUDROUTERACTIONSSEARCHSORTBY_CHANGE_LOG_UPDATED_DATE_TIME CloudRouterActionsSearchSortBy = "/changeLog/updatedDateTime"
	CLOUDROUTERACTIONSSEARCHSORTBY_CONNECTION_NAME              CloudRouterActionsSearchSortBy = "/connection/name"
	CLOUDROUTERACTIONSSEARCHSORTBY_TYPE                         CloudRouterActionsSearchSortBy = "/type"
)

// All allowed values of CloudRouterActionsSearchSortBy enum
var AllowedCloudRouterActionsSearchSortByEnumValues = []CloudRouterActionsSearchSortBy{
	"/changeLog/createdDateTime",
	"/changeLog/updatedDateTime",
	"/connection/name",
	"/type",
}

func (v *CloudRouterActionsSearchSortBy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CloudRouterActionsSearchSortBy(value)
	for _, existing := range AllowedCloudRouterActionsSearchSortByEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CloudRouterActionsSearchSortBy", value)
}

// NewCloudRouterActionsSearchSortByFromValue returns a pointer to a valid CloudRouterActionsSearchSortBy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCloudRouterActionsSearchSortByFromValue(v string) (*CloudRouterActionsSearchSortBy, error) {
	ev := CloudRouterActionsSearchSortBy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CloudRouterActionsSearchSortBy: valid values are %v", v, AllowedCloudRouterActionsSearchSortByEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CloudRouterActionsSearchSortBy) IsValid() bool {
	for _, existing := range AllowedCloudRouterActionsSearchSortByEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CloudRouterActionsSearchSortBy value
func (v CloudRouterActionsSearchSortBy) Ptr() *CloudRouterActionsSearchSortBy {
	return &v
}

type NullableCloudRouterActionsSearchSortBy struct {
	value *CloudRouterActionsSearchSortBy
	isSet bool
}

func (v NullableCloudRouterActionsSearchSortBy) Get() *CloudRouterActionsSearchSortBy {
	return v.value
}

func (v *NullableCloudRouterActionsSearchSortBy) Set(val *CloudRouterActionsSearchSortBy) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudRouterActionsSearchSortBy) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudRouterActionsSearchSortBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudRouterActionsSearchSortBy(val *CloudRouterActionsSearchSortBy) *NullableCloudRouterActionsSearchSortBy {
	return &NullableCloudRouterActionsSearchSortBy{value: val, isSet: true}
}

func (v NullableCloudRouterActionsSearchSortBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudRouterActionsSearchSortBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
