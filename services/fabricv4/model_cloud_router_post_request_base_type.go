/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// CloudRouterPostRequestBaseType the model 'CloudRouterPostRequestBaseType'
type CloudRouterPostRequestBaseType string

// List of CloudRouterPostRequestBase_type
const (
	CLOUDROUTERPOSTREQUESTBASETYPE_XF_ROUTER CloudRouterPostRequestBaseType = "XF_ROUTER"
)

// All allowed values of CloudRouterPostRequestBaseType enum
var AllowedCloudRouterPostRequestBaseTypeEnumValues = []CloudRouterPostRequestBaseType{
	"XF_ROUTER",
}

func (v *CloudRouterPostRequestBaseType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CloudRouterPostRequestBaseType(value)
	for _, existing := range AllowedCloudRouterPostRequestBaseTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CloudRouterPostRequestBaseType", value)
}

// NewCloudRouterPostRequestBaseTypeFromValue returns a pointer to a valid CloudRouterPostRequestBaseType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCloudRouterPostRequestBaseTypeFromValue(v string) (*CloudRouterPostRequestBaseType, error) {
	ev := CloudRouterPostRequestBaseType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CloudRouterPostRequestBaseType: valid values are %v", v, AllowedCloudRouterPostRequestBaseTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CloudRouterPostRequestBaseType) IsValid() bool {
	for _, existing := range AllowedCloudRouterPostRequestBaseTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CloudRouterPostRequestBase_type value
func (v CloudRouterPostRequestBaseType) Ptr() *CloudRouterPostRequestBaseType {
	return &v
}

type NullableCloudRouterPostRequestBaseType struct {
	value *CloudRouterPostRequestBaseType
	isSet bool
}

func (v NullableCloudRouterPostRequestBaseType) Get() *CloudRouterPostRequestBaseType {
	return v.value
}

func (v *NullableCloudRouterPostRequestBaseType) Set(val *CloudRouterPostRequestBaseType) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudRouterPostRequestBaseType) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudRouterPostRequestBaseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudRouterPostRequestBaseType(val *CloudRouterPostRequestBaseType) *NullableCloudRouterPostRequestBaseType {
	return &NullableCloudRouterPostRequestBaseType{value: val, isSet: true}
}

func (v NullableCloudRouterPostRequestBaseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudRouterPostRequestBaseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
