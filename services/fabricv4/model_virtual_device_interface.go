/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the VirtualDeviceInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualDeviceInterface{}

// VirtualDeviceInterface Virtual Device Interface Information
type VirtualDeviceInterface struct {
	Type *VirtualDeviceInterfaceType `json:"type,omitempty"`
	// Network Edge assigned identifier
	Id *int32 `json:"id,omitempty"`
	// Interface identifier
	Uuid                 *string `json:"uuid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VirtualDeviceInterface VirtualDeviceInterface

// NewVirtualDeviceInterface instantiates a new VirtualDeviceInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualDeviceInterface() *VirtualDeviceInterface {
	this := VirtualDeviceInterface{}
	return &this
}

// NewVirtualDeviceInterfaceWithDefaults instantiates a new VirtualDeviceInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualDeviceInterfaceWithDefaults() *VirtualDeviceInterface {
	this := VirtualDeviceInterface{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VirtualDeviceInterface) GetType() VirtualDeviceInterfaceType {
	if o == nil || IsNil(o.Type) {
		var ret VirtualDeviceInterfaceType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceInterface) GetTypeOk() (*VirtualDeviceInterfaceType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VirtualDeviceInterface) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given VirtualDeviceInterfaceType and assigns it to the Type field.
func (o *VirtualDeviceInterface) SetType(v VirtualDeviceInterfaceType) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VirtualDeviceInterface) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceInterface) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VirtualDeviceInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VirtualDeviceInterface) SetId(v int32) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *VirtualDeviceInterface) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceInterface) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *VirtualDeviceInterface) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *VirtualDeviceInterface) SetUuid(v string) {
	o.Uuid = &v
}

func (o VirtualDeviceInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualDeviceInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VirtualDeviceInterface) UnmarshalJSON(data []byte) (err error) {
	varVirtualDeviceInterface := _VirtualDeviceInterface{}

	err = json.Unmarshal(data, &varVirtualDeviceInterface)

	if err != nil {
		return err
	}

	*o = VirtualDeviceInterface(varVirtualDeviceInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "id")
		delete(additionalProperties, "uuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVirtualDeviceInterface struct {
	value *VirtualDeviceInterface
	isSet bool
}

func (v NullableVirtualDeviceInterface) Get() *VirtualDeviceInterface {
	return v.value
}

func (v *NullableVirtualDeviceInterface) Set(val *VirtualDeviceInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualDeviceInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualDeviceInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualDeviceInterface(val *VirtualDeviceInterface) *NullableVirtualDeviceInterface {
	return &NullableVirtualDeviceInterface{value: val, isSet: true}
}

func (v NullableVirtualDeviceInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualDeviceInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
