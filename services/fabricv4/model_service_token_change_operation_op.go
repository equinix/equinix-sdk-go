/*
Equinix Fabric API v4

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// ServiceTokenChangeOperationOp Handy shortcut for operation name
type ServiceTokenChangeOperationOp string

// List of ServiceTokenChangeOperation_op
const (
	SERVICETOKENCHANGEOPERATIONOP_REPLACE ServiceTokenChangeOperationOp = "replace"
	SERVICETOKENCHANGEOPERATIONOP_ADD     ServiceTokenChangeOperationOp = "add"
	SERVICETOKENCHANGEOPERATIONOP_REMOVE  ServiceTokenChangeOperationOp = "remove"
)

// All allowed values of ServiceTokenChangeOperationOp enum
var AllowedServiceTokenChangeOperationOpEnumValues = []ServiceTokenChangeOperationOp{
	"replace",
	"add",
	"remove",
}

func (v *ServiceTokenChangeOperationOp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceTokenChangeOperationOp(value)
	for _, existing := range AllowedServiceTokenChangeOperationOpEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceTokenChangeOperationOp", value)
}

// NewServiceTokenChangeOperationOpFromValue returns a pointer to a valid ServiceTokenChangeOperationOp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceTokenChangeOperationOpFromValue(v string) (*ServiceTokenChangeOperationOp, error) {
	ev := ServiceTokenChangeOperationOp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceTokenChangeOperationOp: valid values are %v", v, AllowedServiceTokenChangeOperationOpEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceTokenChangeOperationOp) IsValid() bool {
	for _, existing := range AllowedServiceTokenChangeOperationOpEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceTokenChangeOperation_op value
func (v ServiceTokenChangeOperationOp) Ptr() *ServiceTokenChangeOperationOp {
	return &v
}

type NullableServiceTokenChangeOperationOp struct {
	value *ServiceTokenChangeOperationOp
	isSet bool
}

func (v NullableServiceTokenChangeOperationOp) Get() *ServiceTokenChangeOperationOp {
	return v.value
}

func (v *NullableServiceTokenChangeOperationOp) Set(val *ServiceTokenChangeOperationOp) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceTokenChangeOperationOp) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceTokenChangeOperationOp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceTokenChangeOperationOp(val *ServiceTokenChangeOperationOp) *NullableServiceTokenChangeOperationOp {
	return &NullableServiceTokenChangeOperationOp{value: val, isSet: true}
}

func (v NullableServiceTokenChangeOperationOp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceTokenChangeOperationOp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
