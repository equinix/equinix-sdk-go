/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// GatewayAttachmentResponseType the model 'GatewayAttachmentResponseType'
type GatewayAttachmentResponseType string

// List of GatewayAttachmentResponse_type
const (
	GATEWAYATTACHMENTRESPONSETYPE_VPN_GATEWAY GatewayAttachmentResponseType = "VPN_GATEWAY"
)

// All allowed values of GatewayAttachmentResponseType enum
var AllowedGatewayAttachmentResponseTypeEnumValues = []GatewayAttachmentResponseType{
	"VPN_GATEWAY",
}

func (v *GatewayAttachmentResponseType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GatewayAttachmentResponseType(value)
	for _, existing := range AllowedGatewayAttachmentResponseTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GatewayAttachmentResponseType", value)
}

// NewGatewayAttachmentResponseTypeFromValue returns a pointer to a valid GatewayAttachmentResponseType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGatewayAttachmentResponseTypeFromValue(v string) (*GatewayAttachmentResponseType, error) {
	ev := GatewayAttachmentResponseType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GatewayAttachmentResponseType: valid values are %v", v, AllowedGatewayAttachmentResponseTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GatewayAttachmentResponseType) IsValid() bool {
	for _, existing := range AllowedGatewayAttachmentResponseTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GatewayAttachmentResponse_type value
func (v GatewayAttachmentResponseType) Ptr() *GatewayAttachmentResponseType {
	return &v
}

type NullableGatewayAttachmentResponseType struct {
	value *GatewayAttachmentResponseType
	isSet bool
}

func (v NullableGatewayAttachmentResponseType) Get() *GatewayAttachmentResponseType {
	return v.value
}

func (v *NullableGatewayAttachmentResponseType) Set(val *GatewayAttachmentResponseType) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayAttachmentResponseType) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayAttachmentResponseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayAttachmentResponseType(val *GatewayAttachmentResponseType) *NullableGatewayAttachmentResponseType {
	return &NullableGatewayAttachmentResponseType{value: val, isSet: true}
}

func (v NullableGatewayAttachmentResponseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayAttachmentResponseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
