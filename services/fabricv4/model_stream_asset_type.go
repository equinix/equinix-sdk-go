/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// StreamAssetType Asset types
type StreamAssetType string

// List of StreamAsset_type
const (
	STREAMASSETTYPE_XF_PORT      StreamAssetType = "XF_PORT"
	STREAMASSETTYPE_IP_VC        StreamAssetType = "IP_VC"
	STREAMASSETTYPE_EVPLAN_VC    StreamAssetType = "EVPLAN_VC"
	STREAMASSETTYPE_EVPL_VC      StreamAssetType = "EVPL_VC"
	STREAMASSETTYPE_XF_METRO     StreamAssetType = "XF_METRO"
	STREAMASSETTYPE_XF_ROUTER    StreamAssetType = "XF_ROUTER"
	STREAMASSETTYPE_ORGANIZATION StreamAssetType = "ORGANIZATION"
	STREAMASSETTYPE_PROJECT      StreamAssetType = "PROJECT"
)

// All allowed values of StreamAssetType enum
var AllowedStreamAssetTypeEnumValues = []StreamAssetType{
	"XF_PORT",
	"IP_VC",
	"EVPLAN_VC",
	"EVPL_VC",
	"XF_METRO",
	"XF_ROUTER",
	"ORGANIZATION",
	"PROJECT",
}

func (v *StreamAssetType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := StreamAssetType(value)
	for _, existing := range AllowedStreamAssetTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid StreamAssetType", value)
}

// NewStreamAssetTypeFromValue returns a pointer to a valid StreamAssetType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewStreamAssetTypeFromValue(v string) (*StreamAssetType, error) {
	ev := StreamAssetType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for StreamAssetType: valid values are %v", v, AllowedStreamAssetTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StreamAssetType) IsValid() bool {
	for _, existing := range AllowedStreamAssetTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to StreamAsset_type value
func (v StreamAssetType) Ptr() *StreamAssetType {
	return &v
}

type NullableStreamAssetType struct {
	value *StreamAssetType
	isSet bool
}

func (v NullableStreamAssetType) Get() *StreamAssetType {
	return v.value
}

func (v *NullableStreamAssetType) Set(val *StreamAssetType) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamAssetType) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamAssetType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamAssetType(val *StreamAssetType) *NullableStreamAssetType {
	return &NullableStreamAssetType{value: val, isSet: true}
}

func (v NullableStreamAssetType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamAssetType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
