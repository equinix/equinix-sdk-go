/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// TimeServiceOperationOperationalStatus time service operational status
type TimeServiceOperationOperationalStatus string

// List of timeServiceOperation_operationalStatus
const (
	TIMESERVICEOPERATIONOPERATIONALSTATUS_UP       TimeServiceOperationOperationalStatus = "UP"
	TIMESERVICEOPERATIONOPERATIONALSTATUS_DOWN     TimeServiceOperationOperationalStatus = "DOWN"
	TIMESERVICEOPERATIONOPERATIONALSTATUS_DEGRADED TimeServiceOperationOperationalStatus = "DEGRADED"
)

// All allowed values of TimeServiceOperationOperationalStatus enum
var AllowedTimeServiceOperationOperationalStatusEnumValues = []TimeServiceOperationOperationalStatus{
	"UP",
	"DOWN",
	"DEGRADED",
}

func (v *TimeServiceOperationOperationalStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TimeServiceOperationOperationalStatus(value)
	for _, existing := range AllowedTimeServiceOperationOperationalStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TimeServiceOperationOperationalStatus", value)
}

// NewTimeServiceOperationOperationalStatusFromValue returns a pointer to a valid TimeServiceOperationOperationalStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTimeServiceOperationOperationalStatusFromValue(v string) (*TimeServiceOperationOperationalStatus, error) {
	ev := TimeServiceOperationOperationalStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TimeServiceOperationOperationalStatus: valid values are %v", v, AllowedTimeServiceOperationOperationalStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TimeServiceOperationOperationalStatus) IsValid() bool {
	for _, existing := range AllowedTimeServiceOperationOperationalStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to timeServiceOperation_operationalStatus value
func (v TimeServiceOperationOperationalStatus) Ptr() *TimeServiceOperationOperationalStatus {
	return &v
}

type NullableTimeServiceOperationOperationalStatus struct {
	value *TimeServiceOperationOperationalStatus
	isSet bool
}

func (v NullableTimeServiceOperationOperationalStatus) Get() *TimeServiceOperationOperationalStatus {
	return v.value
}

func (v *NullableTimeServiceOperationOperationalStatus) Set(val *TimeServiceOperationOperationalStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeServiceOperationOperationalStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeServiceOperationOperationalStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeServiceOperationOperationalStatus(val *TimeServiceOperationOperationalStatus) *NullableTimeServiceOperationOperationalStatus {
	return &NullableTimeServiceOperationOperationalStatus{value: val, isSet: true}
}

func (v NullableTimeServiceOperationOperationalStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeServiceOperationOperationalStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
