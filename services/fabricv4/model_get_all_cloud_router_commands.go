/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the GetAllCloudRouterCommands type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllCloudRouterCommands{}

// GetAllCloudRouterCommands List of Fabric Cloud Router Command
type GetAllCloudRouterCommands struct {
	Pagination           *Pagination          `json:"pagination,omitempty"`
	Data                 []CloudRouterCommand `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetAllCloudRouterCommands GetAllCloudRouterCommands

// NewGetAllCloudRouterCommands instantiates a new GetAllCloudRouterCommands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllCloudRouterCommands() *GetAllCloudRouterCommands {
	this := GetAllCloudRouterCommands{}
	return &this
}

// NewGetAllCloudRouterCommandsWithDefaults instantiates a new GetAllCloudRouterCommands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllCloudRouterCommandsWithDefaults() *GetAllCloudRouterCommands {
	this := GetAllCloudRouterCommands{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *GetAllCloudRouterCommands) GetPagination() Pagination {
	if o == nil || IsNil(o.Pagination) {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllCloudRouterCommands) GetPaginationOk() (*Pagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *GetAllCloudRouterCommands) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *GetAllCloudRouterCommands) SetPagination(v Pagination) {
	o.Pagination = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetAllCloudRouterCommands) GetData() []CloudRouterCommand {
	if o == nil || IsNil(o.Data) {
		var ret []CloudRouterCommand
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllCloudRouterCommands) GetDataOk() ([]CloudRouterCommand, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetAllCloudRouterCommands) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []CloudRouterCommand and assigns it to the Data field.
func (o *GetAllCloudRouterCommands) SetData(v []CloudRouterCommand) {
	o.Data = v
}

func (o GetAllCloudRouterCommands) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllCloudRouterCommands) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetAllCloudRouterCommands) UnmarshalJSON(data []byte) (err error) {
	varGetAllCloudRouterCommands := _GetAllCloudRouterCommands{}

	err = json.Unmarshal(data, &varGetAllCloudRouterCommands)

	if err != nil {
		return err
	}

	*o = GetAllCloudRouterCommands(varGetAllCloudRouterCommands)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pagination")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetAllCloudRouterCommands struct {
	value *GetAllCloudRouterCommands
	isSet bool
}

func (v NullableGetAllCloudRouterCommands) Get() *GetAllCloudRouterCommands {
	return v.value
}

func (v *NullableGetAllCloudRouterCommands) Set(val *GetAllCloudRouterCommands) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllCloudRouterCommands) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllCloudRouterCommands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllCloudRouterCommands(val *GetAllCloudRouterCommands) *NullableGetAllCloudRouterCommands {
	return &NullableGetAllCloudRouterCommands{value: val, isSet: true}
}

func (v NullableGetAllCloudRouterCommands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllCloudRouterCommands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
