/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the ServiceProfileMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceProfileMetadata{}

// ServiceProfileMetadata Metadata. Response attribute. Ignored on request payload.
type ServiceProfileMetadata struct {
	Props                  *string `json:"props,omitempty"`
	RegEx                  *string `json:"regEx,omitempty"`
	RegExMsg               *string `json:"regExMsg,omitempty"`
	VlanRangeMaxValue      *int32  `json:"vlanRangeMaxValue,omitempty"`
	VlanRangeMinValue      *int32  `json:"vlanRangeMinValue,omitempty"`
	MaxQinq                *string `json:"maxQinq,omitempty"`
	MaxDot1q               *int32  `json:"maxDot1q,omitempty"`
	VariableBilling        *bool   `json:"variableBilling,omitempty"`
	GlobalOrganization     *string `json:"globalOrganization,omitempty"`
	LimitAuthKeyConn       *bool   `json:"limitAuthKeyConn,omitempty"`
	AllowSecondaryLocation *bool   `json:"allowSecondaryLocation,omitempty"`
	RedundantProfileId     *string `json:"redundantProfileId,omitempty"`
	AllowVcMigration       *bool   `json:"allowVcMigration,omitempty"`
	ConnectionEditable     *bool   `json:"connectionEditable,omitempty"`
	ReleaseVlan            *bool   `json:"releaseVlan,omitempty"`
	MaxConnectionsOnPort   *int32  `json:"maxConnectionsOnPort,omitempty"`
	PortAssignmentStrategy *string `json:"portAssignmentStrategy,omitempty"`
	EqxManagedPort         *bool   `json:"eqxManagedPort,omitempty"`
	ConnectionNameEditable *bool   `json:"connectionNameEditable,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _ServiceProfileMetadata ServiceProfileMetadata

// NewServiceProfileMetadata instantiates a new ServiceProfileMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceProfileMetadata() *ServiceProfileMetadata {
	this := ServiceProfileMetadata{}
	return &this
}

// NewServiceProfileMetadataWithDefaults instantiates a new ServiceProfileMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceProfileMetadataWithDefaults() *ServiceProfileMetadata {
	this := ServiceProfileMetadata{}
	return &this
}

// GetProps returns the Props field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetProps() string {
	if o == nil || IsNil(o.Props) {
		var ret string
		return ret
	}
	return *o.Props
}

// GetPropsOk returns a tuple with the Props field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetPropsOk() (*string, bool) {
	if o == nil || IsNil(o.Props) {
		return nil, false
	}
	return o.Props, true
}

// HasProps returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasProps() bool {
	if o != nil && !IsNil(o.Props) {
		return true
	}

	return false
}

// SetProps gets a reference to the given string and assigns it to the Props field.
func (o *ServiceProfileMetadata) SetProps(v string) {
	o.Props = &v
}

// GetRegEx returns the RegEx field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetRegEx() string {
	if o == nil || IsNil(o.RegEx) {
		var ret string
		return ret
	}
	return *o.RegEx
}

// GetRegExOk returns a tuple with the RegEx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetRegExOk() (*string, bool) {
	if o == nil || IsNil(o.RegEx) {
		return nil, false
	}
	return o.RegEx, true
}

// HasRegEx returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasRegEx() bool {
	if o != nil && !IsNil(o.RegEx) {
		return true
	}

	return false
}

// SetRegEx gets a reference to the given string and assigns it to the RegEx field.
func (o *ServiceProfileMetadata) SetRegEx(v string) {
	o.RegEx = &v
}

// GetRegExMsg returns the RegExMsg field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetRegExMsg() string {
	if o == nil || IsNil(o.RegExMsg) {
		var ret string
		return ret
	}
	return *o.RegExMsg
}

// GetRegExMsgOk returns a tuple with the RegExMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetRegExMsgOk() (*string, bool) {
	if o == nil || IsNil(o.RegExMsg) {
		return nil, false
	}
	return o.RegExMsg, true
}

// HasRegExMsg returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasRegExMsg() bool {
	if o != nil && !IsNil(o.RegExMsg) {
		return true
	}

	return false
}

// SetRegExMsg gets a reference to the given string and assigns it to the RegExMsg field.
func (o *ServiceProfileMetadata) SetRegExMsg(v string) {
	o.RegExMsg = &v
}

// GetVlanRangeMaxValue returns the VlanRangeMaxValue field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetVlanRangeMaxValue() int32 {
	if o == nil || IsNil(o.VlanRangeMaxValue) {
		var ret int32
		return ret
	}
	return *o.VlanRangeMaxValue
}

// GetVlanRangeMaxValueOk returns a tuple with the VlanRangeMaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetVlanRangeMaxValueOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanRangeMaxValue) {
		return nil, false
	}
	return o.VlanRangeMaxValue, true
}

// HasVlanRangeMaxValue returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasVlanRangeMaxValue() bool {
	if o != nil && !IsNil(o.VlanRangeMaxValue) {
		return true
	}

	return false
}

// SetVlanRangeMaxValue gets a reference to the given int32 and assigns it to the VlanRangeMaxValue field.
func (o *ServiceProfileMetadata) SetVlanRangeMaxValue(v int32) {
	o.VlanRangeMaxValue = &v
}

// GetVlanRangeMinValue returns the VlanRangeMinValue field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetVlanRangeMinValue() int32 {
	if o == nil || IsNil(o.VlanRangeMinValue) {
		var ret int32
		return ret
	}
	return *o.VlanRangeMinValue
}

// GetVlanRangeMinValueOk returns a tuple with the VlanRangeMinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetVlanRangeMinValueOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanRangeMinValue) {
		return nil, false
	}
	return o.VlanRangeMinValue, true
}

// HasVlanRangeMinValue returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasVlanRangeMinValue() bool {
	if o != nil && !IsNil(o.VlanRangeMinValue) {
		return true
	}

	return false
}

// SetVlanRangeMinValue gets a reference to the given int32 and assigns it to the VlanRangeMinValue field.
func (o *ServiceProfileMetadata) SetVlanRangeMinValue(v int32) {
	o.VlanRangeMinValue = &v
}

// GetMaxQinq returns the MaxQinq field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetMaxQinq() string {
	if o == nil || IsNil(o.MaxQinq) {
		var ret string
		return ret
	}
	return *o.MaxQinq
}

// GetMaxQinqOk returns a tuple with the MaxQinq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetMaxQinqOk() (*string, bool) {
	if o == nil || IsNil(o.MaxQinq) {
		return nil, false
	}
	return o.MaxQinq, true
}

// HasMaxQinq returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasMaxQinq() bool {
	if o != nil && !IsNil(o.MaxQinq) {
		return true
	}

	return false
}

// SetMaxQinq gets a reference to the given string and assigns it to the MaxQinq field.
func (o *ServiceProfileMetadata) SetMaxQinq(v string) {
	o.MaxQinq = &v
}

// GetMaxDot1q returns the MaxDot1q field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetMaxDot1q() int32 {
	if o == nil || IsNil(o.MaxDot1q) {
		var ret int32
		return ret
	}
	return *o.MaxDot1q
}

// GetMaxDot1qOk returns a tuple with the MaxDot1q field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetMaxDot1qOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDot1q) {
		return nil, false
	}
	return o.MaxDot1q, true
}

// HasMaxDot1q returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasMaxDot1q() bool {
	if o != nil && !IsNil(o.MaxDot1q) {
		return true
	}

	return false
}

// SetMaxDot1q gets a reference to the given int32 and assigns it to the MaxDot1q field.
func (o *ServiceProfileMetadata) SetMaxDot1q(v int32) {
	o.MaxDot1q = &v
}

// GetVariableBilling returns the VariableBilling field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetVariableBilling() bool {
	if o == nil || IsNil(o.VariableBilling) {
		var ret bool
		return ret
	}
	return *o.VariableBilling
}

// GetVariableBillingOk returns a tuple with the VariableBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetVariableBillingOk() (*bool, bool) {
	if o == nil || IsNil(o.VariableBilling) {
		return nil, false
	}
	return o.VariableBilling, true
}

// HasVariableBilling returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasVariableBilling() bool {
	if o != nil && !IsNil(o.VariableBilling) {
		return true
	}

	return false
}

// SetVariableBilling gets a reference to the given bool and assigns it to the VariableBilling field.
func (o *ServiceProfileMetadata) SetVariableBilling(v bool) {
	o.VariableBilling = &v
}

// GetGlobalOrganization returns the GlobalOrganization field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetGlobalOrganization() string {
	if o == nil || IsNil(o.GlobalOrganization) {
		var ret string
		return ret
	}
	return *o.GlobalOrganization
}

// GetGlobalOrganizationOk returns a tuple with the GlobalOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetGlobalOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalOrganization) {
		return nil, false
	}
	return o.GlobalOrganization, true
}

// HasGlobalOrganization returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasGlobalOrganization() bool {
	if o != nil && !IsNil(o.GlobalOrganization) {
		return true
	}

	return false
}

// SetGlobalOrganization gets a reference to the given string and assigns it to the GlobalOrganization field.
func (o *ServiceProfileMetadata) SetGlobalOrganization(v string) {
	o.GlobalOrganization = &v
}

// GetLimitAuthKeyConn returns the LimitAuthKeyConn field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetLimitAuthKeyConn() bool {
	if o == nil || IsNil(o.LimitAuthKeyConn) {
		var ret bool
		return ret
	}
	return *o.LimitAuthKeyConn
}

// GetLimitAuthKeyConnOk returns a tuple with the LimitAuthKeyConn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetLimitAuthKeyConnOk() (*bool, bool) {
	if o == nil || IsNil(o.LimitAuthKeyConn) {
		return nil, false
	}
	return o.LimitAuthKeyConn, true
}

// HasLimitAuthKeyConn returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasLimitAuthKeyConn() bool {
	if o != nil && !IsNil(o.LimitAuthKeyConn) {
		return true
	}

	return false
}

// SetLimitAuthKeyConn gets a reference to the given bool and assigns it to the LimitAuthKeyConn field.
func (o *ServiceProfileMetadata) SetLimitAuthKeyConn(v bool) {
	o.LimitAuthKeyConn = &v
}

// GetAllowSecondaryLocation returns the AllowSecondaryLocation field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetAllowSecondaryLocation() bool {
	if o == nil || IsNil(o.AllowSecondaryLocation) {
		var ret bool
		return ret
	}
	return *o.AllowSecondaryLocation
}

// GetAllowSecondaryLocationOk returns a tuple with the AllowSecondaryLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetAllowSecondaryLocationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSecondaryLocation) {
		return nil, false
	}
	return o.AllowSecondaryLocation, true
}

// HasAllowSecondaryLocation returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasAllowSecondaryLocation() bool {
	if o != nil && !IsNil(o.AllowSecondaryLocation) {
		return true
	}

	return false
}

// SetAllowSecondaryLocation gets a reference to the given bool and assigns it to the AllowSecondaryLocation field.
func (o *ServiceProfileMetadata) SetAllowSecondaryLocation(v bool) {
	o.AllowSecondaryLocation = &v
}

// GetRedundantProfileId returns the RedundantProfileId field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetRedundantProfileId() string {
	if o == nil || IsNil(o.RedundantProfileId) {
		var ret string
		return ret
	}
	return *o.RedundantProfileId
}

// GetRedundantProfileIdOk returns a tuple with the RedundantProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetRedundantProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.RedundantProfileId) {
		return nil, false
	}
	return o.RedundantProfileId, true
}

// HasRedundantProfileId returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasRedundantProfileId() bool {
	if o != nil && !IsNil(o.RedundantProfileId) {
		return true
	}

	return false
}

// SetRedundantProfileId gets a reference to the given string and assigns it to the RedundantProfileId field.
func (o *ServiceProfileMetadata) SetRedundantProfileId(v string) {
	o.RedundantProfileId = &v
}

// GetAllowVcMigration returns the AllowVcMigration field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetAllowVcMigration() bool {
	if o == nil || IsNil(o.AllowVcMigration) {
		var ret bool
		return ret
	}
	return *o.AllowVcMigration
}

// GetAllowVcMigrationOk returns a tuple with the AllowVcMigration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetAllowVcMigrationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowVcMigration) {
		return nil, false
	}
	return o.AllowVcMigration, true
}

// HasAllowVcMigration returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasAllowVcMigration() bool {
	if o != nil && !IsNil(o.AllowVcMigration) {
		return true
	}

	return false
}

// SetAllowVcMigration gets a reference to the given bool and assigns it to the AllowVcMigration field.
func (o *ServiceProfileMetadata) SetAllowVcMigration(v bool) {
	o.AllowVcMigration = &v
}

// GetConnectionEditable returns the ConnectionEditable field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetConnectionEditable() bool {
	if o == nil || IsNil(o.ConnectionEditable) {
		var ret bool
		return ret
	}
	return *o.ConnectionEditable
}

// GetConnectionEditableOk returns a tuple with the ConnectionEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetConnectionEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.ConnectionEditable) {
		return nil, false
	}
	return o.ConnectionEditable, true
}

// HasConnectionEditable returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasConnectionEditable() bool {
	if o != nil && !IsNil(o.ConnectionEditable) {
		return true
	}

	return false
}

// SetConnectionEditable gets a reference to the given bool and assigns it to the ConnectionEditable field.
func (o *ServiceProfileMetadata) SetConnectionEditable(v bool) {
	o.ConnectionEditable = &v
}

// GetReleaseVlan returns the ReleaseVlan field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetReleaseVlan() bool {
	if o == nil || IsNil(o.ReleaseVlan) {
		var ret bool
		return ret
	}
	return *o.ReleaseVlan
}

// GetReleaseVlanOk returns a tuple with the ReleaseVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetReleaseVlanOk() (*bool, bool) {
	if o == nil || IsNil(o.ReleaseVlan) {
		return nil, false
	}
	return o.ReleaseVlan, true
}

// HasReleaseVlan returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasReleaseVlan() bool {
	if o != nil && !IsNil(o.ReleaseVlan) {
		return true
	}

	return false
}

// SetReleaseVlan gets a reference to the given bool and assigns it to the ReleaseVlan field.
func (o *ServiceProfileMetadata) SetReleaseVlan(v bool) {
	o.ReleaseVlan = &v
}

// GetMaxConnectionsOnPort returns the MaxConnectionsOnPort field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetMaxConnectionsOnPort() int32 {
	if o == nil || IsNil(o.MaxConnectionsOnPort) {
		var ret int32
		return ret
	}
	return *o.MaxConnectionsOnPort
}

// GetMaxConnectionsOnPortOk returns a tuple with the MaxConnectionsOnPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetMaxConnectionsOnPortOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxConnectionsOnPort) {
		return nil, false
	}
	return o.MaxConnectionsOnPort, true
}

// HasMaxConnectionsOnPort returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasMaxConnectionsOnPort() bool {
	if o != nil && !IsNil(o.MaxConnectionsOnPort) {
		return true
	}

	return false
}

// SetMaxConnectionsOnPort gets a reference to the given int32 and assigns it to the MaxConnectionsOnPort field.
func (o *ServiceProfileMetadata) SetMaxConnectionsOnPort(v int32) {
	o.MaxConnectionsOnPort = &v
}

// GetPortAssignmentStrategy returns the PortAssignmentStrategy field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetPortAssignmentStrategy() string {
	if o == nil || IsNil(o.PortAssignmentStrategy) {
		var ret string
		return ret
	}
	return *o.PortAssignmentStrategy
}

// GetPortAssignmentStrategyOk returns a tuple with the PortAssignmentStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetPortAssignmentStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.PortAssignmentStrategy) {
		return nil, false
	}
	return o.PortAssignmentStrategy, true
}

// HasPortAssignmentStrategy returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasPortAssignmentStrategy() bool {
	if o != nil && !IsNil(o.PortAssignmentStrategy) {
		return true
	}

	return false
}

// SetPortAssignmentStrategy gets a reference to the given string and assigns it to the PortAssignmentStrategy field.
func (o *ServiceProfileMetadata) SetPortAssignmentStrategy(v string) {
	o.PortAssignmentStrategy = &v
}

// GetEqxManagedPort returns the EqxManagedPort field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetEqxManagedPort() bool {
	if o == nil || IsNil(o.EqxManagedPort) {
		var ret bool
		return ret
	}
	return *o.EqxManagedPort
}

// GetEqxManagedPortOk returns a tuple with the EqxManagedPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetEqxManagedPortOk() (*bool, bool) {
	if o == nil || IsNil(o.EqxManagedPort) {
		return nil, false
	}
	return o.EqxManagedPort, true
}

// HasEqxManagedPort returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasEqxManagedPort() bool {
	if o != nil && !IsNil(o.EqxManagedPort) {
		return true
	}

	return false
}

// SetEqxManagedPort gets a reference to the given bool and assigns it to the EqxManagedPort field.
func (o *ServiceProfileMetadata) SetEqxManagedPort(v bool) {
	o.EqxManagedPort = &v
}

// GetConnectionNameEditable returns the ConnectionNameEditable field value if set, zero value otherwise.
func (o *ServiceProfileMetadata) GetConnectionNameEditable() bool {
	if o == nil || IsNil(o.ConnectionNameEditable) {
		var ret bool
		return ret
	}
	return *o.ConnectionNameEditable
}

// GetConnectionNameEditableOk returns a tuple with the ConnectionNameEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfileMetadata) GetConnectionNameEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.ConnectionNameEditable) {
		return nil, false
	}
	return o.ConnectionNameEditable, true
}

// HasConnectionNameEditable returns a boolean if a field has been set.
func (o *ServiceProfileMetadata) HasConnectionNameEditable() bool {
	if o != nil && !IsNil(o.ConnectionNameEditable) {
		return true
	}

	return false
}

// SetConnectionNameEditable gets a reference to the given bool and assigns it to the ConnectionNameEditable field.
func (o *ServiceProfileMetadata) SetConnectionNameEditable(v bool) {
	o.ConnectionNameEditable = &v
}

func (o ServiceProfileMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceProfileMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Props) {
		toSerialize["props"] = o.Props
	}
	if !IsNil(o.RegEx) {
		toSerialize["regEx"] = o.RegEx
	}
	if !IsNil(o.RegExMsg) {
		toSerialize["regExMsg"] = o.RegExMsg
	}
	if !IsNil(o.VlanRangeMaxValue) {
		toSerialize["vlanRangeMaxValue"] = o.VlanRangeMaxValue
	}
	if !IsNil(o.VlanRangeMinValue) {
		toSerialize["vlanRangeMinValue"] = o.VlanRangeMinValue
	}
	if !IsNil(o.MaxQinq) {
		toSerialize["maxQinq"] = o.MaxQinq
	}
	if !IsNil(o.MaxDot1q) {
		toSerialize["maxDot1q"] = o.MaxDot1q
	}
	if !IsNil(o.VariableBilling) {
		toSerialize["variableBilling"] = o.VariableBilling
	}
	if !IsNil(o.GlobalOrganization) {
		toSerialize["globalOrganization"] = o.GlobalOrganization
	}
	if !IsNil(o.LimitAuthKeyConn) {
		toSerialize["limitAuthKeyConn"] = o.LimitAuthKeyConn
	}
	if !IsNil(o.AllowSecondaryLocation) {
		toSerialize["allowSecondaryLocation"] = o.AllowSecondaryLocation
	}
	if !IsNil(o.RedundantProfileId) {
		toSerialize["redundantProfileId"] = o.RedundantProfileId
	}
	if !IsNil(o.AllowVcMigration) {
		toSerialize["allowVcMigration"] = o.AllowVcMigration
	}
	if !IsNil(o.ConnectionEditable) {
		toSerialize["connectionEditable"] = o.ConnectionEditable
	}
	if !IsNil(o.ReleaseVlan) {
		toSerialize["releaseVlan"] = o.ReleaseVlan
	}
	if !IsNil(o.MaxConnectionsOnPort) {
		toSerialize["maxConnectionsOnPort"] = o.MaxConnectionsOnPort
	}
	if !IsNil(o.PortAssignmentStrategy) {
		toSerialize["portAssignmentStrategy"] = o.PortAssignmentStrategy
	}
	if !IsNil(o.EqxManagedPort) {
		toSerialize["eqxManagedPort"] = o.EqxManagedPort
	}
	if !IsNil(o.ConnectionNameEditable) {
		toSerialize["connectionNameEditable"] = o.ConnectionNameEditable
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceProfileMetadata) UnmarshalJSON(data []byte) (err error) {
	varServiceProfileMetadata := _ServiceProfileMetadata{}

	err = json.Unmarshal(data, &varServiceProfileMetadata)

	if err != nil {
		return err
	}

	*o = ServiceProfileMetadata(varServiceProfileMetadata)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "props")
		delete(additionalProperties, "regEx")
		delete(additionalProperties, "regExMsg")
		delete(additionalProperties, "vlanRangeMaxValue")
		delete(additionalProperties, "vlanRangeMinValue")
		delete(additionalProperties, "maxQinq")
		delete(additionalProperties, "maxDot1q")
		delete(additionalProperties, "variableBilling")
		delete(additionalProperties, "globalOrganization")
		delete(additionalProperties, "limitAuthKeyConn")
		delete(additionalProperties, "allowSecondaryLocation")
		delete(additionalProperties, "redundantProfileId")
		delete(additionalProperties, "allowVcMigration")
		delete(additionalProperties, "connectionEditable")
		delete(additionalProperties, "releaseVlan")
		delete(additionalProperties, "maxConnectionsOnPort")
		delete(additionalProperties, "portAssignmentStrategy")
		delete(additionalProperties, "eqxManagedPort")
		delete(additionalProperties, "connectionNameEditable")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceProfileMetadata struct {
	value *ServiceProfileMetadata
	isSet bool
}

func (v NullableServiceProfileMetadata) Get() *ServiceProfileMetadata {
	return v.value
}

func (v *NullableServiceProfileMetadata) Set(val *ServiceProfileMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileMetadata(val *ServiceProfileMetadata) *NullableServiceProfileMetadata {
	return &NullableServiceProfileMetadata{value: val, isSet: true}
}

func (v NullableServiceProfileMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
