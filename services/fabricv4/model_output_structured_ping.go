/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the OutputStructuredPing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutputStructuredPing{}

// OutputStructuredPing struct for OutputStructuredPing
type OutputStructuredPing struct {
	DestinationIp        *string                            `json:"destinationIp,omitempty"`
	DestinationName      *string                            `json:"destinationName,omitempty"`
	DataBytes            *int32                             `json:"dataBytes,omitempty"`
	PacketsTransmitted   *int32                             `json:"packetsTransmitted,omitempty"`
	PacketsReceived      *int32                             `json:"packetsReceived,omitempty"`
	PacketsLossPercent   *float32                           `json:"packetsLossPercent,omitempty"`
	RttMin               *float32                           `json:"rttMin,omitempty"`
	RttAvg               *float32                           `json:"rttAvg,omitempty"`
	RttMax               *float32                           `json:"rttMax,omitempty"`
	RttStdDev            *float32                           `json:"rttStdDev,omitempty"`
	Responses            []OutputStructuredPingResponseItem `json:"responses,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OutputStructuredPing OutputStructuredPing

// NewOutputStructuredPing instantiates a new OutputStructuredPing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputStructuredPing() *OutputStructuredPing {
	this := OutputStructuredPing{}
	return &this
}

// NewOutputStructuredPingWithDefaults instantiates a new OutputStructuredPing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputStructuredPingWithDefaults() *OutputStructuredPing {
	this := OutputStructuredPing{}
	return &this
}

// GetDestinationIp returns the DestinationIp field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetDestinationIp() string {
	if o == nil || IsNil(o.DestinationIp) {
		var ret string
		return ret
	}
	return *o.DestinationIp
}

// GetDestinationIpOk returns a tuple with the DestinationIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetDestinationIpOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationIp) {
		return nil, false
	}
	return o.DestinationIp, true
}

// HasDestinationIp returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasDestinationIp() bool {
	if o != nil && !IsNil(o.DestinationIp) {
		return true
	}

	return false
}

// SetDestinationIp gets a reference to the given string and assigns it to the DestinationIp field.
func (o *OutputStructuredPing) SetDestinationIp(v string) {
	o.DestinationIp = &v
}

// GetDestinationName returns the DestinationName field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetDestinationName() string {
	if o == nil || IsNil(o.DestinationName) {
		var ret string
		return ret
	}
	return *o.DestinationName
}

// GetDestinationNameOk returns a tuple with the DestinationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetDestinationNameOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationName) {
		return nil, false
	}
	return o.DestinationName, true
}

// HasDestinationName returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasDestinationName() bool {
	if o != nil && !IsNil(o.DestinationName) {
		return true
	}

	return false
}

// SetDestinationName gets a reference to the given string and assigns it to the DestinationName field.
func (o *OutputStructuredPing) SetDestinationName(v string) {
	o.DestinationName = &v
}

// GetDataBytes returns the DataBytes field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetDataBytes() int32 {
	if o == nil || IsNil(o.DataBytes) {
		var ret int32
		return ret
	}
	return *o.DataBytes
}

// GetDataBytesOk returns a tuple with the DataBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetDataBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.DataBytes) {
		return nil, false
	}
	return o.DataBytes, true
}

// HasDataBytes returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasDataBytes() bool {
	if o != nil && !IsNil(o.DataBytes) {
		return true
	}

	return false
}

// SetDataBytes gets a reference to the given int32 and assigns it to the DataBytes field.
func (o *OutputStructuredPing) SetDataBytes(v int32) {
	o.DataBytes = &v
}

// GetPacketsTransmitted returns the PacketsTransmitted field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetPacketsTransmitted() int32 {
	if o == nil || IsNil(o.PacketsTransmitted) {
		var ret int32
		return ret
	}
	return *o.PacketsTransmitted
}

// GetPacketsTransmittedOk returns a tuple with the PacketsTransmitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetPacketsTransmittedOk() (*int32, bool) {
	if o == nil || IsNil(o.PacketsTransmitted) {
		return nil, false
	}
	return o.PacketsTransmitted, true
}

// HasPacketsTransmitted returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasPacketsTransmitted() bool {
	if o != nil && !IsNil(o.PacketsTransmitted) {
		return true
	}

	return false
}

// SetPacketsTransmitted gets a reference to the given int32 and assigns it to the PacketsTransmitted field.
func (o *OutputStructuredPing) SetPacketsTransmitted(v int32) {
	o.PacketsTransmitted = &v
}

// GetPacketsReceived returns the PacketsReceived field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetPacketsReceived() int32 {
	if o == nil || IsNil(o.PacketsReceived) {
		var ret int32
		return ret
	}
	return *o.PacketsReceived
}

// GetPacketsReceivedOk returns a tuple with the PacketsReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetPacketsReceivedOk() (*int32, bool) {
	if o == nil || IsNil(o.PacketsReceived) {
		return nil, false
	}
	return o.PacketsReceived, true
}

// HasPacketsReceived returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasPacketsReceived() bool {
	if o != nil && !IsNil(o.PacketsReceived) {
		return true
	}

	return false
}

// SetPacketsReceived gets a reference to the given int32 and assigns it to the PacketsReceived field.
func (o *OutputStructuredPing) SetPacketsReceived(v int32) {
	o.PacketsReceived = &v
}

// GetPacketsLossPercent returns the PacketsLossPercent field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetPacketsLossPercent() float32 {
	if o == nil || IsNil(o.PacketsLossPercent) {
		var ret float32
		return ret
	}
	return *o.PacketsLossPercent
}

// GetPacketsLossPercentOk returns a tuple with the PacketsLossPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetPacketsLossPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.PacketsLossPercent) {
		return nil, false
	}
	return o.PacketsLossPercent, true
}

// HasPacketsLossPercent returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasPacketsLossPercent() bool {
	if o != nil && !IsNil(o.PacketsLossPercent) {
		return true
	}

	return false
}

// SetPacketsLossPercent gets a reference to the given float32 and assigns it to the PacketsLossPercent field.
func (o *OutputStructuredPing) SetPacketsLossPercent(v float32) {
	o.PacketsLossPercent = &v
}

// GetRttMin returns the RttMin field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetRttMin() float32 {
	if o == nil || IsNil(o.RttMin) {
		var ret float32
		return ret
	}
	return *o.RttMin
}

// GetRttMinOk returns a tuple with the RttMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetRttMinOk() (*float32, bool) {
	if o == nil || IsNil(o.RttMin) {
		return nil, false
	}
	return o.RttMin, true
}

// HasRttMin returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasRttMin() bool {
	if o != nil && !IsNil(o.RttMin) {
		return true
	}

	return false
}

// SetRttMin gets a reference to the given float32 and assigns it to the RttMin field.
func (o *OutputStructuredPing) SetRttMin(v float32) {
	o.RttMin = &v
}

// GetRttAvg returns the RttAvg field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetRttAvg() float32 {
	if o == nil || IsNil(o.RttAvg) {
		var ret float32
		return ret
	}
	return *o.RttAvg
}

// GetRttAvgOk returns a tuple with the RttAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetRttAvgOk() (*float32, bool) {
	if o == nil || IsNil(o.RttAvg) {
		return nil, false
	}
	return o.RttAvg, true
}

// HasRttAvg returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasRttAvg() bool {
	if o != nil && !IsNil(o.RttAvg) {
		return true
	}

	return false
}

// SetRttAvg gets a reference to the given float32 and assigns it to the RttAvg field.
func (o *OutputStructuredPing) SetRttAvg(v float32) {
	o.RttAvg = &v
}

// GetRttMax returns the RttMax field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetRttMax() float32 {
	if o == nil || IsNil(o.RttMax) {
		var ret float32
		return ret
	}
	return *o.RttMax
}

// GetRttMaxOk returns a tuple with the RttMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetRttMaxOk() (*float32, bool) {
	if o == nil || IsNil(o.RttMax) {
		return nil, false
	}
	return o.RttMax, true
}

// HasRttMax returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasRttMax() bool {
	if o != nil && !IsNil(o.RttMax) {
		return true
	}

	return false
}

// SetRttMax gets a reference to the given float32 and assigns it to the RttMax field.
func (o *OutputStructuredPing) SetRttMax(v float32) {
	o.RttMax = &v
}

// GetRttStdDev returns the RttStdDev field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetRttStdDev() float32 {
	if o == nil || IsNil(o.RttStdDev) {
		var ret float32
		return ret
	}
	return *o.RttStdDev
}

// GetRttStdDevOk returns a tuple with the RttStdDev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetRttStdDevOk() (*float32, bool) {
	if o == nil || IsNil(o.RttStdDev) {
		return nil, false
	}
	return o.RttStdDev, true
}

// HasRttStdDev returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasRttStdDev() bool {
	if o != nil && !IsNil(o.RttStdDev) {
		return true
	}

	return false
}

// SetRttStdDev gets a reference to the given float32 and assigns it to the RttStdDev field.
func (o *OutputStructuredPing) SetRttStdDev(v float32) {
	o.RttStdDev = &v
}

// GetResponses returns the Responses field value if set, zero value otherwise.
func (o *OutputStructuredPing) GetResponses() []OutputStructuredPingResponseItem {
	if o == nil || IsNil(o.Responses) {
		var ret []OutputStructuredPingResponseItem
		return ret
	}
	return o.Responses
}

// GetResponsesOk returns a tuple with the Responses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputStructuredPing) GetResponsesOk() ([]OutputStructuredPingResponseItem, bool) {
	if o == nil || IsNil(o.Responses) {
		return nil, false
	}
	return o.Responses, true
}

// HasResponses returns a boolean if a field has been set.
func (o *OutputStructuredPing) HasResponses() bool {
	if o != nil && !IsNil(o.Responses) {
		return true
	}

	return false
}

// SetResponses gets a reference to the given []OutputStructuredPingResponseItem and assigns it to the Responses field.
func (o *OutputStructuredPing) SetResponses(v []OutputStructuredPingResponseItem) {
	o.Responses = v
}

func (o OutputStructuredPing) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutputStructuredPing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestinationIp) {
		toSerialize["destinationIp"] = o.DestinationIp
	}
	if !IsNil(o.DestinationName) {
		toSerialize["destinationName"] = o.DestinationName
	}
	if !IsNil(o.DataBytes) {
		toSerialize["dataBytes"] = o.DataBytes
	}
	if !IsNil(o.PacketsTransmitted) {
		toSerialize["packetsTransmitted"] = o.PacketsTransmitted
	}
	if !IsNil(o.PacketsReceived) {
		toSerialize["packetsReceived"] = o.PacketsReceived
	}
	if !IsNil(o.PacketsLossPercent) {
		toSerialize["packetsLossPercent"] = o.PacketsLossPercent
	}
	if !IsNil(o.RttMin) {
		toSerialize["rttMin"] = o.RttMin
	}
	if !IsNil(o.RttAvg) {
		toSerialize["rttAvg"] = o.RttAvg
	}
	if !IsNil(o.RttMax) {
		toSerialize["rttMax"] = o.RttMax
	}
	if !IsNil(o.RttStdDev) {
		toSerialize["rttStdDev"] = o.RttStdDev
	}
	if !IsNil(o.Responses) {
		toSerialize["responses"] = o.Responses
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OutputStructuredPing) UnmarshalJSON(data []byte) (err error) {
	varOutputStructuredPing := _OutputStructuredPing{}

	err = json.Unmarshal(data, &varOutputStructuredPing)

	if err != nil {
		return err
	}

	*o = OutputStructuredPing(varOutputStructuredPing)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "destinationIp")
		delete(additionalProperties, "destinationName")
		delete(additionalProperties, "dataBytes")
		delete(additionalProperties, "packetsTransmitted")
		delete(additionalProperties, "packetsReceived")
		delete(additionalProperties, "packetsLossPercent")
		delete(additionalProperties, "rttMin")
		delete(additionalProperties, "rttAvg")
		delete(additionalProperties, "rttMax")
		delete(additionalProperties, "rttStdDev")
		delete(additionalProperties, "responses")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOutputStructuredPing struct {
	value *OutputStructuredPing
	isSet bool
}

func (v NullableOutputStructuredPing) Get() *OutputStructuredPing {
	return v.value
}

func (v *NullableOutputStructuredPing) Set(val *OutputStructuredPing) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputStructuredPing) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputStructuredPing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputStructuredPing(val *OutputStructuredPing) *NullableOutputStructuredPing {
	return &NullableOutputStructuredPing{value: val, isSet: true}
}

func (v NullableOutputStructuredPing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputStructuredPing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
