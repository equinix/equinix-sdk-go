/*
Equinix Fabric API v4

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the SubscriptionEntitlementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionEntitlementResponse{}

// SubscriptionEntitlementResponse Subscription entitlement
type SubscriptionEntitlementResponse struct {
	// Subscription Entitlement Id
	Uuid                 *string            `json:"uuid,omitempty"`
	QuantityEntitled     *int32             `json:"quantityEntitled,omitempty"`
	QuantityConsumed     *int32             `json:"quantityConsumed,omitempty"`
	QuantityAvailable    *int32             `json:"quantityAvailable,omitempty"`
	Asset                *SubscriptionAsset `json:"asset,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SubscriptionEntitlementResponse SubscriptionEntitlementResponse

// NewSubscriptionEntitlementResponse instantiates a new SubscriptionEntitlementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionEntitlementResponse() *SubscriptionEntitlementResponse {
	this := SubscriptionEntitlementResponse{}
	return &this
}

// NewSubscriptionEntitlementResponseWithDefaults instantiates a new SubscriptionEntitlementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionEntitlementResponseWithDefaults() *SubscriptionEntitlementResponse {
	this := SubscriptionEntitlementResponse{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *SubscriptionEntitlementResponse) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionEntitlementResponse) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *SubscriptionEntitlementResponse) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *SubscriptionEntitlementResponse) SetUuid(v string) {
	o.Uuid = &v
}

// GetQuantityEntitled returns the QuantityEntitled field value if set, zero value otherwise.
func (o *SubscriptionEntitlementResponse) GetQuantityEntitled() int32 {
	if o == nil || IsNil(o.QuantityEntitled) {
		var ret int32
		return ret
	}
	return *o.QuantityEntitled
}

// GetQuantityEntitledOk returns a tuple with the QuantityEntitled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionEntitlementResponse) GetQuantityEntitledOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityEntitled) {
		return nil, false
	}
	return o.QuantityEntitled, true
}

// HasQuantityEntitled returns a boolean if a field has been set.
func (o *SubscriptionEntitlementResponse) HasQuantityEntitled() bool {
	if o != nil && !IsNil(o.QuantityEntitled) {
		return true
	}

	return false
}

// SetQuantityEntitled gets a reference to the given int32 and assigns it to the QuantityEntitled field.
func (o *SubscriptionEntitlementResponse) SetQuantityEntitled(v int32) {
	o.QuantityEntitled = &v
}

// GetQuantityConsumed returns the QuantityConsumed field value if set, zero value otherwise.
func (o *SubscriptionEntitlementResponse) GetQuantityConsumed() int32 {
	if o == nil || IsNil(o.QuantityConsumed) {
		var ret int32
		return ret
	}
	return *o.QuantityConsumed
}

// GetQuantityConsumedOk returns a tuple with the QuantityConsumed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionEntitlementResponse) GetQuantityConsumedOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityConsumed) {
		return nil, false
	}
	return o.QuantityConsumed, true
}

// HasQuantityConsumed returns a boolean if a field has been set.
func (o *SubscriptionEntitlementResponse) HasQuantityConsumed() bool {
	if o != nil && !IsNil(o.QuantityConsumed) {
		return true
	}

	return false
}

// SetQuantityConsumed gets a reference to the given int32 and assigns it to the QuantityConsumed field.
func (o *SubscriptionEntitlementResponse) SetQuantityConsumed(v int32) {
	o.QuantityConsumed = &v
}

// GetQuantityAvailable returns the QuantityAvailable field value if set, zero value otherwise.
func (o *SubscriptionEntitlementResponse) GetQuantityAvailable() int32 {
	if o == nil || IsNil(o.QuantityAvailable) {
		var ret int32
		return ret
	}
	return *o.QuantityAvailable
}

// GetQuantityAvailableOk returns a tuple with the QuantityAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionEntitlementResponse) GetQuantityAvailableOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityAvailable) {
		return nil, false
	}
	return o.QuantityAvailable, true
}

// HasQuantityAvailable returns a boolean if a field has been set.
func (o *SubscriptionEntitlementResponse) HasQuantityAvailable() bool {
	if o != nil && !IsNil(o.QuantityAvailable) {
		return true
	}

	return false
}

// SetQuantityAvailable gets a reference to the given int32 and assigns it to the QuantityAvailable field.
func (o *SubscriptionEntitlementResponse) SetQuantityAvailable(v int32) {
	o.QuantityAvailable = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *SubscriptionEntitlementResponse) GetAsset() SubscriptionAsset {
	if o == nil || IsNil(o.Asset) {
		var ret SubscriptionAsset
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionEntitlementResponse) GetAssetOk() (*SubscriptionAsset, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *SubscriptionEntitlementResponse) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given SubscriptionAsset and assigns it to the Asset field.
func (o *SubscriptionEntitlementResponse) SetAsset(v SubscriptionAsset) {
	o.Asset = &v
}

func (o SubscriptionEntitlementResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionEntitlementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.QuantityEntitled) {
		toSerialize["quantityEntitled"] = o.QuantityEntitled
	}
	if !IsNil(o.QuantityConsumed) {
		toSerialize["quantityConsumed"] = o.QuantityConsumed
	}
	if !IsNil(o.QuantityAvailable) {
		toSerialize["quantityAvailable"] = o.QuantityAvailable
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SubscriptionEntitlementResponse) UnmarshalJSON(data []byte) (err error) {
	varSubscriptionEntitlementResponse := _SubscriptionEntitlementResponse{}

	err = json.Unmarshal(data, &varSubscriptionEntitlementResponse)

	if err != nil {
		return err
	}

	*o = SubscriptionEntitlementResponse(varSubscriptionEntitlementResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "quantityEntitled")
		delete(additionalProperties, "quantityConsumed")
		delete(additionalProperties, "quantityAvailable")
		delete(additionalProperties, "asset")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSubscriptionEntitlementResponse struct {
	value *SubscriptionEntitlementResponse
	isSet bool
}

func (v NullableSubscriptionEntitlementResponse) Get() *SubscriptionEntitlementResponse {
	return v.value
}

func (v *NullableSubscriptionEntitlementResponse) Set(val *SubscriptionEntitlementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionEntitlementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionEntitlementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionEntitlementResponse(val *SubscriptionEntitlementResponse) *NullableSubscriptionEntitlementResponse {
	return &NullableSubscriptionEntitlementResponse{value: val, isSet: true}
}

func (v NullableSubscriptionEntitlementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionEntitlementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
