/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// PrecisionTimeServiceResponseState Precision Time Service Status.
type PrecisionTimeServiceResponseState string

// List of precisionTimeServiceResponse_state
const (
	PRECISIONTIMESERVICERESPONSESTATE_CANCELLED             PrecisionTimeServiceResponseState = "CANCELLED"
	PRECISIONTIMESERVICERESPONSESTATE_CANCELLING            PrecisionTimeServiceResponseState = "CANCELLING"
	PRECISIONTIMESERVICERESPONSESTATE_CONFIGURING           PrecisionTimeServiceResponseState = "CONFIGURING"
	PRECISIONTIMESERVICERESPONSESTATE_CONFIGURING_FAILED    PrecisionTimeServiceResponseState = "CONFIGURING_FAILED"
	PRECISIONTIMESERVICERESPONSESTATE_DRAFT                 PrecisionTimeServiceResponseState = "DRAFT"
	PRECISIONTIMESERVICERESPONSESTATE_DEPROVISIONING        PrecisionTimeServiceResponseState = "DEPROVISIONING"
	PRECISIONTIMESERVICERESPONSESTATE_DEPROVISIONING_FAILED PrecisionTimeServiceResponseState = "DEPROVISIONING_FAILED"
	PRECISIONTIMESERVICERESPONSESTATE_DEPROVISIONED         PrecisionTimeServiceResponseState = "DEPROVISIONED"
	PRECISIONTIMESERVICERESPONSESTATE_PROVISIONED           PrecisionTimeServiceResponseState = "PROVISIONED"
	PRECISIONTIMESERVICERESPONSESTATE_PROVISIONING          PrecisionTimeServiceResponseState = "PROVISIONING"
	PRECISIONTIMESERVICERESPONSESTATE_PROVISIONING_FAILED   PrecisionTimeServiceResponseState = "PROVISIONING_FAILED"
	PRECISIONTIMESERVICERESPONSESTATE_REPROVISIONING        PrecisionTimeServiceResponseState = "REPROVISIONING"
	PRECISIONTIMESERVICERESPONSESTATE_REPROVISIONING_FAILED PrecisionTimeServiceResponseState = "REPROVISIONING_FAILED"
)

// All allowed values of PrecisionTimeServiceResponseState enum
var AllowedPrecisionTimeServiceResponseStateEnumValues = []PrecisionTimeServiceResponseState{
	"CANCELLED",
	"CANCELLING",
	"CONFIGURING",
	"CONFIGURING_FAILED",
	"DRAFT",
	"DEPROVISIONING",
	"DEPROVISIONING_FAILED",
	"DEPROVISIONED",
	"PROVISIONED",
	"PROVISIONING",
	"PROVISIONING_FAILED",
	"REPROVISIONING",
	"REPROVISIONING_FAILED",
}

func (v *PrecisionTimeServiceResponseState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PrecisionTimeServiceResponseState(value)
	for _, existing := range AllowedPrecisionTimeServiceResponseStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PrecisionTimeServiceResponseState", value)
}

// NewPrecisionTimeServiceResponseStateFromValue returns a pointer to a valid PrecisionTimeServiceResponseState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrecisionTimeServiceResponseStateFromValue(v string) (*PrecisionTimeServiceResponseState, error) {
	ev := PrecisionTimeServiceResponseState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PrecisionTimeServiceResponseState: valid values are %v", v, AllowedPrecisionTimeServiceResponseStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrecisionTimeServiceResponseState) IsValid() bool {
	for _, existing := range AllowedPrecisionTimeServiceResponseStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to precisionTimeServiceResponse_state value
func (v PrecisionTimeServiceResponseState) Ptr() *PrecisionTimeServiceResponseState {
	return &v
}

type NullablePrecisionTimeServiceResponseState struct {
	value *PrecisionTimeServiceResponseState
	isSet bool
}

func (v NullablePrecisionTimeServiceResponseState) Get() *PrecisionTimeServiceResponseState {
	return v.value
}

func (v *NullablePrecisionTimeServiceResponseState) Set(val *PrecisionTimeServiceResponseState) {
	v.value = val
	v.isSet = true
}

func (v NullablePrecisionTimeServiceResponseState) IsSet() bool {
	return v.isSet
}

func (v *NullablePrecisionTimeServiceResponseState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrecisionTimeServiceResponseState(val *PrecisionTimeServiceResponseState) *NullablePrecisionTimeServiceResponseState {
	return &NullablePrecisionTimeServiceResponseState{value: val, isSet: true}
}

func (v NullablePrecisionTimeServiceResponseState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrecisionTimeServiceResponseState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
