/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// ServiceProfileLinkProtocolConfigEncapsulation Port encapsulation - Derived response attribute. Ignored on request payloads.
type ServiceProfileLinkProtocolConfigEncapsulation string

// List of ServiceProfileLinkProtocolConfig_encapsulation
const (
	SERVICEPROFILELINKPROTOCOLCONFIGENCAPSULATION_QINQ     ServiceProfileLinkProtocolConfigEncapsulation = "QINQ"
	SERVICEPROFILELINKPROTOCOLCONFIGENCAPSULATION_DOT1_Q   ServiceProfileLinkProtocolConfigEncapsulation = "DOT1Q"
	SERVICEPROFILELINKPROTOCOLCONFIGENCAPSULATION_UNTAGGED ServiceProfileLinkProtocolConfigEncapsulation = "UNTAGGED"
)

// All allowed values of ServiceProfileLinkProtocolConfigEncapsulation enum
var AllowedServiceProfileLinkProtocolConfigEncapsulationEnumValues = []ServiceProfileLinkProtocolConfigEncapsulation{
	"QINQ",
	"DOT1Q",
	"UNTAGGED",
}

func (v *ServiceProfileLinkProtocolConfigEncapsulation) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceProfileLinkProtocolConfigEncapsulation(value)
	for _, existing := range AllowedServiceProfileLinkProtocolConfigEncapsulationEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceProfileLinkProtocolConfigEncapsulation", value)
}

// NewServiceProfileLinkProtocolConfigEncapsulationFromValue returns a pointer to a valid ServiceProfileLinkProtocolConfigEncapsulation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceProfileLinkProtocolConfigEncapsulationFromValue(v string) (*ServiceProfileLinkProtocolConfigEncapsulation, error) {
	ev := ServiceProfileLinkProtocolConfigEncapsulation(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceProfileLinkProtocolConfigEncapsulation: valid values are %v", v, AllowedServiceProfileLinkProtocolConfigEncapsulationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceProfileLinkProtocolConfigEncapsulation) IsValid() bool {
	for _, existing := range AllowedServiceProfileLinkProtocolConfigEncapsulationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceProfileLinkProtocolConfig_encapsulation value
func (v ServiceProfileLinkProtocolConfigEncapsulation) Ptr() *ServiceProfileLinkProtocolConfigEncapsulation {
	return &v
}

type NullableServiceProfileLinkProtocolConfigEncapsulation struct {
	value *ServiceProfileLinkProtocolConfigEncapsulation
	isSet bool
}

func (v NullableServiceProfileLinkProtocolConfigEncapsulation) Get() *ServiceProfileLinkProtocolConfigEncapsulation {
	return v.value
}

func (v *NullableServiceProfileLinkProtocolConfigEncapsulation) Set(val *ServiceProfileLinkProtocolConfigEncapsulation) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfileLinkProtocolConfigEncapsulation) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfileLinkProtocolConfigEncapsulation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfileLinkProtocolConfigEncapsulation(val *ServiceProfileLinkProtocolConfigEncapsulation) *NullableServiceProfileLinkProtocolConfigEncapsulation {
	return &NullableServiceProfileLinkProtocolConfigEncapsulation{value: val, isSet: true}
}

func (v NullableServiceProfileLinkProtocolConfigEncapsulation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfileLinkProtocolConfigEncapsulation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
