/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the ProviderSearchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProviderSearchRequest{}

// ProviderSearchRequest Search requests containing criteria
type ProviderSearchRequest struct {
	Filter               *ProviderExpression `json:"filter,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProviderSearchRequest ProviderSearchRequest

// NewProviderSearchRequest instantiates a new ProviderSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProviderSearchRequest() *ProviderSearchRequest {
	this := ProviderSearchRequest{}
	return &this
}

// NewProviderSearchRequestWithDefaults instantiates a new ProviderSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProviderSearchRequestWithDefaults() *ProviderSearchRequest {
	this := ProviderSearchRequest{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *ProviderSearchRequest) GetFilter() ProviderExpression {
	if o == nil || IsNil(o.Filter) {
		var ret ProviderExpression
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderSearchRequest) GetFilterOk() (*ProviderExpression, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *ProviderSearchRequest) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given ProviderExpression and assigns it to the Filter field.
func (o *ProviderSearchRequest) SetFilter(v ProviderExpression) {
	o.Filter = &v
}

func (o ProviderSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProviderSearchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProviderSearchRequest) UnmarshalJSON(data []byte) (err error) {
	varProviderSearchRequest := _ProviderSearchRequest{}

	err = json.Unmarshal(data, &varProviderSearchRequest)

	if err != nil {
		return err
	}

	*o = ProviderSearchRequest(varProviderSearchRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "filter")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProviderSearchRequest struct {
	value *ProviderSearchRequest
	isSet bool
}

func (v NullableProviderSearchRequest) Get() *ProviderSearchRequest {
	return v.value
}

func (v *NullableProviderSearchRequest) Set(val *ProviderSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProviderSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProviderSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProviderSearchRequest(val *ProviderSearchRequest) *NullableProviderSearchRequest {
	return &NullableProviderSearchRequest{value: val, isSet: true}
}

func (v NullableProviderSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProviderSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
