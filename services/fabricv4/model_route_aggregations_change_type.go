/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// RouteAggregationsChangeType Type of change
type RouteAggregationsChangeType string

// List of RouteAggregationsChange_type
const (
	ROUTEAGGREGATIONSCHANGETYPE_IPV4_PREFIX_AGGREGATION_UPDATE   RouteAggregationsChangeType = "BGP_IPv4_PREFIX_AGGREGATION_UPDATE"
	ROUTEAGGREGATIONSCHANGETYPE_IPV4_PREFIX_AGGREGATION_CREATION RouteAggregationsChangeType = "BGP_IPv4_PREFIX_AGGREGATION_CREATION"
	ROUTEAGGREGATIONSCHANGETYPE_IPV4_PREFIX_AGGREGATION_DELETION RouteAggregationsChangeType = "BGP_IPv4_PREFIX_AGGREGATION_DELETION"
	ROUTEAGGREGATIONSCHANGETYPE_IPV6_PREFIX_AGGREGATION_UPDATE   RouteAggregationsChangeType = "BGP_IPv6_PREFIX_AGGREGATION_UPDATE"
	ROUTEAGGREGATIONSCHANGETYPE_IPV6_PREFIX_AGGREGATION_CREATION RouteAggregationsChangeType = "BGP_IPv6_PREFIX_AGGREGATION_CREATION"
	ROUTEAGGREGATIONSCHANGETYPE_IPV6_PREFIX_AGGREGATION_DELETION RouteAggregationsChangeType = "BGP_IPv6_PREFIX_AGGREGATION_DELETION"
)

// All allowed values of RouteAggregationsChangeType enum
var AllowedRouteAggregationsChangeTypeEnumValues = []RouteAggregationsChangeType{
	"BGP_IPv4_PREFIX_AGGREGATION_UPDATE",
	"BGP_IPv4_PREFIX_AGGREGATION_CREATION",
	"BGP_IPv4_PREFIX_AGGREGATION_DELETION",
	"BGP_IPv6_PREFIX_AGGREGATION_UPDATE",
	"BGP_IPv6_PREFIX_AGGREGATION_CREATION",
	"BGP_IPv6_PREFIX_AGGREGATION_DELETION",
}

func (v *RouteAggregationsChangeType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RouteAggregationsChangeType(value)
	for _, existing := range AllowedRouteAggregationsChangeTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RouteAggregationsChangeType", value)
}

// NewRouteAggregationsChangeTypeFromValue returns a pointer to a valid RouteAggregationsChangeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRouteAggregationsChangeTypeFromValue(v string) (*RouteAggregationsChangeType, error) {
	ev := RouteAggregationsChangeType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RouteAggregationsChangeType: valid values are %v", v, AllowedRouteAggregationsChangeTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RouteAggregationsChangeType) IsValid() bool {
	for _, existing := range AllowedRouteAggregationsChangeTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RouteAggregationsChange_type value
func (v RouteAggregationsChangeType) Ptr() *RouteAggregationsChangeType {
	return &v
}

type NullableRouteAggregationsChangeType struct {
	value *RouteAggregationsChangeType
	isSet bool
}

func (v NullableRouteAggregationsChangeType) Get() *RouteAggregationsChangeType {
	return v.value
}

func (v *NullableRouteAggregationsChangeType) Set(val *RouteAggregationsChangeType) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteAggregationsChangeType) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteAggregationsChangeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteAggregationsChangeType(val *RouteAggregationsChangeType) *NullableRouteAggregationsChangeType {
	return &NullableRouteAggregationsChangeType{value: val, isSet: true}
}

func (v NullableRouteAggregationsChangeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteAggregationsChangeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
