/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
	"fmt"
)

// GatewayAttachmentResponseAttachmentStatus the model 'GatewayAttachmentResponseAttachmentStatus'
type GatewayAttachmentResponseAttachmentStatus string

// List of GatewayAttachmentResponse_attachmentStatus
const (
	GATEWAYATTACHMENTRESPONSEATTACHMENTSTATUS_ATTACHING GatewayAttachmentResponseAttachmentStatus = "ATTACHING"
	GATEWAYATTACHMENTRESPONSEATTACHMENTSTATUS_ATTACHED  GatewayAttachmentResponseAttachmentStatus = "ATTACHED"
	GATEWAYATTACHMENTRESPONSEATTACHMENTSTATUS_DETACHING GatewayAttachmentResponseAttachmentStatus = "DETACHING"
	GATEWAYATTACHMENTRESPONSEATTACHMENTSTATUS_DETACHED  GatewayAttachmentResponseAttachmentStatus = "DETACHED"
	GATEWAYATTACHMENTRESPONSEATTACHMENTSTATUS_FAILED    GatewayAttachmentResponseAttachmentStatus = "FAILED"
)

// All allowed values of GatewayAttachmentResponseAttachmentStatus enum
var AllowedGatewayAttachmentResponseAttachmentStatusEnumValues = []GatewayAttachmentResponseAttachmentStatus{
	"ATTACHING",
	"ATTACHED",
	"DETACHING",
	"DETACHED",
	"FAILED",
}

func (v *GatewayAttachmentResponseAttachmentStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GatewayAttachmentResponseAttachmentStatus(value)
	for _, existing := range AllowedGatewayAttachmentResponseAttachmentStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GatewayAttachmentResponseAttachmentStatus", value)
}

// NewGatewayAttachmentResponseAttachmentStatusFromValue returns a pointer to a valid GatewayAttachmentResponseAttachmentStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGatewayAttachmentResponseAttachmentStatusFromValue(v string) (*GatewayAttachmentResponseAttachmentStatus, error) {
	ev := GatewayAttachmentResponseAttachmentStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GatewayAttachmentResponseAttachmentStatus: valid values are %v", v, AllowedGatewayAttachmentResponseAttachmentStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GatewayAttachmentResponseAttachmentStatus) IsValid() bool {
	for _, existing := range AllowedGatewayAttachmentResponseAttachmentStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GatewayAttachmentResponse_attachmentStatus value
func (v GatewayAttachmentResponseAttachmentStatus) Ptr() *GatewayAttachmentResponseAttachmentStatus {
	return &v
}

type NullableGatewayAttachmentResponseAttachmentStatus struct {
	value *GatewayAttachmentResponseAttachmentStatus
	isSet bool
}

func (v NullableGatewayAttachmentResponseAttachmentStatus) Get() *GatewayAttachmentResponseAttachmentStatus {
	return v.value
}

func (v *NullableGatewayAttachmentResponseAttachmentStatus) Set(val *GatewayAttachmentResponseAttachmentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayAttachmentResponseAttachmentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayAttachmentResponseAttachmentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayAttachmentResponseAttachmentStatus(val *GatewayAttachmentResponseAttachmentStatus) *NullableGatewayAttachmentResponseAttachmentStatus {
	return &NullableGatewayAttachmentResponseAttachmentStatus{value: val, isSet: true}
}

func (v NullableGatewayAttachmentResponseAttachmentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayAttachmentResponseAttachmentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
