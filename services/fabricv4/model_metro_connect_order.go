/*
Equinix Fabric API v4

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fabricv4

import (
	"encoding/json"
)

// checks if the MetroConnectOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetroConnectOrder{}

// MetroConnectOrder Metro Connect Order
type MetroConnectOrder struct {
	// purchase order number
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
	// Order Identification
	OrderId *string `json:"orderId,omitempty"`
	// Customer order reference Id
	CustomerReferenceId *string `json:"customerReferenceId,omitempty"`
	// Order Reference Number
	OrderNumber *string `json:"orderNumber,omitempty"`
	// Equinix-assigned order identifier, this is a derived response attribute
	Uuid                 *string `json:"uuid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetroConnectOrder MetroConnectOrder

// NewMetroConnectOrder instantiates a new MetroConnectOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetroConnectOrder() *MetroConnectOrder {
	this := MetroConnectOrder{}
	return &this
}

// NewMetroConnectOrderWithDefaults instantiates a new MetroConnectOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetroConnectOrderWithDefaults() *MetroConnectOrder {
	this := MetroConnectOrder{}
	return &this
}

// GetPurchaseOrderNumber returns the PurchaseOrderNumber field value if set, zero value otherwise.
func (o *MetroConnectOrder) GetPurchaseOrderNumber() string {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		var ret string
		return ret
	}
	return *o.PurchaseOrderNumber
}

// GetPurchaseOrderNumberOk returns a tuple with the PurchaseOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectOrder) GetPurchaseOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		return nil, false
	}
	return o.PurchaseOrderNumber, true
}

// HasPurchaseOrderNumber returns a boolean if a field has been set.
func (o *MetroConnectOrder) HasPurchaseOrderNumber() bool {
	if o != nil && !IsNil(o.PurchaseOrderNumber) {
		return true
	}

	return false
}

// SetPurchaseOrderNumber gets a reference to the given string and assigns it to the PurchaseOrderNumber field.
func (o *MetroConnectOrder) SetPurchaseOrderNumber(v string) {
	o.PurchaseOrderNumber = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *MetroConnectOrder) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectOrder) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *MetroConnectOrder) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *MetroConnectOrder) SetOrderId(v string) {
	o.OrderId = &v
}

// GetCustomerReferenceId returns the CustomerReferenceId field value if set, zero value otherwise.
func (o *MetroConnectOrder) GetCustomerReferenceId() string {
	if o == nil || IsNil(o.CustomerReferenceId) {
		var ret string
		return ret
	}
	return *o.CustomerReferenceId
}

// GetCustomerReferenceIdOk returns a tuple with the CustomerReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectOrder) GetCustomerReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerReferenceId) {
		return nil, false
	}
	return o.CustomerReferenceId, true
}

// HasCustomerReferenceId returns a boolean if a field has been set.
func (o *MetroConnectOrder) HasCustomerReferenceId() bool {
	if o != nil && !IsNil(o.CustomerReferenceId) {
		return true
	}

	return false
}

// SetCustomerReferenceId gets a reference to the given string and assigns it to the CustomerReferenceId field.
func (o *MetroConnectOrder) SetCustomerReferenceId(v string) {
	o.CustomerReferenceId = &v
}

// GetOrderNumber returns the OrderNumber field value if set, zero value otherwise.
func (o *MetroConnectOrder) GetOrderNumber() string {
	if o == nil || IsNil(o.OrderNumber) {
		var ret string
		return ret
	}
	return *o.OrderNumber
}

// GetOrderNumberOk returns a tuple with the OrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectOrder) GetOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OrderNumber) {
		return nil, false
	}
	return o.OrderNumber, true
}

// HasOrderNumber returns a boolean if a field has been set.
func (o *MetroConnectOrder) HasOrderNumber() bool {
	if o != nil && !IsNil(o.OrderNumber) {
		return true
	}

	return false
}

// SetOrderNumber gets a reference to the given string and assigns it to the OrderNumber field.
func (o *MetroConnectOrder) SetOrderNumber(v string) {
	o.OrderNumber = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *MetroConnectOrder) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroConnectOrder) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *MetroConnectOrder) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *MetroConnectOrder) SetUuid(v string) {
	o.Uuid = &v
}

func (o MetroConnectOrder) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetroConnectOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PurchaseOrderNumber) {
		toSerialize["purchaseOrderNumber"] = o.PurchaseOrderNumber
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.CustomerReferenceId) {
		toSerialize["customerReferenceId"] = o.CustomerReferenceId
	}
	if !IsNil(o.OrderNumber) {
		toSerialize["orderNumber"] = o.OrderNumber
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetroConnectOrder) UnmarshalJSON(data []byte) (err error) {
	varMetroConnectOrder := _MetroConnectOrder{}

	err = json.Unmarshal(data, &varMetroConnectOrder)

	if err != nil {
		return err
	}

	*o = MetroConnectOrder(varMetroConnectOrder)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "purchaseOrderNumber")
		delete(additionalProperties, "orderId")
		delete(additionalProperties, "customerReferenceId")
		delete(additionalProperties, "orderNumber")
		delete(additionalProperties, "uuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetroConnectOrder struct {
	value *MetroConnectOrder
	isSet bool
}

func (v NullableMetroConnectOrder) Get() *MetroConnectOrder {
	return v.value
}

func (v *NullableMetroConnectOrder) Set(val *MetroConnectOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableMetroConnectOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableMetroConnectOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetroConnectOrder(val *MetroConnectOrder) *NullableMetroConnectOrder {
	return &NullableMetroConnectOrder{value: val, isSet: true}
}

func (v NullableMetroConnectOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetroConnectOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
