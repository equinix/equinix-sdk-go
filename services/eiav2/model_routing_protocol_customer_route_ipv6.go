/*
Equinix Internet Access API

Equinix Internet Access provides direct access to the Internet with scalable bandwidth options in IBX data centers.

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eiav2

import (
	"encoding/json"
	"fmt"
)

// checks if the RoutingProtocolCustomerRouteIpv6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingProtocolCustomerRouteIpv6{}

// RoutingProtocolCustomerRouteIpv6 struct for RoutingProtocolCustomerRouteIpv6
type RoutingProtocolCustomerRouteIpv6 struct {
	ImportPolicy map[string]interface{} `json:"importPolicy"`
	// Subnet prefix
	Prefix *string `json:"prefix,omitempty" validate:"regexp=^((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))$"`
	// Determines the size of ip subnet
	PrefixLength         int32             `json:"prefixLength"`
	IpBlock              *IpBlockReadModel `json:"ipBlock,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RoutingProtocolCustomerRouteIpv6 RoutingProtocolCustomerRouteIpv6

// NewRoutingProtocolCustomerRouteIpv6 instantiates a new RoutingProtocolCustomerRouteIpv6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingProtocolCustomerRouteIpv6(importPolicy map[string]interface{}, prefixLength int32) *RoutingProtocolCustomerRouteIpv6 {
	this := RoutingProtocolCustomerRouteIpv6{}
	this.ImportPolicy = importPolicy
	this.PrefixLength = prefixLength
	return &this
}

// NewRoutingProtocolCustomerRouteIpv6WithDefaults instantiates a new RoutingProtocolCustomerRouteIpv6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingProtocolCustomerRouteIpv6WithDefaults() *RoutingProtocolCustomerRouteIpv6 {
	this := RoutingProtocolCustomerRouteIpv6{}
	return &this
}

// GetImportPolicy returns the ImportPolicy field value
func (o *RoutingProtocolCustomerRouteIpv6) GetImportPolicy() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ImportPolicy
}

// GetImportPolicyOk returns a tuple with the ImportPolicy field value
// and a boolean to check if the value has been set.
func (o *RoutingProtocolCustomerRouteIpv6) GetImportPolicyOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.ImportPolicy, true
}

// SetImportPolicy sets field value
func (o *RoutingProtocolCustomerRouteIpv6) SetImportPolicy(v map[string]interface{}) {
	o.ImportPolicy = v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *RoutingProtocolCustomerRouteIpv6) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolCustomerRouteIpv6) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *RoutingProtocolCustomerRouteIpv6) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *RoutingProtocolCustomerRouteIpv6) SetPrefix(v string) {
	o.Prefix = &v
}

// GetPrefixLength returns the PrefixLength field value
func (o *RoutingProtocolCustomerRouteIpv6) GetPrefixLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PrefixLength
}

// GetPrefixLengthOk returns a tuple with the PrefixLength field value
// and a boolean to check if the value has been set.
func (o *RoutingProtocolCustomerRouteIpv6) GetPrefixLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrefixLength, true
}

// SetPrefixLength sets field value
func (o *RoutingProtocolCustomerRouteIpv6) SetPrefixLength(v int32) {
	o.PrefixLength = v
}

// GetIpBlock returns the IpBlock field value if set, zero value otherwise.
func (o *RoutingProtocolCustomerRouteIpv6) GetIpBlock() IpBlockReadModel {
	if o == nil || IsNil(o.IpBlock) {
		var ret IpBlockReadModel
		return ret
	}
	return *o.IpBlock
}

// GetIpBlockOk returns a tuple with the IpBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingProtocolCustomerRouteIpv6) GetIpBlockOk() (*IpBlockReadModel, bool) {
	if o == nil || IsNil(o.IpBlock) {
		return nil, false
	}
	return o.IpBlock, true
}

// HasIpBlock returns a boolean if a field has been set.
func (o *RoutingProtocolCustomerRouteIpv6) HasIpBlock() bool {
	if o != nil && !IsNil(o.IpBlock) {
		return true
	}

	return false
}

// SetIpBlock gets a reference to the given IpBlockReadModel and assigns it to the IpBlock field.
func (o *RoutingProtocolCustomerRouteIpv6) SetIpBlock(v IpBlockReadModel) {
	o.IpBlock = &v
}

func (o RoutingProtocolCustomerRouteIpv6) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingProtocolCustomerRouteIpv6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["importPolicy"] = o.ImportPolicy
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	toSerialize["prefixLength"] = o.PrefixLength
	if !IsNil(o.IpBlock) {
		toSerialize["ipBlock"] = o.IpBlock
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RoutingProtocolCustomerRouteIpv6) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"importPolicy",
		"prefixLength",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutingProtocolCustomerRouteIpv6 := _RoutingProtocolCustomerRouteIpv6{}

	err = json.Unmarshal(data, &varRoutingProtocolCustomerRouteIpv6)

	if err != nil {
		return err
	}

	*o = RoutingProtocolCustomerRouteIpv6(varRoutingProtocolCustomerRouteIpv6)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "importPolicy")
		delete(additionalProperties, "prefix")
		delete(additionalProperties, "prefixLength")
		delete(additionalProperties, "ipBlock")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRoutingProtocolCustomerRouteIpv6 struct {
	value *RoutingProtocolCustomerRouteIpv6
	isSet bool
}

func (v NullableRoutingProtocolCustomerRouteIpv6) Get() *RoutingProtocolCustomerRouteIpv6 {
	return v.value
}

func (v *NullableRoutingProtocolCustomerRouteIpv6) Set(val *RoutingProtocolCustomerRouteIpv6) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingProtocolCustomerRouteIpv6) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingProtocolCustomerRouteIpv6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingProtocolCustomerRouteIpv6(val *RoutingProtocolCustomerRouteIpv6) *NullableRoutingProtocolCustomerRouteIpv6 {
	return &NullableRoutingProtocolCustomerRouteIpv6{value: val, isSet: true}
}

func (v NullableRoutingProtocolCustomerRouteIpv6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingProtocolCustomerRouteIpv6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
