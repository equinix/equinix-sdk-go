/*
Equinix Security Token Service

Exchange ID tokens for Equinix access tokens according to managed trust relationships.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stsv1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClientRegistration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientRegistration{}

// ClientRegistration struct for ClientRegistration
type ClientRegistration struct {
	// Fully qualified, universally unique id of a service. Starts with the NamespaceId. Formatted like   \"service:&lt;namespace&gt;/&lt;service&gt;\".
	ServiceId string `json:"serviceId" validate:"regexp=^service:[a-zA-Z][a-zA-Z0-9]{0,49}\\/[a-zA-Z][a-zA-Z0-9]{0,49}$"`
	// Uniquely identifies an access policy within a project.
	ServiceAccessPolicyId string `json:"serviceAccessPolicyId" validate:"regexp=^accesspolicy:[a-zA-Z](?![^:]*-$)(?![^:]*--)[a-zA-Z0-9-]{0,49}$"`
	// A string indicating the principal who invoked an operation to create the resource.
	CreatedBy string `json:"createdBy" validate:"regexp=.*"`
	// A string timestamp indicating when the resource was created. Formatted like: \"2025-02-12T17:24:19.033772087Z\"
	CreatedAt string `json:"createdAt" validate:"regexp=.*"`
	// A string indicating the principal who last invoked an operation to update the resource.
	UpdatedBy *string `json:"updatedBy,omitempty" validate:"regexp=.*"`
	// A string timestamp indicating when the resource was last updated. Formatted like: \"2025-02-12T17:24:19.033772087Z\"
	UpdatedAt *string `json:"updatedAt,omitempty" validate:"regexp=.*"`
	// An OAuth 2.0 client id for an EaaS service.
	ClientId string `json:"clientId" validate:"regexp=[a-zA-Z0-9]+"`
}

type _ClientRegistration ClientRegistration

// NewClientRegistration instantiates a new ClientRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientRegistration(serviceId string, serviceAccessPolicyId string, createdBy string, createdAt string, clientId string) *ClientRegistration {
	this := ClientRegistration{}
	this.ServiceId = serviceId
	this.ServiceAccessPolicyId = serviceAccessPolicyId
	this.CreatedBy = createdBy
	this.CreatedAt = createdAt
	this.ClientId = clientId
	return &this
}

// NewClientRegistrationWithDefaults instantiates a new ClientRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientRegistrationWithDefaults() *ClientRegistration {
	this := ClientRegistration{}
	return &this
}

// GetServiceId returns the ServiceId field value
func (o *ClientRegistration) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ClientRegistration) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ClientRegistration) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceAccessPolicyId returns the ServiceAccessPolicyId field value
func (o *ClientRegistration) GetServiceAccessPolicyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceAccessPolicyId
}

// GetServiceAccessPolicyIdOk returns a tuple with the ServiceAccessPolicyId field value
// and a boolean to check if the value has been set.
func (o *ClientRegistration) GetServiceAccessPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceAccessPolicyId, true
}

// SetServiceAccessPolicyId sets field value
func (o *ClientRegistration) SetServiceAccessPolicyId(v string) {
	o.ServiceAccessPolicyId = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ClientRegistration) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ClientRegistration) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ClientRegistration) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ClientRegistration) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ClientRegistration) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ClientRegistration) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *ClientRegistration) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientRegistration) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *ClientRegistration) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *ClientRegistration) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ClientRegistration) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientRegistration) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ClientRegistration) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ClientRegistration) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetClientId returns the ClientId field value
func (o *ClientRegistration) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *ClientRegistration) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *ClientRegistration) SetClientId(v string) {
	o.ClientId = v
}

func (o ClientRegistration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientRegistration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["serviceAccessPolicyId"] = o.ServiceAccessPolicyId
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	toSerialize["clientId"] = o.ClientId
	return toSerialize, nil
}

func (o *ClientRegistration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"serviceId",
		"serviceAccessPolicyId",
		"createdBy",
		"createdAt",
		"clientId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClientRegistration := _ClientRegistration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClientRegistration)

	if err != nil {
		return err
	}

	*o = ClientRegistration(varClientRegistration)

	return err
}

type NullableClientRegistration struct {
	value *ClientRegistration
	isSet bool
}

func (v NullableClientRegistration) Get() *ClientRegistration {
	return v.value
}

func (v *NullableClientRegistration) Set(val *ClientRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableClientRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableClientRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientRegistration(val *ClientRegistration) *NullableClientRegistration {
	return &NullableClientRegistration{value: val, isSet: true}
}

func (v NullableClientRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


