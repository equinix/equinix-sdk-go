/*
Equinix Security Token Service

Exchange ID tokens for Equinix access tokens according to managed trust relationships.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stsv1

import (
	"encoding/json"
	"fmt"
)

// checks if the SrvRegisterClientPost200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SrvRegisterClientPost200ResponseResult{}

// SrvRegisterClientPost200ResponseResult struct for SrvRegisterClientPost200ResponseResult
type SrvRegisterClientPost200ResponseResult struct {
	// An OAuth 2.0 client id for an EaaS service.
	ClientId string `json:"clientId" validate:"regexp=[a-zA-Z0-9]+"`
	ClientSecret string `json:"clientSecret"`
	ClientSecretExpiresAt int32 `json:"clientSecretExpiresAt"`
	AdditionalProperties map[string]interface{}
}

type _SrvRegisterClientPost200ResponseResult SrvRegisterClientPost200ResponseResult

// NewSrvRegisterClientPost200ResponseResult instantiates a new SrvRegisterClientPost200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSrvRegisterClientPost200ResponseResult(clientId string, clientSecret string, clientSecretExpiresAt int32) *SrvRegisterClientPost200ResponseResult {
	this := SrvRegisterClientPost200ResponseResult{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.ClientSecretExpiresAt = clientSecretExpiresAt
	return &this
}

// NewSrvRegisterClientPost200ResponseResultWithDefaults instantiates a new SrvRegisterClientPost200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSrvRegisterClientPost200ResponseResultWithDefaults() *SrvRegisterClientPost200ResponseResult {
	this := SrvRegisterClientPost200ResponseResult{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *SrvRegisterClientPost200ResponseResult) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *SrvRegisterClientPost200ResponseResult) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *SrvRegisterClientPost200ResponseResult) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *SrvRegisterClientPost200ResponseResult) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *SrvRegisterClientPost200ResponseResult) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *SrvRegisterClientPost200ResponseResult) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetClientSecretExpiresAt returns the ClientSecretExpiresAt field value
func (o *SrvRegisterClientPost200ResponseResult) GetClientSecretExpiresAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ClientSecretExpiresAt
}

// GetClientSecretExpiresAtOk returns a tuple with the ClientSecretExpiresAt field value
// and a boolean to check if the value has been set.
func (o *SrvRegisterClientPost200ResponseResult) GetClientSecretExpiresAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecretExpiresAt, true
}

// SetClientSecretExpiresAt sets field value
func (o *SrvRegisterClientPost200ResponseResult) SetClientSecretExpiresAt(v int32) {
	o.ClientSecretExpiresAt = v
}

func (o SrvRegisterClientPost200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SrvRegisterClientPost200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clientId"] = o.ClientId
	toSerialize["clientSecret"] = o.ClientSecret
	toSerialize["clientSecretExpiresAt"] = o.ClientSecretExpiresAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SrvRegisterClientPost200ResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clientId",
		"clientSecret",
		"clientSecretExpiresAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSrvRegisterClientPost200ResponseResult := _SrvRegisterClientPost200ResponseResult{}

	err = json.Unmarshal(data, &varSrvRegisterClientPost200ResponseResult)

	if err != nil {
		return err
	}

	*o = SrvRegisterClientPost200ResponseResult(varSrvRegisterClientPost200ResponseResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clientId")
		delete(additionalProperties, "clientSecret")
		delete(additionalProperties, "clientSecretExpiresAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSrvRegisterClientPost200ResponseResult struct {
	value *SrvRegisterClientPost200ResponseResult
	isSet bool
}

func (v NullableSrvRegisterClientPost200ResponseResult) Get() *SrvRegisterClientPost200ResponseResult {
	return v.value
}

func (v *NullableSrvRegisterClientPost200ResponseResult) Set(val *SrvRegisterClientPost200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSrvRegisterClientPost200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSrvRegisterClientPost200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSrvRegisterClientPost200ResponseResult(val *SrvRegisterClientPost200ResponseResult) *NullableSrvRegisterClientPost200ResponseResult {
	return &NullableSrvRegisterClientPost200ResponseResult{value: val, isSet: true}
}

func (v NullableSrvRegisterClientPost200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSrvRegisterClientPost200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


