/*
Equinix Security Token Service

Exchange ID tokens for Equinix access tokens according to managed trust relationships.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stsv1

import (
	"encoding/json"
	"fmt"
)

// checks if the UseDeleteOidcProviderPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UseDeleteOidcProviderPostRequest{}

// UseDeleteOidcProviderPostRequest struct for UseDeleteOidcProviderPostRequest
type UseDeleteOidcProviderPostRequest struct {
	// Uniquely identifies a trusted Identity Provider within a root project.
	IdpId string `json:"idpId" validate:"regexp=^idp:[a-zA-Z](?![^:]*-$)(?![^:]*--)[a-zA-Z0-9-]{0,49}$"`
	AdditionalProperties map[string]interface{}
}

type _UseDeleteOidcProviderPostRequest UseDeleteOidcProviderPostRequest

// NewUseDeleteOidcProviderPostRequest instantiates a new UseDeleteOidcProviderPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUseDeleteOidcProviderPostRequest(idpId string) *UseDeleteOidcProviderPostRequest {
	this := UseDeleteOidcProviderPostRequest{}
	this.IdpId = idpId
	return &this
}

// NewUseDeleteOidcProviderPostRequestWithDefaults instantiates a new UseDeleteOidcProviderPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUseDeleteOidcProviderPostRequestWithDefaults() *UseDeleteOidcProviderPostRequest {
	this := UseDeleteOidcProviderPostRequest{}
	return &this
}

// GetIdpId returns the IdpId field value
func (o *UseDeleteOidcProviderPostRequest) GetIdpId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpId
}

// GetIdpIdOk returns a tuple with the IdpId field value
// and a boolean to check if the value has been set.
func (o *UseDeleteOidcProviderPostRequest) GetIdpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpId, true
}

// SetIdpId sets field value
func (o *UseDeleteOidcProviderPostRequest) SetIdpId(v string) {
	o.IdpId = v
}

func (o UseDeleteOidcProviderPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UseDeleteOidcProviderPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["idpId"] = o.IdpId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UseDeleteOidcProviderPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"idpId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUseDeleteOidcProviderPostRequest := _UseDeleteOidcProviderPostRequest{}

	err = json.Unmarshal(data, &varUseDeleteOidcProviderPostRequest)

	if err != nil {
		return err
	}

	*o = UseDeleteOidcProviderPostRequest(varUseDeleteOidcProviderPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "idpId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUseDeleteOidcProviderPostRequest struct {
	value *UseDeleteOidcProviderPostRequest
	isSet bool
}

func (v NullableUseDeleteOidcProviderPostRequest) Get() *UseDeleteOidcProviderPostRequest {
	return v.value
}

func (v *NullableUseDeleteOidcProviderPostRequest) Set(val *UseDeleteOidcProviderPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUseDeleteOidcProviderPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUseDeleteOidcProviderPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUseDeleteOidcProviderPostRequest(val *UseDeleteOidcProviderPostRequest) *NullableUseDeleteOidcProviderPostRequest {
	return &NullableUseDeleteOidcProviderPostRequest{value: val, isSet: true}
}

func (v NullableUseDeleteOidcProviderPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUseDeleteOidcProviderPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


