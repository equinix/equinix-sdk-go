/*
Equinix Security Token Service

Exchange ID tokens for Equinix access tokens according to managed trust relationships.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stsv1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OIDCProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OIDCProvider{}

// OIDCProvider Represents a trust relationship with an OpenID Connect Identity Provider.
type OIDCProvider struct {
	// Uniquely identifies a trusted Identity Provider within a root project.
	IdpId string `json:"idpId" validate:"regexp=^idp:[a-zA-Z](?![^:]*-$)(?![^:]*--)[a-zA-Z0-9-]{0,49}$"`
	// A string timestamp indicating when the resource was last updated. Formatted like: \"2025-02-12T17:24:19.033772087Z\"
	UpdatedAt *string `json:"updatedAt,omitempty" validate:"regexp=.*"`
	// A string indicating the principal who last invoked an operation to update the resource.
	UpdatedBy *string `json:"updatedBy,omitempty" validate:"regexp=.*"`
	// A string timestamp indicating when the resource was created. Formatted like: \"2025-02-12T17:24:19.033772087Z\"
	CreatedAt string `json:"createdAt" validate:"regexp=.*"`
	// An opaque string that represents the revision of a given resource. Each time the resource is updated, this value   changes.
	Rev string `json:"rev" validate:"regexp=.*"`
	// A string indicating the principal who invoked an operation to create the resource.
	CreatedBy string `json:"createdBy" validate:"regexp=.*"`
	// The OIDC issuer location URL.
	IssuerLocation string `json:"issuerLocation"`
	// A human-friendly name for the identity provider.
	Name string `json:"name"`
	// Timestamp string formatted like: \"2025-02-13T17:10:00.864707507Z\".
	JwksRetrievedAt string `json:"jwksRetrievedAt"`
	Jwks OIDCProviderJwks `json:"jwks"`
	Status ProviderStatus `json:"status"`
	// An OIDC Issuer URI
	IssuerUri string `json:"issuerUri" validate:"regexp=^https:\\/\\/[a-zA-Z0-9-.]+(:[1-9][0-9]{0,4})?((?:[-a-zA-Z0-9$_.+!*'(),\\/]|%[0-9a-fA-F]{2})+)?$"`
	// List of OAuth 2.0 client ids for this provider that are permitted to exchange ID tokens for access tokens. The value of the `aud` claim in an ID token is checked against this list during token exchange.
	TrustedClientIds []string `json:"trustedClientIds"`
	// Name of the claim in the ID tokens provided by this OIDC issuer whose value the STS should interpret as containing a user's group memberships, for authorization purposes. The value of the group membership claim in an ID token must be an array of strings, where each string is a unique, non-reassignable identifier for a group. When this property is not set, the STS does not interpret any claim from this provider as a group membership claim.
	GroupMembershipClaim *string `json:"groupMembershipClaim,omitempty"`
}

type _OIDCProvider OIDCProvider

// NewOIDCProvider instantiates a new OIDCProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOIDCProvider(idpId string, createdAt string, rev string, createdBy string, issuerLocation string, name string, jwksRetrievedAt string, jwks OIDCProviderJwks, status ProviderStatus, issuerUri string, trustedClientIds []string) *OIDCProvider {
	this := OIDCProvider{}
	this.IdpId = idpId
	this.CreatedAt = createdAt
	this.Rev = rev
	this.CreatedBy = createdBy
	this.IssuerLocation = issuerLocation
	this.Name = name
	this.JwksRetrievedAt = jwksRetrievedAt
	this.Jwks = jwks
	this.Status = status
	this.IssuerUri = issuerUri
	this.TrustedClientIds = trustedClientIds
	return &this
}

// NewOIDCProviderWithDefaults instantiates a new OIDCProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCProviderWithDefaults() *OIDCProvider {
	this := OIDCProvider{}
	return &this
}

// GetIdpId returns the IdpId field value
func (o *OIDCProvider) GetIdpId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpId
}

// GetIdpIdOk returns a tuple with the IdpId field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetIdpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpId, true
}

// SetIdpId sets field value
func (o *OIDCProvider) SetIdpId(v string) {
	o.IdpId = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OIDCProvider) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OIDCProvider) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *OIDCProvider) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *OIDCProvider) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *OIDCProvider) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *OIDCProvider) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *OIDCProvider) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OIDCProvider) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetRev returns the Rev field value
func (o *OIDCProvider) GetRev() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rev
}

// GetRevOk returns a tuple with the Rev field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetRevOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rev, true
}

// SetRev sets field value
func (o *OIDCProvider) SetRev(v string) {
	o.Rev = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *OIDCProvider) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *OIDCProvider) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetIssuerLocation returns the IssuerLocation field value
func (o *OIDCProvider) GetIssuerLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssuerLocation
}

// GetIssuerLocationOk returns a tuple with the IssuerLocation field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetIssuerLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuerLocation, true
}

// SetIssuerLocation sets field value
func (o *OIDCProvider) SetIssuerLocation(v string) {
	o.IssuerLocation = v
}

// GetName returns the Name field value
func (o *OIDCProvider) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OIDCProvider) SetName(v string) {
	o.Name = v
}

// GetJwksRetrievedAt returns the JwksRetrievedAt field value
func (o *OIDCProvider) GetJwksRetrievedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JwksRetrievedAt
}

// GetJwksRetrievedAtOk returns a tuple with the JwksRetrievedAt field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetJwksRetrievedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JwksRetrievedAt, true
}

// SetJwksRetrievedAt sets field value
func (o *OIDCProvider) SetJwksRetrievedAt(v string) {
	o.JwksRetrievedAt = v
}

// GetJwks returns the Jwks field value
func (o *OIDCProvider) GetJwks() OIDCProviderJwks {
	if o == nil {
		var ret OIDCProviderJwks
		return ret
	}

	return o.Jwks
}

// GetJwksOk returns a tuple with the Jwks field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetJwksOk() (*OIDCProviderJwks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jwks, true
}

// SetJwks sets field value
func (o *OIDCProvider) SetJwks(v OIDCProviderJwks) {
	o.Jwks = v
}

// GetStatus returns the Status field value
func (o *OIDCProvider) GetStatus() ProviderStatus {
	if o == nil {
		var ret ProviderStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetStatusOk() (*ProviderStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *OIDCProvider) SetStatus(v ProviderStatus) {
	o.Status = v
}

// GetIssuerUri returns the IssuerUri field value
func (o *OIDCProvider) GetIssuerUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssuerUri
}

// GetIssuerUriOk returns a tuple with the IssuerUri field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetIssuerUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuerUri, true
}

// SetIssuerUri sets field value
func (o *OIDCProvider) SetIssuerUri(v string) {
	o.IssuerUri = v
}

// GetTrustedClientIds returns the TrustedClientIds field value
func (o *OIDCProvider) GetTrustedClientIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TrustedClientIds
}

// GetTrustedClientIdsOk returns a tuple with the TrustedClientIds field value
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetTrustedClientIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrustedClientIds, true
}

// SetTrustedClientIds sets field value
func (o *OIDCProvider) SetTrustedClientIds(v []string) {
	o.TrustedClientIds = v
}

// GetGroupMembershipClaim returns the GroupMembershipClaim field value if set, zero value otherwise.
func (o *OIDCProvider) GetGroupMembershipClaim() string {
	if o == nil || IsNil(o.GroupMembershipClaim) {
		var ret string
		return ret
	}
	return *o.GroupMembershipClaim
}

// GetGroupMembershipClaimOk returns a tuple with the GroupMembershipClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCProvider) GetGroupMembershipClaimOk() (*string, bool) {
	if o == nil || IsNil(o.GroupMembershipClaim) {
		return nil, false
	}
	return o.GroupMembershipClaim, true
}

// HasGroupMembershipClaim returns a boolean if a field has been set.
func (o *OIDCProvider) HasGroupMembershipClaim() bool {
	if o != nil && !IsNil(o.GroupMembershipClaim) {
		return true
	}

	return false
}

// SetGroupMembershipClaim gets a reference to the given string and assigns it to the GroupMembershipClaim field.
func (o *OIDCProvider) SetGroupMembershipClaim(v string) {
	o.GroupMembershipClaim = &v
}

func (o OIDCProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OIDCProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["idpId"] = o.IdpId
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["rev"] = o.Rev
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["issuerLocation"] = o.IssuerLocation
	toSerialize["name"] = o.Name
	toSerialize["jwksRetrievedAt"] = o.JwksRetrievedAt
	toSerialize["jwks"] = o.Jwks
	toSerialize["status"] = o.Status
	toSerialize["issuerUri"] = o.IssuerUri
	toSerialize["trustedClientIds"] = o.TrustedClientIds
	if !IsNil(o.GroupMembershipClaim) {
		toSerialize["groupMembershipClaim"] = o.GroupMembershipClaim
	}
	return toSerialize, nil
}

func (o *OIDCProvider) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"idpId",
		"createdAt",
		"rev",
		"createdBy",
		"issuerLocation",
		"name",
		"jwksRetrievedAt",
		"jwks",
		"status",
		"issuerUri",
		"trustedClientIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOIDCProvider := _OIDCProvider{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOIDCProvider)

	if err != nil {
		return err
	}

	*o = OIDCProvider(varOIDCProvider)

	return err
}

type NullableOIDCProvider struct {
	value *OIDCProvider
	isSet bool
}

func (v NullableOIDCProvider) Get() *OIDCProvider {
	return v.value
}

func (v *NullableOIDCProvider) Set(val *OIDCProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableOIDCProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableOIDCProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOIDCProvider(val *OIDCProvider) *NullableOIDCProvider {
	return &NullableOIDCProvider{value: val, isSet: true}
}

func (v NullableOIDCProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOIDCProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


