/*
Equinix Security Token Service

Exchange ID tokens for Equinix access tokens according to managed trust relationships.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stsv1

import (
	"encoding/json"
	"fmt"
)

// checks if the UsePatchOidcProviderPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsePatchOidcProviderPostRequest{}

// UsePatchOidcProviderPostRequest struct for UsePatchOidcProviderPostRequest
type UsePatchOidcProviderPostRequest struct {
	// A human-friendly name for the identity provider.
	Name *string `json:"name,omitempty"`
	// List of OAuth 2.0 client ids for this provider that are permitted to exchange ID tokens for access tokens. The value of the `aud` claim in an ID token is checked against this list during token exchange.
	TrustedClientIds []string `json:"trustedClientIds,omitempty"`
	GroupMembershipClaim *UsePatchOidcProviderPostRequestGroupMembershipClaim `json:"groupMembershipClaim,omitempty"`
	// Uniquely identifies a trusted Identity Provider within a root project.
	IdpId string `json:"idpId" validate:"regexp=^idp:[a-zA-Z](?![^:]*-$)(?![^:]*--)[a-zA-Z0-9-]{0,49}$"`
	// An opaque string that represents the expected revision of a given resource. This is provided when a resource is   updatd so that if a concurrent update has occured since the resource was read, then the collision will be detected.
	LastRev string `json:"lastRev" validate:"regexp=.*"`
	AdditionalProperties map[string]interface{}
}

type _UsePatchOidcProviderPostRequest UsePatchOidcProviderPostRequest

// NewUsePatchOidcProviderPostRequest instantiates a new UsePatchOidcProviderPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsePatchOidcProviderPostRequest(idpId string, lastRev string) *UsePatchOidcProviderPostRequest {
	this := UsePatchOidcProviderPostRequest{}
	this.IdpId = idpId
	this.LastRev = lastRev
	return &this
}

// NewUsePatchOidcProviderPostRequestWithDefaults instantiates a new UsePatchOidcProviderPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsePatchOidcProviderPostRequestWithDefaults() *UsePatchOidcProviderPostRequest {
	this := UsePatchOidcProviderPostRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UsePatchOidcProviderPostRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsePatchOidcProviderPostRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UsePatchOidcProviderPostRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UsePatchOidcProviderPostRequest) SetName(v string) {
	o.Name = &v
}

// GetTrustedClientIds returns the TrustedClientIds field value if set, zero value otherwise.
func (o *UsePatchOidcProviderPostRequest) GetTrustedClientIds() []string {
	if o == nil || IsNil(o.TrustedClientIds) {
		var ret []string
		return ret
	}
	return o.TrustedClientIds
}

// GetTrustedClientIdsOk returns a tuple with the TrustedClientIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsePatchOidcProviderPostRequest) GetTrustedClientIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TrustedClientIds) {
		return nil, false
	}
	return o.TrustedClientIds, true
}

// HasTrustedClientIds returns a boolean if a field has been set.
func (o *UsePatchOidcProviderPostRequest) HasTrustedClientIds() bool {
	if o != nil && !IsNil(o.TrustedClientIds) {
		return true
	}

	return false
}

// SetTrustedClientIds gets a reference to the given []string and assigns it to the TrustedClientIds field.
func (o *UsePatchOidcProviderPostRequest) SetTrustedClientIds(v []string) {
	o.TrustedClientIds = v
}

// GetGroupMembershipClaim returns the GroupMembershipClaim field value if set, zero value otherwise.
func (o *UsePatchOidcProviderPostRequest) GetGroupMembershipClaim() UsePatchOidcProviderPostRequestGroupMembershipClaim {
	if o == nil || IsNil(o.GroupMembershipClaim) {
		var ret UsePatchOidcProviderPostRequestGroupMembershipClaim
		return ret
	}
	return *o.GroupMembershipClaim
}

// GetGroupMembershipClaimOk returns a tuple with the GroupMembershipClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsePatchOidcProviderPostRequest) GetGroupMembershipClaimOk() (*UsePatchOidcProviderPostRequestGroupMembershipClaim, bool) {
	if o == nil || IsNil(o.GroupMembershipClaim) {
		return nil, false
	}
	return o.GroupMembershipClaim, true
}

// HasGroupMembershipClaim returns a boolean if a field has been set.
func (o *UsePatchOidcProviderPostRequest) HasGroupMembershipClaim() bool {
	if o != nil && !IsNil(o.GroupMembershipClaim) {
		return true
	}

	return false
}

// SetGroupMembershipClaim gets a reference to the given UsePatchOidcProviderPostRequestGroupMembershipClaim and assigns it to the GroupMembershipClaim field.
func (o *UsePatchOidcProviderPostRequest) SetGroupMembershipClaim(v UsePatchOidcProviderPostRequestGroupMembershipClaim) {
	o.GroupMembershipClaim = &v
}

// GetIdpId returns the IdpId field value
func (o *UsePatchOidcProviderPostRequest) GetIdpId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpId
}

// GetIdpIdOk returns a tuple with the IdpId field value
// and a boolean to check if the value has been set.
func (o *UsePatchOidcProviderPostRequest) GetIdpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpId, true
}

// SetIdpId sets field value
func (o *UsePatchOidcProviderPostRequest) SetIdpId(v string) {
	o.IdpId = v
}

// GetLastRev returns the LastRev field value
func (o *UsePatchOidcProviderPostRequest) GetLastRev() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastRev
}

// GetLastRevOk returns a tuple with the LastRev field value
// and a boolean to check if the value has been set.
func (o *UsePatchOidcProviderPostRequest) GetLastRevOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastRev, true
}

// SetLastRev sets field value
func (o *UsePatchOidcProviderPostRequest) SetLastRev(v string) {
	o.LastRev = v
}

func (o UsePatchOidcProviderPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsePatchOidcProviderPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TrustedClientIds) {
		toSerialize["trustedClientIds"] = o.TrustedClientIds
	}
	if !IsNil(o.GroupMembershipClaim) {
		toSerialize["groupMembershipClaim"] = o.GroupMembershipClaim
	}
	toSerialize["idpId"] = o.IdpId
	toSerialize["lastRev"] = o.LastRev

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UsePatchOidcProviderPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"idpId",
		"lastRev",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUsePatchOidcProviderPostRequest := _UsePatchOidcProviderPostRequest{}

	err = json.Unmarshal(data, &varUsePatchOidcProviderPostRequest)

	if err != nil {
		return err
	}

	*o = UsePatchOidcProviderPostRequest(varUsePatchOidcProviderPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "trustedClientIds")
		delete(additionalProperties, "groupMembershipClaim")
		delete(additionalProperties, "idpId")
		delete(additionalProperties, "lastRev")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUsePatchOidcProviderPostRequest struct {
	value *UsePatchOidcProviderPostRequest
	isSet bool
}

func (v NullableUsePatchOidcProviderPostRequest) Get() *UsePatchOidcProviderPostRequest {
	return v.value
}

func (v *NullableUsePatchOidcProviderPostRequest) Set(val *UsePatchOidcProviderPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUsePatchOidcProviderPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUsePatchOidcProviderPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsePatchOidcProviderPostRequest(val *UsePatchOidcProviderPostRequest) *NullableUsePatchOidcProviderPostRequest {
	return &NullableUsePatchOidcProviderPostRequest{value: val, isSet: true}
}

func (v NullableUsePatchOidcProviderPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsePatchOidcProviderPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


