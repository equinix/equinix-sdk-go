/*
Equinix Security Token Service

Exchange ID tokens for Equinix access tokens according to managed trust relationships.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stsv1

import (
	"encoding/json"
	"fmt"
)

// checks if the SrvListClientRegistrationsPost200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SrvListClientRegistrationsPost200ResponseResult{}

// SrvListClientRegistrationsPost200ResponseResult struct for SrvListClientRegistrationsPost200ResponseResult
type SrvListClientRegistrationsPost200ResponseResult struct {
	List []ClientRegistration `json:"list"`
	// When paging through results, the NextPageToken indicates what page to read next. It is obtained from the previous   call.
	NextPageToken *string `json:"nextPageToken,omitempty" validate:"regexp=.*"`
	AdditionalProperties map[string]interface{}
}

type _SrvListClientRegistrationsPost200ResponseResult SrvListClientRegistrationsPost200ResponseResult

// NewSrvListClientRegistrationsPost200ResponseResult instantiates a new SrvListClientRegistrationsPost200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSrvListClientRegistrationsPost200ResponseResult(list []ClientRegistration) *SrvListClientRegistrationsPost200ResponseResult {
	this := SrvListClientRegistrationsPost200ResponseResult{}
	this.List = list
	return &this
}

// NewSrvListClientRegistrationsPost200ResponseResultWithDefaults instantiates a new SrvListClientRegistrationsPost200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSrvListClientRegistrationsPost200ResponseResultWithDefaults() *SrvListClientRegistrationsPost200ResponseResult {
	this := SrvListClientRegistrationsPost200ResponseResult{}
	return &this
}

// GetList returns the List field value
func (o *SrvListClientRegistrationsPost200ResponseResult) GetList() []ClientRegistration {
	if o == nil {
		var ret []ClientRegistration
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *SrvListClientRegistrationsPost200ResponseResult) GetListOk() ([]ClientRegistration, bool) {
	if o == nil {
		return nil, false
	}
	return o.List, true
}

// SetList sets field value
func (o *SrvListClientRegistrationsPost200ResponseResult) SetList(v []ClientRegistration) {
	o.List = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *SrvListClientRegistrationsPost200ResponseResult) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrvListClientRegistrationsPost200ResponseResult) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *SrvListClientRegistrationsPost200ResponseResult) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *SrvListClientRegistrationsPost200ResponseResult) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o SrvListClientRegistrationsPost200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SrvListClientRegistrationsPost200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["list"] = o.List
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SrvListClientRegistrationsPost200ResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"list",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSrvListClientRegistrationsPost200ResponseResult := _SrvListClientRegistrationsPost200ResponseResult{}

	err = json.Unmarshal(data, &varSrvListClientRegistrationsPost200ResponseResult)

	if err != nil {
		return err
	}

	*o = SrvListClientRegistrationsPost200ResponseResult(varSrvListClientRegistrationsPost200ResponseResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "list")
		delete(additionalProperties, "nextPageToken")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSrvListClientRegistrationsPost200ResponseResult struct {
	value *SrvListClientRegistrationsPost200ResponseResult
	isSet bool
}

func (v NullableSrvListClientRegistrationsPost200ResponseResult) Get() *SrvListClientRegistrationsPost200ResponseResult {
	return v.value
}

func (v *NullableSrvListClientRegistrationsPost200ResponseResult) Set(val *SrvListClientRegistrationsPost200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSrvListClientRegistrationsPost200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSrvListClientRegistrationsPost200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSrvListClientRegistrationsPost200ResponseResult(val *SrvListClientRegistrationsPost200ResponseResult) *NullableSrvListClientRegistrationsPost200ResponseResult {
	return &NullableSrvListClientRegistrationsPost200ResponseResult{value: val, isSet: true}
}

func (v NullableSrvListClientRegistrationsPost200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSrvListClientRegistrationsPost200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


