/*
Equinix Security Token Service

Exchange ID tokens for Equinix access tokens according to managed trust relationships.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stsv1

import (
	"encoding/json"
	"fmt"
)

// checks if the SrvListClientRegistrationsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SrvListClientRegistrationsPostRequest{}

// SrvListClientRegistrationsPostRequest struct for SrvListClientRegistrationsPostRequest
type SrvListClientRegistrationsPostRequest struct {
	// When paging through results, the PageToken is an opaque indicator that identifies a page.
	PageToken *string `json:"pageToken,omitempty" validate:"regexp=.*"`
	// When paging through results, this is an integer indicating the maximum number of results to return. Note, it is   possible for fewer results to be returned even when the end of the result set has not been reached.
	PageSize int32 `json:"pageSize"`
	// Fully qualified, universally unique id of a service. Starts with the NamespaceId. Formatted like   \"service:&lt;namespace&gt;/&lt;service&gt;\".
	ServiceId *string `json:"serviceId,omitempty" validate:"regexp=^service:[a-zA-Z][a-zA-Z0-9]{0,49}\\/[a-zA-Z][a-zA-Z0-9]{0,49}$"`
	// Equinix resource name, a universally unique identifier for a resource across all clouds, regions, and   services. Formatted as   \"ern:&lt;cloudId&gt;:&lt;serviceId&gt;:&lt;regionId&gt;:&lt;projectId&gt;:&lt;resourceType&gt;:&lt;resourceId&gt;\".
	ServiceErn *string `json:"serviceErn,omitempty" validate:"regexp=^ern:(?<cloud>[^:]{1,50}):(?<service>[^:\\/]{1,50}\\/[^:\\/]{1,50}):(?<region>[^:]{1,50}):(?<project>[^:]{1,36}):(?<resourcetype>[^:]{1,50}):(?<resource>[^:]{1,50})$"`
	AdditionalProperties map[string]interface{}
}

type _SrvListClientRegistrationsPostRequest SrvListClientRegistrationsPostRequest

// NewSrvListClientRegistrationsPostRequest instantiates a new SrvListClientRegistrationsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSrvListClientRegistrationsPostRequest(pageSize int32) *SrvListClientRegistrationsPostRequest {
	this := SrvListClientRegistrationsPostRequest{}
	this.PageSize = pageSize
	return &this
}

// NewSrvListClientRegistrationsPostRequestWithDefaults instantiates a new SrvListClientRegistrationsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSrvListClientRegistrationsPostRequestWithDefaults() *SrvListClientRegistrationsPostRequest {
	this := SrvListClientRegistrationsPostRequest{}
	return &this
}

// GetPageToken returns the PageToken field value if set, zero value otherwise.
func (o *SrvListClientRegistrationsPostRequest) GetPageToken() string {
	if o == nil || IsNil(o.PageToken) {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrvListClientRegistrationsPostRequest) GetPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PageToken) {
		return nil, false
	}
	return o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *SrvListClientRegistrationsPostRequest) HasPageToken() bool {
	if o != nil && !IsNil(o.PageToken) {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *SrvListClientRegistrationsPostRequest) SetPageToken(v string) {
	o.PageToken = &v
}

// GetPageSize returns the PageSize field value
func (o *SrvListClientRegistrationsPostRequest) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *SrvListClientRegistrationsPostRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *SrvListClientRegistrationsPostRequest) SetPageSize(v int32) {
	o.PageSize = v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *SrvListClientRegistrationsPostRequest) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrvListClientRegistrationsPostRequest) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *SrvListClientRegistrationsPostRequest) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *SrvListClientRegistrationsPostRequest) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetServiceErn returns the ServiceErn field value if set, zero value otherwise.
func (o *SrvListClientRegistrationsPostRequest) GetServiceErn() string {
	if o == nil || IsNil(o.ServiceErn) {
		var ret string
		return ret
	}
	return *o.ServiceErn
}

// GetServiceErnOk returns a tuple with the ServiceErn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrvListClientRegistrationsPostRequest) GetServiceErnOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceErn) {
		return nil, false
	}
	return o.ServiceErn, true
}

// HasServiceErn returns a boolean if a field has been set.
func (o *SrvListClientRegistrationsPostRequest) HasServiceErn() bool {
	if o != nil && !IsNil(o.ServiceErn) {
		return true
	}

	return false
}

// SetServiceErn gets a reference to the given string and assigns it to the ServiceErn field.
func (o *SrvListClientRegistrationsPostRequest) SetServiceErn(v string) {
	o.ServiceErn = &v
}

func (o SrvListClientRegistrationsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SrvListClientRegistrationsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PageToken) {
		toSerialize["pageToken"] = o.PageToken
	}
	toSerialize["pageSize"] = o.PageSize
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.ServiceErn) {
		toSerialize["serviceErn"] = o.ServiceErn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SrvListClientRegistrationsPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pageSize",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSrvListClientRegistrationsPostRequest := _SrvListClientRegistrationsPostRequest{}

	err = json.Unmarshal(data, &varSrvListClientRegistrationsPostRequest)

	if err != nil {
		return err
	}

	*o = SrvListClientRegistrationsPostRequest(varSrvListClientRegistrationsPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pageToken")
		delete(additionalProperties, "pageSize")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "serviceErn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSrvListClientRegistrationsPostRequest struct {
	value *SrvListClientRegistrationsPostRequest
	isSet bool
}

func (v NullableSrvListClientRegistrationsPostRequest) Get() *SrvListClientRegistrationsPostRequest {
	return v.value
}

func (v *NullableSrvListClientRegistrationsPostRequest) Set(val *SrvListClientRegistrationsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSrvListClientRegistrationsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSrvListClientRegistrationsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSrvListClientRegistrationsPostRequest(val *SrvListClientRegistrationsPostRequest) *NullableSrvListClientRegistrationsPostRequest {
	return &NullableSrvListClientRegistrationsPostRequest{value: val, isSet: true}
}

func (v NullableSrvListClientRegistrationsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSrvListClientRegistrationsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


