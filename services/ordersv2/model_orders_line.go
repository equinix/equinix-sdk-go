/*
Orders

Based on a user's permission, a user may be able to view their own orders or also the orders from all of the users in their organization. These orders can be filtered by product type, order status, location, or date range. Only orders from the past 12 months will be returned.

API version: 2.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ordersv2

import (
	"encoding/json"
	"time"
)

// checks if the OrdersLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrdersLine{}

// OrdersLine Orders Line contains information appplicable for all the orders type i.e smart hands, work visit and cross connect
type OrdersLine struct {
	// Unique identifier associated with line item.
	LineId *string `json:"lineId,omitempty"`
	// Unique identifier associated with `lineId`to denote hierarchy of the product. When this field is null, item considered to be at root level.
	ParentlineId *string `json:"parentlineId,omitempty"`
	// Unique identifier to specify root item. Useful when product order hierarchy exceeds 2.
	RootlineId *string `json:"rootlineId,omitempty"`
	// The current status of the order or service
	Status *string `json:"status,omitempty"`
	// Description of the orders.
	Description *string `json:"description,omitempty"`
	// Billing commencement date and time in UTC timezone
	BillingStartDateTime *string `json:"billingStartDateTime,omitempty"`
	// The estimated completion date and time in UTC timezone
	EstimatedCompletionDateTime *time.Time `json:"estimatedCompletionDateTime,omitempty"`
	// Unit Pricing details
	UnitPricing []Price `json:"unitPricing,omitempty"`
	// Total Pricing details
	TotalPricing []Price `json:"totalPricing,omitempty"`
	// Type of product. Known values include: CROSS_CONNECT, SMART_HANDS, WORK_VISIT, SECURITY_ACCESS, CONFERENCE_ROOM, TROUBLE_TICKET, SHIPMENTS, NETWORK_PORTS, DEINSTALL_CROSS_CONNECT, Equinix Fabric Port/Connection, OTHER
	ProductType *string `json:"productType,omitempty"`
	// Product code associated with a particular product
	ProductCode *string `json:"productCode,omitempty"`
	// Product name
	ProductName *string `json:"productName,omitempty"`
	// Location code of Equinix datacenter
	Ibx *string `json:"ibx,omitempty"`
	// Cage ID
	Cage *string `json:"cage,omitempty"`
	// One or more cabinets ID
	Cabinets    []string               `json:"cabinets,omitempty"`
	RequestType *OrdersLineRequestType `json:"requestType,omitempty"`
	// File(s) attached to the Orders. To learn about including attachments in your request, see POST Attachments API.
	Attachments []Attachment `json:"attachments,omitempty"`
	// This section is reserved to display product specific information
	AdditionalInfo []ProductAdditionalInfoInner `json:"additionalInfo,omitempty"`
	PurchaseOrder  *PurchaseOrder               `json:"purchaseOrder,omitempty"`
	// When `true`, order can be cancelled
	Cancellable *bool `json:"cancellable,omitempty"`
	// When `true`, order can be modified
	Modifiable           *bool `json:"modifiable,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrdersLine OrdersLine

// NewOrdersLine instantiates a new OrdersLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrdersLine() *OrdersLine {
	this := OrdersLine{}
	var cancellable bool = false
	this.Cancellable = &cancellable
	return &this
}

// NewOrdersLineWithDefaults instantiates a new OrdersLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrdersLineWithDefaults() *OrdersLine {
	this := OrdersLine{}
	var cancellable bool = false
	this.Cancellable = &cancellable
	return &this
}

// GetLineId returns the LineId field value if set, zero value otherwise.
func (o *OrdersLine) GetLineId() string {
	if o == nil || IsNil(o.LineId) {
		var ret string
		return ret
	}
	return *o.LineId
}

// GetLineIdOk returns a tuple with the LineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetLineIdOk() (*string, bool) {
	if o == nil || IsNil(o.LineId) {
		return nil, false
	}
	return o.LineId, true
}

// HasLineId returns a boolean if a field has been set.
func (o *OrdersLine) HasLineId() bool {
	if o != nil && !IsNil(o.LineId) {
		return true
	}

	return false
}

// SetLineId gets a reference to the given string and assigns it to the LineId field.
func (o *OrdersLine) SetLineId(v string) {
	o.LineId = &v
}

// GetParentlineId returns the ParentlineId field value if set, zero value otherwise.
func (o *OrdersLine) GetParentlineId() string {
	if o == nil || IsNil(o.ParentlineId) {
		var ret string
		return ret
	}
	return *o.ParentlineId
}

// GetParentlineIdOk returns a tuple with the ParentlineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetParentlineIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentlineId) {
		return nil, false
	}
	return o.ParentlineId, true
}

// HasParentlineId returns a boolean if a field has been set.
func (o *OrdersLine) HasParentlineId() bool {
	if o != nil && !IsNil(o.ParentlineId) {
		return true
	}

	return false
}

// SetParentlineId gets a reference to the given string and assigns it to the ParentlineId field.
func (o *OrdersLine) SetParentlineId(v string) {
	o.ParentlineId = &v
}

// GetRootlineId returns the RootlineId field value if set, zero value otherwise.
func (o *OrdersLine) GetRootlineId() string {
	if o == nil || IsNil(o.RootlineId) {
		var ret string
		return ret
	}
	return *o.RootlineId
}

// GetRootlineIdOk returns a tuple with the RootlineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetRootlineIdOk() (*string, bool) {
	if o == nil || IsNil(o.RootlineId) {
		return nil, false
	}
	return o.RootlineId, true
}

// HasRootlineId returns a boolean if a field has been set.
func (o *OrdersLine) HasRootlineId() bool {
	if o != nil && !IsNil(o.RootlineId) {
		return true
	}

	return false
}

// SetRootlineId gets a reference to the given string and assigns it to the RootlineId field.
func (o *OrdersLine) SetRootlineId(v string) {
	o.RootlineId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OrdersLine) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OrdersLine) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OrdersLine) SetStatus(v string) {
	o.Status = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrdersLine) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrdersLine) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrdersLine) SetDescription(v string) {
	o.Description = &v
}

// GetBillingStartDateTime returns the BillingStartDateTime field value if set, zero value otherwise.
func (o *OrdersLine) GetBillingStartDateTime() string {
	if o == nil || IsNil(o.BillingStartDateTime) {
		var ret string
		return ret
	}
	return *o.BillingStartDateTime
}

// GetBillingStartDateTimeOk returns a tuple with the BillingStartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetBillingStartDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.BillingStartDateTime) {
		return nil, false
	}
	return o.BillingStartDateTime, true
}

// HasBillingStartDateTime returns a boolean if a field has been set.
func (o *OrdersLine) HasBillingStartDateTime() bool {
	if o != nil && !IsNil(o.BillingStartDateTime) {
		return true
	}

	return false
}

// SetBillingStartDateTime gets a reference to the given string and assigns it to the BillingStartDateTime field.
func (o *OrdersLine) SetBillingStartDateTime(v string) {
	o.BillingStartDateTime = &v
}

// GetEstimatedCompletionDateTime returns the EstimatedCompletionDateTime field value if set, zero value otherwise.
func (o *OrdersLine) GetEstimatedCompletionDateTime() time.Time {
	if o == nil || IsNil(o.EstimatedCompletionDateTime) {
		var ret time.Time
		return ret
	}
	return *o.EstimatedCompletionDateTime
}

// GetEstimatedCompletionDateTimeOk returns a tuple with the EstimatedCompletionDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetEstimatedCompletionDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EstimatedCompletionDateTime) {
		return nil, false
	}
	return o.EstimatedCompletionDateTime, true
}

// HasEstimatedCompletionDateTime returns a boolean if a field has been set.
func (o *OrdersLine) HasEstimatedCompletionDateTime() bool {
	if o != nil && !IsNil(o.EstimatedCompletionDateTime) {
		return true
	}

	return false
}

// SetEstimatedCompletionDateTime gets a reference to the given time.Time and assigns it to the EstimatedCompletionDateTime field.
func (o *OrdersLine) SetEstimatedCompletionDateTime(v time.Time) {
	o.EstimatedCompletionDateTime = &v
}

// GetUnitPricing returns the UnitPricing field value if set, zero value otherwise.
func (o *OrdersLine) GetUnitPricing() []Price {
	if o == nil || IsNil(o.UnitPricing) {
		var ret []Price
		return ret
	}
	return o.UnitPricing
}

// GetUnitPricingOk returns a tuple with the UnitPricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetUnitPricingOk() ([]Price, bool) {
	if o == nil || IsNil(o.UnitPricing) {
		return nil, false
	}
	return o.UnitPricing, true
}

// HasUnitPricing returns a boolean if a field has been set.
func (o *OrdersLine) HasUnitPricing() bool {
	if o != nil && !IsNil(o.UnitPricing) {
		return true
	}

	return false
}

// SetUnitPricing gets a reference to the given []Price and assigns it to the UnitPricing field.
func (o *OrdersLine) SetUnitPricing(v []Price) {
	o.UnitPricing = v
}

// GetTotalPricing returns the TotalPricing field value if set, zero value otherwise.
func (o *OrdersLine) GetTotalPricing() []Price {
	if o == nil || IsNil(o.TotalPricing) {
		var ret []Price
		return ret
	}
	return o.TotalPricing
}

// GetTotalPricingOk returns a tuple with the TotalPricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetTotalPricingOk() ([]Price, bool) {
	if o == nil || IsNil(o.TotalPricing) {
		return nil, false
	}
	return o.TotalPricing, true
}

// HasTotalPricing returns a boolean if a field has been set.
func (o *OrdersLine) HasTotalPricing() bool {
	if o != nil && !IsNil(o.TotalPricing) {
		return true
	}

	return false
}

// SetTotalPricing gets a reference to the given []Price and assigns it to the TotalPricing field.
func (o *OrdersLine) SetTotalPricing(v []Price) {
	o.TotalPricing = v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *OrdersLine) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *OrdersLine) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *OrdersLine) SetProductType(v string) {
	o.ProductType = &v
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *OrdersLine) GetProductCode() string {
	if o == nil || IsNil(o.ProductCode) {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetProductCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCode) {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *OrdersLine) HasProductCode() bool {
	if o != nil && !IsNil(o.ProductCode) {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *OrdersLine) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *OrdersLine) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *OrdersLine) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *OrdersLine) SetProductName(v string) {
	o.ProductName = &v
}

// GetIbx returns the Ibx field value if set, zero value otherwise.
func (o *OrdersLine) GetIbx() string {
	if o == nil || IsNil(o.Ibx) {
		var ret string
		return ret
	}
	return *o.Ibx
}

// GetIbxOk returns a tuple with the Ibx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetIbxOk() (*string, bool) {
	if o == nil || IsNil(o.Ibx) {
		return nil, false
	}
	return o.Ibx, true
}

// HasIbx returns a boolean if a field has been set.
func (o *OrdersLine) HasIbx() bool {
	if o != nil && !IsNil(o.Ibx) {
		return true
	}

	return false
}

// SetIbx gets a reference to the given string and assigns it to the Ibx field.
func (o *OrdersLine) SetIbx(v string) {
	o.Ibx = &v
}

// GetCage returns the Cage field value if set, zero value otherwise.
func (o *OrdersLine) GetCage() string {
	if o == nil || IsNil(o.Cage) {
		var ret string
		return ret
	}
	return *o.Cage
}

// GetCageOk returns a tuple with the Cage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetCageOk() (*string, bool) {
	if o == nil || IsNil(o.Cage) {
		return nil, false
	}
	return o.Cage, true
}

// HasCage returns a boolean if a field has been set.
func (o *OrdersLine) HasCage() bool {
	if o != nil && !IsNil(o.Cage) {
		return true
	}

	return false
}

// SetCage gets a reference to the given string and assigns it to the Cage field.
func (o *OrdersLine) SetCage(v string) {
	o.Cage = &v
}

// GetCabinets returns the Cabinets field value if set, zero value otherwise.
func (o *OrdersLine) GetCabinets() []string {
	if o == nil || IsNil(o.Cabinets) {
		var ret []string
		return ret
	}
	return o.Cabinets
}

// GetCabinetsOk returns a tuple with the Cabinets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetCabinetsOk() ([]string, bool) {
	if o == nil || IsNil(o.Cabinets) {
		return nil, false
	}
	return o.Cabinets, true
}

// HasCabinets returns a boolean if a field has been set.
func (o *OrdersLine) HasCabinets() bool {
	if o != nil && !IsNil(o.Cabinets) {
		return true
	}

	return false
}

// SetCabinets gets a reference to the given []string and assigns it to the Cabinets field.
func (o *OrdersLine) SetCabinets(v []string) {
	o.Cabinets = v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *OrdersLine) GetRequestType() OrdersLineRequestType {
	if o == nil || IsNil(o.RequestType) {
		var ret OrdersLineRequestType
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetRequestTypeOk() (*OrdersLineRequestType, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *OrdersLine) HasRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given OrdersLineRequestType and assigns it to the RequestType field.
func (o *OrdersLine) SetRequestType(v OrdersLineRequestType) {
	o.RequestType = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *OrdersLine) GetAttachments() []Attachment {
	if o == nil || IsNil(o.Attachments) {
		var ret []Attachment
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetAttachmentsOk() ([]Attachment, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *OrdersLine) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []Attachment and assigns it to the Attachments field.
func (o *OrdersLine) SetAttachments(v []Attachment) {
	o.Attachments = v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *OrdersLine) GetAdditionalInfo() []ProductAdditionalInfoInner {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret []ProductAdditionalInfoInner
		return ret
	}
	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetAdditionalInfoOk() ([]ProductAdditionalInfoInner, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *OrdersLine) HasAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given []ProductAdditionalInfoInner and assigns it to the AdditionalInfo field.
func (o *OrdersLine) SetAdditionalInfo(v []ProductAdditionalInfoInner) {
	o.AdditionalInfo = v
}

// GetPurchaseOrder returns the PurchaseOrder field value if set, zero value otherwise.
func (o *OrdersLine) GetPurchaseOrder() PurchaseOrder {
	if o == nil || IsNil(o.PurchaseOrder) {
		var ret PurchaseOrder
		return ret
	}
	return *o.PurchaseOrder
}

// GetPurchaseOrderOk returns a tuple with the PurchaseOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetPurchaseOrderOk() (*PurchaseOrder, bool) {
	if o == nil || IsNil(o.PurchaseOrder) {
		return nil, false
	}
	return o.PurchaseOrder, true
}

// HasPurchaseOrder returns a boolean if a field has been set.
func (o *OrdersLine) HasPurchaseOrder() bool {
	if o != nil && !IsNil(o.PurchaseOrder) {
		return true
	}

	return false
}

// SetPurchaseOrder gets a reference to the given PurchaseOrder and assigns it to the PurchaseOrder field.
func (o *OrdersLine) SetPurchaseOrder(v PurchaseOrder) {
	o.PurchaseOrder = &v
}

// GetCancellable returns the Cancellable field value if set, zero value otherwise.
func (o *OrdersLine) GetCancellable() bool {
	if o == nil || IsNil(o.Cancellable) {
		var ret bool
		return ret
	}
	return *o.Cancellable
}

// GetCancellableOk returns a tuple with the Cancellable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetCancellableOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancellable) {
		return nil, false
	}
	return o.Cancellable, true
}

// HasCancellable returns a boolean if a field has been set.
func (o *OrdersLine) HasCancellable() bool {
	if o != nil && !IsNil(o.Cancellable) {
		return true
	}

	return false
}

// SetCancellable gets a reference to the given bool and assigns it to the Cancellable field.
func (o *OrdersLine) SetCancellable(v bool) {
	o.Cancellable = &v
}

// GetModifiable returns the Modifiable field value if set, zero value otherwise.
func (o *OrdersLine) GetModifiable() bool {
	if o == nil || IsNil(o.Modifiable) {
		var ret bool
		return ret
	}
	return *o.Modifiable
}

// GetModifiableOk returns a tuple with the Modifiable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdersLine) GetModifiableOk() (*bool, bool) {
	if o == nil || IsNil(o.Modifiable) {
		return nil, false
	}
	return o.Modifiable, true
}

// HasModifiable returns a boolean if a field has been set.
func (o *OrdersLine) HasModifiable() bool {
	if o != nil && !IsNil(o.Modifiable) {
		return true
	}

	return false
}

// SetModifiable gets a reference to the given bool and assigns it to the Modifiable field.
func (o *OrdersLine) SetModifiable(v bool) {
	o.Modifiable = &v
}

func (o OrdersLine) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrdersLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LineId) {
		toSerialize["lineId"] = o.LineId
	}
	if !IsNil(o.ParentlineId) {
		toSerialize["parentlineId"] = o.ParentlineId
	}
	if !IsNil(o.RootlineId) {
		toSerialize["rootlineId"] = o.RootlineId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.BillingStartDateTime) {
		toSerialize["billingStartDateTime"] = o.BillingStartDateTime
	}
	if !IsNil(o.EstimatedCompletionDateTime) {
		toSerialize["estimatedCompletionDateTime"] = o.EstimatedCompletionDateTime
	}
	if !IsNil(o.UnitPricing) {
		toSerialize["unitPricing"] = o.UnitPricing
	}
	if !IsNil(o.TotalPricing) {
		toSerialize["totalPricing"] = o.TotalPricing
	}
	if !IsNil(o.ProductType) {
		toSerialize["productType"] = o.ProductType
	}
	if !IsNil(o.ProductCode) {
		toSerialize["productCode"] = o.ProductCode
	}
	if !IsNil(o.ProductName) {
		toSerialize["productName"] = o.ProductName
	}
	if !IsNil(o.Ibx) {
		toSerialize["ibx"] = o.Ibx
	}
	if !IsNil(o.Cage) {
		toSerialize["cage"] = o.Cage
	}
	if !IsNil(o.Cabinets) {
		toSerialize["cabinets"] = o.Cabinets
	}
	if !IsNil(o.RequestType) {
		toSerialize["requestType"] = o.RequestType
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	if !IsNil(o.PurchaseOrder) {
		toSerialize["purchaseOrder"] = o.PurchaseOrder
	}
	if !IsNil(o.Cancellable) {
		toSerialize["cancellable"] = o.Cancellable
	}
	if !IsNil(o.Modifiable) {
		toSerialize["modifiable"] = o.Modifiable
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrdersLine) UnmarshalJSON(data []byte) (err error) {
	varOrdersLine := _OrdersLine{}

	err = json.Unmarshal(data, &varOrdersLine)

	if err != nil {
		return err
	}

	*o = OrdersLine(varOrdersLine)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "lineId")
		delete(additionalProperties, "parentlineId")
		delete(additionalProperties, "rootlineId")
		delete(additionalProperties, "status")
		delete(additionalProperties, "description")
		delete(additionalProperties, "billingStartDateTime")
		delete(additionalProperties, "estimatedCompletionDateTime")
		delete(additionalProperties, "unitPricing")
		delete(additionalProperties, "totalPricing")
		delete(additionalProperties, "productType")
		delete(additionalProperties, "productCode")
		delete(additionalProperties, "productName")
		delete(additionalProperties, "ibx")
		delete(additionalProperties, "cage")
		delete(additionalProperties, "cabinets")
		delete(additionalProperties, "requestType")
		delete(additionalProperties, "attachments")
		delete(additionalProperties, "additionalInfo")
		delete(additionalProperties, "purchaseOrder")
		delete(additionalProperties, "cancellable")
		delete(additionalProperties, "modifiable")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrdersLine struct {
	value *OrdersLine
	isSet bool
}

func (v NullableOrdersLine) Get() *OrdersLine {
	return v.value
}

func (v *NullableOrdersLine) Set(val *OrdersLine) {
	v.value = val
	v.isSet = true
}

func (v NullableOrdersLine) IsSet() bool {
	return v.isSet
}

func (v *NullableOrdersLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrdersLine(val *OrdersLine) *NullableOrdersLine {
	return &NullableOrdersLine{value: val, isSet: true}
}

func (v NullableOrdersLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrdersLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
