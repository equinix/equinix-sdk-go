/*
Orders

Based on a user's permission, a user may be able to view their own orders or also the orders from all of the users in their organization. These orders can be filtered by product type, order status, location, or date range. Only orders from the past 12 months will be returned.

API version: 2.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ordersv2

import (
	"encoding/json"
)

// checks if the ProductAdditionalInfoInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductAdditionalInfoInner{}

// ProductAdditionalInfoInner struct for ProductAdditionalInfoInner
type ProductAdditionalInfoInner struct {
	Key                  *string `json:"key,omitempty"`
	Value                *string `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProductAdditionalInfoInner ProductAdditionalInfoInner

// NewProductAdditionalInfoInner instantiates a new ProductAdditionalInfoInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductAdditionalInfoInner() *ProductAdditionalInfoInner {
	this := ProductAdditionalInfoInner{}
	return &this
}

// NewProductAdditionalInfoInnerWithDefaults instantiates a new ProductAdditionalInfoInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductAdditionalInfoInnerWithDefaults() *ProductAdditionalInfoInner {
	this := ProductAdditionalInfoInner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ProductAdditionalInfoInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAdditionalInfoInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ProductAdditionalInfoInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ProductAdditionalInfoInner) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ProductAdditionalInfoInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductAdditionalInfoInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ProductAdditionalInfoInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ProductAdditionalInfoInner) SetValue(v string) {
	o.Value = &v
}

func (o ProductAdditionalInfoInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductAdditionalInfoInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProductAdditionalInfoInner) UnmarshalJSON(data []byte) (err error) {
	varProductAdditionalInfoInner := _ProductAdditionalInfoInner{}

	err = json.Unmarshal(data, &varProductAdditionalInfoInner)

	if err != nil {
		return err
	}

	*o = ProductAdditionalInfoInner(varProductAdditionalInfoInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "key")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProductAdditionalInfoInner struct {
	value *ProductAdditionalInfoInner
	isSet bool
}

func (v NullableProductAdditionalInfoInner) Get() *ProductAdditionalInfoInner {
	return v.value
}

func (v *NullableProductAdditionalInfoInner) Set(val *ProductAdditionalInfoInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductAdditionalInfoInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductAdditionalInfoInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductAdditionalInfoInner(val *ProductAdditionalInfoInner) *NullableProductAdditionalInfoInner {
	return &NullableProductAdditionalInfoInner{value: val, isSet: true}
}

func (v NullableProductAdditionalInfoInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductAdditionalInfoInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
