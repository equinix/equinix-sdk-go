/*
Orders

Based on a user's permission, a user may be able to view their own orders or also the orders from all of the users in their organization. These orders can be filtered by product type, order status, location, or date range. Only orders from the past 12 months will be returned.

API version: 2.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ordersv2

import (
	"encoding/json"
)

// checks if the OrderDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderDetails{}

// OrderDetails struct for OrderDetails
type OrderDetails struct {
	Details              []OrdersLine `json:"details,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrderDetails OrderDetails

// NewOrderDetails instantiates a new OrderDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderDetails() *OrderDetails {
	this := OrderDetails{}
	return &this
}

// NewOrderDetailsWithDefaults instantiates a new OrderDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDetailsWithDefaults() *OrderDetails {
	this := OrderDetails{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *OrderDetails) GetDetails() []OrdersLine {
	if o == nil || IsNil(o.Details) {
		var ret []OrdersLine
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDetails) GetDetailsOk() ([]OrdersLine, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *OrderDetails) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []OrdersLine and assigns it to the Details field.
func (o *OrderDetails) SetDetails(v []OrdersLine) {
	o.Details = v
}

func (o OrderDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderDetails) UnmarshalJSON(data []byte) (err error) {
	varOrderDetails := _OrderDetails{}

	err = json.Unmarshal(data, &varOrderDetails)

	if err != nil {
		return err
	}

	*o = OrderDetails(varOrderDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "details")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderDetails struct {
	value *OrderDetails
	isSet bool
}

func (v NullableOrderDetails) Get() *OrderDetails {
	return v.value
}

func (v *NullableOrderDetails) Set(val *OrderDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDetails(val *OrderDetails) *NullableOrderDetails {
	return &NullableOrderDetails{value: val, isSet: true}
}

func (v NullableOrderDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
