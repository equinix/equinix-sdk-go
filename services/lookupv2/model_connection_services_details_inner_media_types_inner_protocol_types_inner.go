/*
Lookup

Based on a user's permission, a user may view their locations, provider and patch panel in their organization. These locations can be filtered by permission code, account number, cage and cabinet details to get both A Side and Z side IBX locations and patch panel available ports to place an order

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lookupv2

import (
	"encoding/json"
)

// checks if the ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner{}

// ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner struct for ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner
type ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner struct {
	Name                 *ProtocolTypes   `json:"name,omitempty"`
	ConnectorTypes       []ConnectorTypes `json:"connectorTypes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner

// NewConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner instantiates a new ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner() *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner {
	this := ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner{}
	return &this
}

// NewConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInnerWithDefaults instantiates a new ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInnerWithDefaults() *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner {
	this := ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) GetName() ProtocolTypes {
	if o == nil || IsNil(o.Name) {
		var ret ProtocolTypes
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) GetNameOk() (*ProtocolTypes, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given ProtocolTypes and assigns it to the Name field.
func (o *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) SetName(v ProtocolTypes) {
	o.Name = &v
}

// GetConnectorTypes returns the ConnectorTypes field value if set, zero value otherwise.
func (o *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) GetConnectorTypes() []ConnectorTypes {
	if o == nil || IsNil(o.ConnectorTypes) {
		var ret []ConnectorTypes
		return ret
	}
	return o.ConnectorTypes
}

// GetConnectorTypesOk returns a tuple with the ConnectorTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) GetConnectorTypesOk() ([]ConnectorTypes, bool) {
	if o == nil || IsNil(o.ConnectorTypes) {
		return nil, false
	}
	return o.ConnectorTypes, true
}

// HasConnectorTypes returns a boolean if a field has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) HasConnectorTypes() bool {
	if o != nil && !IsNil(o.ConnectorTypes) {
		return true
	}

	return false
}

// SetConnectorTypes gets a reference to the given []ConnectorTypes and assigns it to the ConnectorTypes field.
func (o *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) SetConnectorTypes(v []ConnectorTypes) {
	o.ConnectorTypes = v
}

func (o ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ConnectorTypes) {
		toSerialize["connectorTypes"] = o.ConnectorTypes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) UnmarshalJSON(data []byte) (err error) {
	varConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner := _ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner{}

	err = json.Unmarshal(data, &varConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner)

	if err != nil {
		return err
	}

	*o = ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner(varConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "connectorTypes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner struct {
	value *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner
	isSet bool
}

func (v NullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) Get() *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner {
	return v.value
}

func (v *NullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) Set(val *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner(val *ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) *NullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner {
	return &NullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner{value: val, isSet: true}
}

func (v NullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
