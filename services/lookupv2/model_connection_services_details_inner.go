/*
Lookup

Based on a user's permission, a user may view their locations, provider and patch panel in their organization. These locations can be filtered by permission code, account number, cage and cabinet details to get both A Side and Z side IBX locations and patch panel available ports to place an order

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lookupv2

import (
	"encoding/json"
)

// checks if the ConnectionServicesDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionServicesDetailsInner{}

// ConnectionServicesDetailsInner struct for ConnectionServicesDetailsInner
type ConnectionServicesDetailsInner struct {
	Name                 *ConnectionServices                             `json:"name,omitempty"`
	MediaTypes           []ConnectionServicesDetailsInnerMediaTypesInner `json:"mediaTypes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConnectionServicesDetailsInner ConnectionServicesDetailsInner

// NewConnectionServicesDetailsInner instantiates a new ConnectionServicesDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServicesDetailsInner() *ConnectionServicesDetailsInner {
	this := ConnectionServicesDetailsInner{}
	return &this
}

// NewConnectionServicesDetailsInnerWithDefaults instantiates a new ConnectionServicesDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServicesDetailsInnerWithDefaults() *ConnectionServicesDetailsInner {
	this := ConnectionServicesDetailsInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnectionServicesDetailsInner) GetName() ConnectionServices {
	if o == nil || IsNil(o.Name) {
		var ret ConnectionServices
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServicesDetailsInner) GetNameOk() (*ConnectionServices, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnectionServicesDetailsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given ConnectionServices and assigns it to the Name field.
func (o *ConnectionServicesDetailsInner) SetName(v ConnectionServices) {
	o.Name = &v
}

// GetMediaTypes returns the MediaTypes field value if set, zero value otherwise.
func (o *ConnectionServicesDetailsInner) GetMediaTypes() []ConnectionServicesDetailsInnerMediaTypesInner {
	if o == nil || IsNil(o.MediaTypes) {
		var ret []ConnectionServicesDetailsInnerMediaTypesInner
		return ret
	}
	return o.MediaTypes
}

// GetMediaTypesOk returns a tuple with the MediaTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServicesDetailsInner) GetMediaTypesOk() ([]ConnectionServicesDetailsInnerMediaTypesInner, bool) {
	if o == nil || IsNil(o.MediaTypes) {
		return nil, false
	}
	return o.MediaTypes, true
}

// HasMediaTypes returns a boolean if a field has been set.
func (o *ConnectionServicesDetailsInner) HasMediaTypes() bool {
	if o != nil && !IsNil(o.MediaTypes) {
		return true
	}

	return false
}

// SetMediaTypes gets a reference to the given []ConnectionServicesDetailsInnerMediaTypesInner and assigns it to the MediaTypes field.
func (o *ConnectionServicesDetailsInner) SetMediaTypes(v []ConnectionServicesDetailsInnerMediaTypesInner) {
	o.MediaTypes = v
}

func (o ConnectionServicesDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionServicesDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.MediaTypes) {
		toSerialize["mediaTypes"] = o.MediaTypes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectionServicesDetailsInner) UnmarshalJSON(data []byte) (err error) {
	varConnectionServicesDetailsInner := _ConnectionServicesDetailsInner{}

	err = json.Unmarshal(data, &varConnectionServicesDetailsInner)

	if err != nil {
		return err
	}

	*o = ConnectionServicesDetailsInner(varConnectionServicesDetailsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "mediaTypes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectionServicesDetailsInner struct {
	value *ConnectionServicesDetailsInner
	isSet bool
}

func (v NullableConnectionServicesDetailsInner) Get() *ConnectionServicesDetailsInner {
	return v.value
}

func (v *NullableConnectionServicesDetailsInner) Set(val *ConnectionServicesDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServicesDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServicesDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServicesDetailsInner(val *ConnectionServicesDetailsInner) *NullableConnectionServicesDetailsInner {
	return &NullableConnectionServicesDetailsInner{value: val, isSet: true}
}

func (v NullableConnectionServicesDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServicesDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
