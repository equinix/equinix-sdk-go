/*
Lookup

Based on a user's permission, a user may view their locations, provider and patch panel in their organization. These locations can be filtered by permission code, account number, cage and cabinet details to get both A Side and Z side IBX locations and patch panel available ports to place an order

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lookupv2

import (
	"encoding/json"
)

// checks if the ConnectionServicesDetailsInnerMediaTypesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionServicesDetailsInnerMediaTypesInner{}

// ConnectionServicesDetailsInnerMediaTypesInner struct for ConnectionServicesDetailsInnerMediaTypesInner
type ConnectionServicesDetailsInnerMediaTypesInner struct {
	Name          *MediaTypes                                                       `json:"name,omitempty"`
	ProtocolTypes []ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner `json:"protocolTypes,omitempty"`
	// Intra-Faciltiy Cable (IFC) circuit count options available for the respective connection service. E.g. If the 'circuitCount' is empty, it means there are no available IFC circuits. If '3,6' appears in the circuit count, it means that the IFC circuits options available are 3 circuits and 6 circuits.
	CircuitCounts        []int32 `json:"circuitCounts,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConnectionServicesDetailsInnerMediaTypesInner ConnectionServicesDetailsInnerMediaTypesInner

// NewConnectionServicesDetailsInnerMediaTypesInner instantiates a new ConnectionServicesDetailsInnerMediaTypesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionServicesDetailsInnerMediaTypesInner() *ConnectionServicesDetailsInnerMediaTypesInner {
	this := ConnectionServicesDetailsInnerMediaTypesInner{}
	return &this
}

// NewConnectionServicesDetailsInnerMediaTypesInnerWithDefaults instantiates a new ConnectionServicesDetailsInnerMediaTypesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionServicesDetailsInnerMediaTypesInnerWithDefaults() *ConnectionServicesDetailsInnerMediaTypesInner {
	this := ConnectionServicesDetailsInnerMediaTypesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) GetName() MediaTypes {
	if o == nil || IsNil(o.Name) {
		var ret MediaTypes
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) GetNameOk() (*MediaTypes, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given MediaTypes and assigns it to the Name field.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) SetName(v MediaTypes) {
	o.Name = &v
}

// GetProtocolTypes returns the ProtocolTypes field value if set, zero value otherwise.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) GetProtocolTypes() []ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner {
	if o == nil || IsNil(o.ProtocolTypes) {
		var ret []ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner
		return ret
	}
	return o.ProtocolTypes
}

// GetProtocolTypesOk returns a tuple with the ProtocolTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) GetProtocolTypesOk() ([]ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner, bool) {
	if o == nil || IsNil(o.ProtocolTypes) {
		return nil, false
	}
	return o.ProtocolTypes, true
}

// HasProtocolTypes returns a boolean if a field has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) HasProtocolTypes() bool {
	if o != nil && !IsNil(o.ProtocolTypes) {
		return true
	}

	return false
}

// SetProtocolTypes gets a reference to the given []ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner and assigns it to the ProtocolTypes field.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) SetProtocolTypes(v []ConnectionServicesDetailsInnerMediaTypesInnerProtocolTypesInner) {
	o.ProtocolTypes = v
}

// GetCircuitCounts returns the CircuitCounts field value if set, zero value otherwise.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) GetCircuitCounts() []int32 {
	if o == nil || IsNil(o.CircuitCounts) {
		var ret []int32
		return ret
	}
	return o.CircuitCounts
}

// GetCircuitCountsOk returns a tuple with the CircuitCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) GetCircuitCountsOk() ([]int32, bool) {
	if o == nil || IsNil(o.CircuitCounts) {
		return nil, false
	}
	return o.CircuitCounts, true
}

// HasCircuitCounts returns a boolean if a field has been set.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) HasCircuitCounts() bool {
	if o != nil && !IsNil(o.CircuitCounts) {
		return true
	}

	return false
}

// SetCircuitCounts gets a reference to the given []int32 and assigns it to the CircuitCounts field.
func (o *ConnectionServicesDetailsInnerMediaTypesInner) SetCircuitCounts(v []int32) {
	o.CircuitCounts = v
}

func (o ConnectionServicesDetailsInnerMediaTypesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionServicesDetailsInnerMediaTypesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProtocolTypes) {
		toSerialize["protocolTypes"] = o.ProtocolTypes
	}
	if !IsNil(o.CircuitCounts) {
		toSerialize["circuitCounts"] = o.CircuitCounts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectionServicesDetailsInnerMediaTypesInner) UnmarshalJSON(data []byte) (err error) {
	varConnectionServicesDetailsInnerMediaTypesInner := _ConnectionServicesDetailsInnerMediaTypesInner{}

	err = json.Unmarshal(data, &varConnectionServicesDetailsInnerMediaTypesInner)

	if err != nil {
		return err
	}

	*o = ConnectionServicesDetailsInnerMediaTypesInner(varConnectionServicesDetailsInnerMediaTypesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "protocolTypes")
		delete(additionalProperties, "circuitCounts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectionServicesDetailsInnerMediaTypesInner struct {
	value *ConnectionServicesDetailsInnerMediaTypesInner
	isSet bool
}

func (v NullableConnectionServicesDetailsInnerMediaTypesInner) Get() *ConnectionServicesDetailsInnerMediaTypesInner {
	return v.value
}

func (v *NullableConnectionServicesDetailsInnerMediaTypesInner) Set(val *ConnectionServicesDetailsInnerMediaTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionServicesDetailsInnerMediaTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionServicesDetailsInnerMediaTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionServicesDetailsInnerMediaTypesInner(val *ConnectionServicesDetailsInnerMediaTypesInner) *NullableConnectionServicesDetailsInnerMediaTypesInner {
	return &NullableConnectionServicesDetailsInnerMediaTypesInner{value: val, isSet: true}
}

func (v NullableConnectionServicesDetailsInnerMediaTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionServicesDetailsInnerMediaTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
