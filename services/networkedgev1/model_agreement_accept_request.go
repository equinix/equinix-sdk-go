/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the AgreementAcceptRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgreementAcceptRequest{}

// AgreementAcceptRequest struct for AgreementAcceptRequest
type AgreementAcceptRequest struct {
	AccountNumber *string `json:"accountNumber,omitempty"`
	// The version number of the agreement
	ApttusId             *string `json:"apttusId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AgreementAcceptRequest AgreementAcceptRequest

// NewAgreementAcceptRequest instantiates a new AgreementAcceptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgreementAcceptRequest() *AgreementAcceptRequest {
	this := AgreementAcceptRequest{}
	return &this
}

// NewAgreementAcceptRequestWithDefaults instantiates a new AgreementAcceptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgreementAcceptRequestWithDefaults() *AgreementAcceptRequest {
	this := AgreementAcceptRequest{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *AgreementAcceptRequest) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementAcceptRequest) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *AgreementAcceptRequest) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *AgreementAcceptRequest) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetApttusId returns the ApttusId field value if set, zero value otherwise.
func (o *AgreementAcceptRequest) GetApttusId() string {
	if o == nil || IsNil(o.ApttusId) {
		var ret string
		return ret
	}
	return *o.ApttusId
}

// GetApttusIdOk returns a tuple with the ApttusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgreementAcceptRequest) GetApttusIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApttusId) {
		return nil, false
	}
	return o.ApttusId, true
}

// HasApttusId returns a boolean if a field has been set.
func (o *AgreementAcceptRequest) HasApttusId() bool {
	if o != nil && !IsNil(o.ApttusId) {
		return true
	}

	return false
}

// SetApttusId gets a reference to the given string and assigns it to the ApttusId field.
func (o *AgreementAcceptRequest) SetApttusId(v string) {
	o.ApttusId = &v
}

func (o AgreementAcceptRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgreementAcceptRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.ApttusId) {
		toSerialize["apttusId"] = o.ApttusId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgreementAcceptRequest) UnmarshalJSON(data []byte) (err error) {
	varAgreementAcceptRequest := _AgreementAcceptRequest{}

	err = json.Unmarshal(data, &varAgreementAcceptRequest)

	if err != nil {
		return err
	}

	*o = AgreementAcceptRequest(varAgreementAcceptRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "apttusId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgreementAcceptRequest struct {
	value *AgreementAcceptRequest
	isSet bool
}

func (v NullableAgreementAcceptRequest) Get() *AgreementAcceptRequest {
	return v.value
}

func (v *NullableAgreementAcceptRequest) Set(val *AgreementAcceptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAgreementAcceptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAgreementAcceptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgreementAcceptRequest(val *AgreementAcceptRequest) *NullableAgreementAcceptRequest {
	return &NullableAgreementAcceptRequest{value: val, isSet: true}
}

func (v NullableAgreementAcceptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgreementAcceptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
