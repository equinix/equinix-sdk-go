/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the ACLTemplateDetailsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ACLTemplateDetailsResponse{}

// ACLTemplateDetailsResponse struct for ACLTemplateDetailsResponse
type ACLTemplateDetailsResponse struct {
	// The name of the ACL template.
	Name *string `json:"name,omitempty"`
	// The unique Id of the ACL template.
	Uuid *string `json:"uuid,omitempty"`
	// The description of the ACL template.
	Description *string `json:"description,omitempty"`
	// An array of inbound rules
	InboundRules []InboundRules `json:"inboundRules,omitempty"`
	// The array of devices associated with this ACL template
	VirtualDeviceDetails []VirtualDeviceACLDetails `json:"virtualDeviceDetails,omitempty"`
	// Created by
	CreatedBy *string `json:"createdBy,omitempty"`
	// Created date
	CreatedDate          *string `json:"createdDate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ACLTemplateDetailsResponse ACLTemplateDetailsResponse

// NewACLTemplateDetailsResponse instantiates a new ACLTemplateDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewACLTemplateDetailsResponse() *ACLTemplateDetailsResponse {
	this := ACLTemplateDetailsResponse{}
	return &this
}

// NewACLTemplateDetailsResponseWithDefaults instantiates a new ACLTemplateDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewACLTemplateDetailsResponseWithDefaults() *ACLTemplateDetailsResponse {
	this := ACLTemplateDetailsResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ACLTemplateDetailsResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTemplateDetailsResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ACLTemplateDetailsResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ACLTemplateDetailsResponse) SetName(v string) {
	o.Name = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ACLTemplateDetailsResponse) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTemplateDetailsResponse) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ACLTemplateDetailsResponse) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ACLTemplateDetailsResponse) SetUuid(v string) {
	o.Uuid = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ACLTemplateDetailsResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTemplateDetailsResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ACLTemplateDetailsResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ACLTemplateDetailsResponse) SetDescription(v string) {
	o.Description = &v
}

// GetInboundRules returns the InboundRules field value if set, zero value otherwise.
func (o *ACLTemplateDetailsResponse) GetInboundRules() []InboundRules {
	if o == nil || IsNil(o.InboundRules) {
		var ret []InboundRules
		return ret
	}
	return o.InboundRules
}

// GetInboundRulesOk returns a tuple with the InboundRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTemplateDetailsResponse) GetInboundRulesOk() ([]InboundRules, bool) {
	if o == nil || IsNil(o.InboundRules) {
		return nil, false
	}
	return o.InboundRules, true
}

// HasInboundRules returns a boolean if a field has been set.
func (o *ACLTemplateDetailsResponse) HasInboundRules() bool {
	if o != nil && !IsNil(o.InboundRules) {
		return true
	}

	return false
}

// SetInboundRules gets a reference to the given []InboundRules and assigns it to the InboundRules field.
func (o *ACLTemplateDetailsResponse) SetInboundRules(v []InboundRules) {
	o.InboundRules = v
}

// GetVirtualDeviceDetails returns the VirtualDeviceDetails field value if set, zero value otherwise.
func (o *ACLTemplateDetailsResponse) GetVirtualDeviceDetails() []VirtualDeviceACLDetails {
	if o == nil || IsNil(o.VirtualDeviceDetails) {
		var ret []VirtualDeviceACLDetails
		return ret
	}
	return o.VirtualDeviceDetails
}

// GetVirtualDeviceDetailsOk returns a tuple with the VirtualDeviceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTemplateDetailsResponse) GetVirtualDeviceDetailsOk() ([]VirtualDeviceACLDetails, bool) {
	if o == nil || IsNil(o.VirtualDeviceDetails) {
		return nil, false
	}
	return o.VirtualDeviceDetails, true
}

// HasVirtualDeviceDetails returns a boolean if a field has been set.
func (o *ACLTemplateDetailsResponse) HasVirtualDeviceDetails() bool {
	if o != nil && !IsNil(o.VirtualDeviceDetails) {
		return true
	}

	return false
}

// SetVirtualDeviceDetails gets a reference to the given []VirtualDeviceACLDetails and assigns it to the VirtualDeviceDetails field.
func (o *ACLTemplateDetailsResponse) SetVirtualDeviceDetails(v []VirtualDeviceACLDetails) {
	o.VirtualDeviceDetails = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ACLTemplateDetailsResponse) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTemplateDetailsResponse) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ACLTemplateDetailsResponse) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *ACLTemplateDetailsResponse) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *ACLTemplateDetailsResponse) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTemplateDetailsResponse) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ACLTemplateDetailsResponse) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *ACLTemplateDetailsResponse) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

func (o ACLTemplateDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ACLTemplateDetailsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InboundRules) {
		toSerialize["inboundRules"] = o.InboundRules
	}
	if !IsNil(o.VirtualDeviceDetails) {
		toSerialize["virtualDeviceDetails"] = o.VirtualDeviceDetails
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ACLTemplateDetailsResponse) UnmarshalJSON(data []byte) (err error) {
	varACLTemplateDetailsResponse := _ACLTemplateDetailsResponse{}

	err = json.Unmarshal(data, &varACLTemplateDetailsResponse)

	if err != nil {
		return err
	}

	*o = ACLTemplateDetailsResponse(varACLTemplateDetailsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "description")
		delete(additionalProperties, "inboundRules")
		delete(additionalProperties, "virtualDeviceDetails")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "createdDate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableACLTemplateDetailsResponse struct {
	value *ACLTemplateDetailsResponse
	isSet bool
}

func (v NullableACLTemplateDetailsResponse) Get() *ACLTemplateDetailsResponse {
	return v.value
}

func (v *NullableACLTemplateDetailsResponse) Set(val *ACLTemplateDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableACLTemplateDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableACLTemplateDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableACLTemplateDetailsResponse(val *ACLTemplateDetailsResponse) *NullableACLTemplateDetailsResponse {
	return &NullableACLTemplateDetailsResponse{value: val, isSet: true}
}

func (v NullableACLTemplateDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableACLTemplateDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
