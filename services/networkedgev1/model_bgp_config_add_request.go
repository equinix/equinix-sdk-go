/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the BgpConfigAddRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpConfigAddRequest{}

// BgpConfigAddRequest struct for BgpConfigAddRequest
type BgpConfigAddRequest struct {
	// Provide a key value that you can use later to authenticate.
	AuthenticationKey *string `json:"authenticationKey,omitempty"`
	// The unique Id of a connection between the virtual device and the cloud service provider
	ConnectionUuid *string `json:"connectionUuid,omitempty"`
	// Local ASN (autonomous system network). This is the ASN of the virtual device.
	LocalAsn *int64 `json:"localAsn,omitempty"`
	// Local IP Address. This is the IP address of the virtual device in CIDR format.
	LocalIpAddress *string `json:"localIpAddress,omitempty"`
	// Remote ASN (autonomous system network). This is the ASN of the cloud service provider.
	RemoteAsn *int64 `json:"remoteAsn,omitempty"`
	// Remote IP Address. This is the IP address of the cloud service provider.
	RemoteIpAddress      *string `json:"remoteIpAddress,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpConfigAddRequest BgpConfigAddRequest

// NewBgpConfigAddRequest instantiates a new BgpConfigAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpConfigAddRequest() *BgpConfigAddRequest {
	this := BgpConfigAddRequest{}
	return &this
}

// NewBgpConfigAddRequestWithDefaults instantiates a new BgpConfigAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpConfigAddRequestWithDefaults() *BgpConfigAddRequest {
	this := BgpConfigAddRequest{}
	return &this
}

// GetAuthenticationKey returns the AuthenticationKey field value if set, zero value otherwise.
func (o *BgpConfigAddRequest) GetAuthenticationKey() string {
	if o == nil || IsNil(o.AuthenticationKey) {
		var ret string
		return ret
	}
	return *o.AuthenticationKey
}

// GetAuthenticationKeyOk returns a tuple with the AuthenticationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConfigAddRequest) GetAuthenticationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationKey) {
		return nil, false
	}
	return o.AuthenticationKey, true
}

// HasAuthenticationKey returns a boolean if a field has been set.
func (o *BgpConfigAddRequest) HasAuthenticationKey() bool {
	if o != nil && !IsNil(o.AuthenticationKey) {
		return true
	}

	return false
}

// SetAuthenticationKey gets a reference to the given string and assigns it to the AuthenticationKey field.
func (o *BgpConfigAddRequest) SetAuthenticationKey(v string) {
	o.AuthenticationKey = &v
}

// GetConnectionUuid returns the ConnectionUuid field value if set, zero value otherwise.
func (o *BgpConfigAddRequest) GetConnectionUuid() string {
	if o == nil || IsNil(o.ConnectionUuid) {
		var ret string
		return ret
	}
	return *o.ConnectionUuid
}

// GetConnectionUuidOk returns a tuple with the ConnectionUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConfigAddRequest) GetConnectionUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionUuid) {
		return nil, false
	}
	return o.ConnectionUuid, true
}

// HasConnectionUuid returns a boolean if a field has been set.
func (o *BgpConfigAddRequest) HasConnectionUuid() bool {
	if o != nil && !IsNil(o.ConnectionUuid) {
		return true
	}

	return false
}

// SetConnectionUuid gets a reference to the given string and assigns it to the ConnectionUuid field.
func (o *BgpConfigAddRequest) SetConnectionUuid(v string) {
	o.ConnectionUuid = &v
}

// GetLocalAsn returns the LocalAsn field value if set, zero value otherwise.
func (o *BgpConfigAddRequest) GetLocalAsn() int64 {
	if o == nil || IsNil(o.LocalAsn) {
		var ret int64
		return ret
	}
	return *o.LocalAsn
}

// GetLocalAsnOk returns a tuple with the LocalAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConfigAddRequest) GetLocalAsnOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalAsn) {
		return nil, false
	}
	return o.LocalAsn, true
}

// HasLocalAsn returns a boolean if a field has been set.
func (o *BgpConfigAddRequest) HasLocalAsn() bool {
	if o != nil && !IsNil(o.LocalAsn) {
		return true
	}

	return false
}

// SetLocalAsn gets a reference to the given int64 and assigns it to the LocalAsn field.
func (o *BgpConfigAddRequest) SetLocalAsn(v int64) {
	o.LocalAsn = &v
}

// GetLocalIpAddress returns the LocalIpAddress field value if set, zero value otherwise.
func (o *BgpConfigAddRequest) GetLocalIpAddress() string {
	if o == nil || IsNil(o.LocalIpAddress) {
		var ret string
		return ret
	}
	return *o.LocalIpAddress
}

// GetLocalIpAddressOk returns a tuple with the LocalIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConfigAddRequest) GetLocalIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIpAddress) {
		return nil, false
	}
	return o.LocalIpAddress, true
}

// HasLocalIpAddress returns a boolean if a field has been set.
func (o *BgpConfigAddRequest) HasLocalIpAddress() bool {
	if o != nil && !IsNil(o.LocalIpAddress) {
		return true
	}

	return false
}

// SetLocalIpAddress gets a reference to the given string and assigns it to the LocalIpAddress field.
func (o *BgpConfigAddRequest) SetLocalIpAddress(v string) {
	o.LocalIpAddress = &v
}

// GetRemoteAsn returns the RemoteAsn field value if set, zero value otherwise.
func (o *BgpConfigAddRequest) GetRemoteAsn() int64 {
	if o == nil || IsNil(o.RemoteAsn) {
		var ret int64
		return ret
	}
	return *o.RemoteAsn
}

// GetRemoteAsnOk returns a tuple with the RemoteAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConfigAddRequest) GetRemoteAsnOk() (*int64, bool) {
	if o == nil || IsNil(o.RemoteAsn) {
		return nil, false
	}
	return o.RemoteAsn, true
}

// HasRemoteAsn returns a boolean if a field has been set.
func (o *BgpConfigAddRequest) HasRemoteAsn() bool {
	if o != nil && !IsNil(o.RemoteAsn) {
		return true
	}

	return false
}

// SetRemoteAsn gets a reference to the given int64 and assigns it to the RemoteAsn field.
func (o *BgpConfigAddRequest) SetRemoteAsn(v int64) {
	o.RemoteAsn = &v
}

// GetRemoteIpAddress returns the RemoteIpAddress field value if set, zero value otherwise.
func (o *BgpConfigAddRequest) GetRemoteIpAddress() string {
	if o == nil || IsNil(o.RemoteIpAddress) {
		var ret string
		return ret
	}
	return *o.RemoteIpAddress
}

// GetRemoteIpAddressOk returns a tuple with the RemoteIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConfigAddRequest) GetRemoteIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIpAddress) {
		return nil, false
	}
	return o.RemoteIpAddress, true
}

// HasRemoteIpAddress returns a boolean if a field has been set.
func (o *BgpConfigAddRequest) HasRemoteIpAddress() bool {
	if o != nil && !IsNil(o.RemoteIpAddress) {
		return true
	}

	return false
}

// SetRemoteIpAddress gets a reference to the given string and assigns it to the RemoteIpAddress field.
func (o *BgpConfigAddRequest) SetRemoteIpAddress(v string) {
	o.RemoteIpAddress = &v
}

func (o BgpConfigAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpConfigAddRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthenticationKey) {
		toSerialize["authenticationKey"] = o.AuthenticationKey
	}
	if !IsNil(o.ConnectionUuid) {
		toSerialize["connectionUuid"] = o.ConnectionUuid
	}
	if !IsNil(o.LocalAsn) {
		toSerialize["localAsn"] = o.LocalAsn
	}
	if !IsNil(o.LocalIpAddress) {
		toSerialize["localIpAddress"] = o.LocalIpAddress
	}
	if !IsNil(o.RemoteAsn) {
		toSerialize["remoteAsn"] = o.RemoteAsn
	}
	if !IsNil(o.RemoteIpAddress) {
		toSerialize["remoteIpAddress"] = o.RemoteIpAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpConfigAddRequest) UnmarshalJSON(data []byte) (err error) {
	varBgpConfigAddRequest := _BgpConfigAddRequest{}

	err = json.Unmarshal(data, &varBgpConfigAddRequest)

	if err != nil {
		return err
	}

	*o = BgpConfigAddRequest(varBgpConfigAddRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authenticationKey")
		delete(additionalProperties, "connectionUuid")
		delete(additionalProperties, "localAsn")
		delete(additionalProperties, "localIpAddress")
		delete(additionalProperties, "remoteAsn")
		delete(additionalProperties, "remoteIpAddress")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpConfigAddRequest struct {
	value *BgpConfigAddRequest
	isSet bool
}

func (v NullableBgpConfigAddRequest) Get() *BgpConfigAddRequest {
	return v.value
}

func (v *NullableBgpConfigAddRequest) Set(val *BgpConfigAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpConfigAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpConfigAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpConfigAddRequest(val *BgpConfigAddRequest) *NullableBgpConfigAddRequest {
	return &NullableBgpConfigAddRequest{value: val, isSet: true}
}

func (v NullableBgpConfigAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpConfigAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
