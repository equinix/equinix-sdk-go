/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the VirtualDeviceTypeDeviceManagementTypes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualDeviceTypeDeviceManagementTypes{}

// VirtualDeviceTypeDeviceManagementTypes struct for VirtualDeviceTypeDeviceManagementTypes
type VirtualDeviceTypeDeviceManagementTypes struct {
	EQUINIX_CONFIGURED   *EquinixConfiguredConfig `json:"EQUINIX-CONFIGURED,omitempty"`
	SELF_CONFIGURED      *SelfConfiguredConfig    `json:"SELF-CONFIGURED,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VirtualDeviceTypeDeviceManagementTypes VirtualDeviceTypeDeviceManagementTypes

// NewVirtualDeviceTypeDeviceManagementTypes instantiates a new VirtualDeviceTypeDeviceManagementTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualDeviceTypeDeviceManagementTypes() *VirtualDeviceTypeDeviceManagementTypes {
	this := VirtualDeviceTypeDeviceManagementTypes{}
	return &this
}

// NewVirtualDeviceTypeDeviceManagementTypesWithDefaults instantiates a new VirtualDeviceTypeDeviceManagementTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualDeviceTypeDeviceManagementTypesWithDefaults() *VirtualDeviceTypeDeviceManagementTypes {
	this := VirtualDeviceTypeDeviceManagementTypes{}
	return &this
}

// GetEQUINIX_CONFIGURED returns the EQUINIX_CONFIGURED field value if set, zero value otherwise.
func (o *VirtualDeviceTypeDeviceManagementTypes) GetEQUINIX_CONFIGURED() EquinixConfiguredConfig {
	if o == nil || IsNil(o.EQUINIX_CONFIGURED) {
		var ret EquinixConfiguredConfig
		return ret
	}
	return *o.EQUINIX_CONFIGURED
}

// GetEQUINIX_CONFIGUREDOk returns a tuple with the EQUINIX_CONFIGURED field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceTypeDeviceManagementTypes) GetEQUINIX_CONFIGUREDOk() (*EquinixConfiguredConfig, bool) {
	if o == nil || IsNil(o.EQUINIX_CONFIGURED) {
		return nil, false
	}
	return o.EQUINIX_CONFIGURED, true
}

// HasEQUINIX_CONFIGURED returns a boolean if a field has been set.
func (o *VirtualDeviceTypeDeviceManagementTypes) HasEQUINIX_CONFIGURED() bool {
	if o != nil && !IsNil(o.EQUINIX_CONFIGURED) {
		return true
	}

	return false
}

// SetEQUINIX_CONFIGURED gets a reference to the given EquinixConfiguredConfig and assigns it to the EQUINIX_CONFIGURED field.
func (o *VirtualDeviceTypeDeviceManagementTypes) SetEQUINIX_CONFIGURED(v EquinixConfiguredConfig) {
	o.EQUINIX_CONFIGURED = &v
}

// GetSELF_CONFIGURED returns the SELF_CONFIGURED field value if set, zero value otherwise.
func (o *VirtualDeviceTypeDeviceManagementTypes) GetSELF_CONFIGURED() SelfConfiguredConfig {
	if o == nil || IsNil(o.SELF_CONFIGURED) {
		var ret SelfConfiguredConfig
		return ret
	}
	return *o.SELF_CONFIGURED
}

// GetSELF_CONFIGUREDOk returns a tuple with the SELF_CONFIGURED field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceTypeDeviceManagementTypes) GetSELF_CONFIGUREDOk() (*SelfConfiguredConfig, bool) {
	if o == nil || IsNil(o.SELF_CONFIGURED) {
		return nil, false
	}
	return o.SELF_CONFIGURED, true
}

// HasSELF_CONFIGURED returns a boolean if a field has been set.
func (o *VirtualDeviceTypeDeviceManagementTypes) HasSELF_CONFIGURED() bool {
	if o != nil && !IsNil(o.SELF_CONFIGURED) {
		return true
	}

	return false
}

// SetSELF_CONFIGURED gets a reference to the given SelfConfiguredConfig and assigns it to the SELF_CONFIGURED field.
func (o *VirtualDeviceTypeDeviceManagementTypes) SetSELF_CONFIGURED(v SelfConfiguredConfig) {
	o.SELF_CONFIGURED = &v
}

func (o VirtualDeviceTypeDeviceManagementTypes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualDeviceTypeDeviceManagementTypes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EQUINIX_CONFIGURED) {
		toSerialize["EQUINIX-CONFIGURED"] = o.EQUINIX_CONFIGURED
	}
	if !IsNil(o.SELF_CONFIGURED) {
		toSerialize["SELF-CONFIGURED"] = o.SELF_CONFIGURED
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VirtualDeviceTypeDeviceManagementTypes) UnmarshalJSON(data []byte) (err error) {
	varVirtualDeviceTypeDeviceManagementTypes := _VirtualDeviceTypeDeviceManagementTypes{}

	err = json.Unmarshal(data, &varVirtualDeviceTypeDeviceManagementTypes)

	if err != nil {
		return err
	}

	*o = VirtualDeviceTypeDeviceManagementTypes(varVirtualDeviceTypeDeviceManagementTypes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "EQUINIX-CONFIGURED")
		delete(additionalProperties, "SELF-CONFIGURED")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVirtualDeviceTypeDeviceManagementTypes struct {
	value *VirtualDeviceTypeDeviceManagementTypes
	isSet bool
}

func (v NullableVirtualDeviceTypeDeviceManagementTypes) Get() *VirtualDeviceTypeDeviceManagementTypes {
	return v.value
}

func (v *NullableVirtualDeviceTypeDeviceManagementTypes) Set(val *VirtualDeviceTypeDeviceManagementTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualDeviceTypeDeviceManagementTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualDeviceTypeDeviceManagementTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualDeviceTypeDeviceManagementTypes(val *VirtualDeviceTypeDeviceManagementTypes) *NullableVirtualDeviceTypeDeviceManagementTypes {
	return &NullableVirtualDeviceTypeDeviceManagementTypes{value: val, isSet: true}
}

func (v NullableVirtualDeviceTypeDeviceManagementTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualDeviceTypeDeviceManagementTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
