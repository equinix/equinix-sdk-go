/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
	"fmt"
)

// GetVpnsUsingGETStatusListParameterInner the model 'GetVpnsUsingGETStatusListParameterInner'
type GetVpnsUsingGETStatusListParameterInner string

// List of getVpnsUsingGET_statusList_parameter_inner
const (
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_PROVISIONED                  GetVpnsUsingGETStatusListParameterInner = "PROVISIONED"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_PROVISIONING                 GetVpnsUsingGETStatusListParameterInner = "PROVISIONING"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_PROVISIONING_RETRYING        GetVpnsUsingGETStatusListParameterInner = "PROVISIONING_RETRYING"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_UPDATING                     GetVpnsUsingGETStatusListParameterInner = "UPDATING"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_PROVISIONING_UPDATE_RETRYING GetVpnsUsingGETStatusListParameterInner = "PROVISIONING_UPDATE_RETRYING"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_DEPROVISIONED                GetVpnsUsingGETStatusListParameterInner = "DEPROVISIONED"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_DEPROVISIONING               GetVpnsUsingGETStatusListParameterInner = "DEPROVISIONING"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_DEPROVISIONING_RETRYING      GetVpnsUsingGETStatusListParameterInner = "DEPROVISIONING_RETRYING"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_PROVISIONING_FAILED          GetVpnsUsingGETStatusListParameterInner = "PROVISIONING_FAILED"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_PROVISIONING_UPDATE_FAILED   GetVpnsUsingGETStatusListParameterInner = "PROVISIONING_UPDATE_FAILED"
	GETVPNSUSINGGETSTATUSLISTPARAMETERINNER_DEPROVISIONING_FAILED        GetVpnsUsingGETStatusListParameterInner = "DEPROVISIONING_FAILED"
)

// All allowed values of GetVpnsUsingGETStatusListParameterInner enum
var AllowedGetVpnsUsingGETStatusListParameterInnerEnumValues = []GetVpnsUsingGETStatusListParameterInner{
	"PROVISIONED",
	"PROVISIONING",
	"PROVISIONING_RETRYING",
	"UPDATING",
	"PROVISIONING_UPDATE_RETRYING",
	"DEPROVISIONED",
	"DEPROVISIONING",
	"DEPROVISIONING_RETRYING",
	"PROVISIONING_FAILED",
	"PROVISIONING_UPDATE_FAILED",
	"DEPROVISIONING_FAILED",
}

func (v *GetVpnsUsingGETStatusListParameterInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetVpnsUsingGETStatusListParameterInner(value)
	for _, existing := range AllowedGetVpnsUsingGETStatusListParameterInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetVpnsUsingGETStatusListParameterInner", value)
}

// NewGetVpnsUsingGETStatusListParameterInnerFromValue returns a pointer to a valid GetVpnsUsingGETStatusListParameterInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetVpnsUsingGETStatusListParameterInnerFromValue(v string) (*GetVpnsUsingGETStatusListParameterInner, error) {
	ev := GetVpnsUsingGETStatusListParameterInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetVpnsUsingGETStatusListParameterInner: valid values are %v", v, AllowedGetVpnsUsingGETStatusListParameterInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetVpnsUsingGETStatusListParameterInner) IsValid() bool {
	for _, existing := range AllowedGetVpnsUsingGETStatusListParameterInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to getVpnsUsingGET_statusList_parameter_inner value
func (v GetVpnsUsingGETStatusListParameterInner) Ptr() *GetVpnsUsingGETStatusListParameterInner {
	return &v
}

type NullableGetVpnsUsingGETStatusListParameterInner struct {
	value *GetVpnsUsingGETStatusListParameterInner
	isSet bool
}

func (v NullableGetVpnsUsingGETStatusListParameterInner) Get() *GetVpnsUsingGETStatusListParameterInner {
	return v.value
}

func (v *NullableGetVpnsUsingGETStatusListParameterInner) Set(val *GetVpnsUsingGETStatusListParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVpnsUsingGETStatusListParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVpnsUsingGETStatusListParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVpnsUsingGETStatusListParameterInner(val *GetVpnsUsingGETStatusListParameterInner) *NullableGetVpnsUsingGETStatusListParameterInner {
	return &NullableGetVpnsUsingGETStatusListParameterInner{value: val, isSet: true}
}

func (v NullableGetVpnsUsingGETStatusListParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVpnsUsingGETStatusListParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
