/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the GetServProfServicesRespContentfeatures type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetServProfServicesRespContentfeatures{}

// GetServProfServicesRespContentfeatures struct for GetServProfServicesRespContentfeatures
type GetServProfServicesRespContentfeatures struct {
	CloudReach           *bool `json:"cloudReach,omitempty"`
	TestProfile          *bool `json:"testProfile,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetServProfServicesRespContentfeatures GetServProfServicesRespContentfeatures

// NewGetServProfServicesRespContentfeatures instantiates a new GetServProfServicesRespContentfeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServProfServicesRespContentfeatures() *GetServProfServicesRespContentfeatures {
	this := GetServProfServicesRespContentfeatures{}
	return &this
}

// NewGetServProfServicesRespContentfeaturesWithDefaults instantiates a new GetServProfServicesRespContentfeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServProfServicesRespContentfeaturesWithDefaults() *GetServProfServicesRespContentfeatures {
	this := GetServProfServicesRespContentfeatures{}
	return &this
}

// GetCloudReach returns the CloudReach field value if set, zero value otherwise.
func (o *GetServProfServicesRespContentfeatures) GetCloudReach() bool {
	if o == nil || IsNil(o.CloudReach) {
		var ret bool
		return ret
	}
	return *o.CloudReach
}

// GetCloudReachOk returns a tuple with the CloudReach field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContentfeatures) GetCloudReachOk() (*bool, bool) {
	if o == nil || IsNil(o.CloudReach) {
		return nil, false
	}
	return o.CloudReach, true
}

// HasCloudReach returns a boolean if a field has been set.
func (o *GetServProfServicesRespContentfeatures) HasCloudReach() bool {
	if o != nil && !IsNil(o.CloudReach) {
		return true
	}

	return false
}

// SetCloudReach gets a reference to the given bool and assigns it to the CloudReach field.
func (o *GetServProfServicesRespContentfeatures) SetCloudReach(v bool) {
	o.CloudReach = &v
}

// GetTestProfile returns the TestProfile field value if set, zero value otherwise.
func (o *GetServProfServicesRespContentfeatures) GetTestProfile() bool {
	if o == nil || IsNil(o.TestProfile) {
		var ret bool
		return ret
	}
	return *o.TestProfile
}

// GetTestProfileOk returns a tuple with the TestProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContentfeatures) GetTestProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.TestProfile) {
		return nil, false
	}
	return o.TestProfile, true
}

// HasTestProfile returns a boolean if a field has been set.
func (o *GetServProfServicesRespContentfeatures) HasTestProfile() bool {
	if o != nil && !IsNil(o.TestProfile) {
		return true
	}

	return false
}

// SetTestProfile gets a reference to the given bool and assigns it to the TestProfile field.
func (o *GetServProfServicesRespContentfeatures) SetTestProfile(v bool) {
	o.TestProfile = &v
}

func (o GetServProfServicesRespContentfeatures) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetServProfServicesRespContentfeatures) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudReach) {
		toSerialize["cloudReach"] = o.CloudReach
	}
	if !IsNil(o.TestProfile) {
		toSerialize["testProfile"] = o.TestProfile
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetServProfServicesRespContentfeatures) UnmarshalJSON(data []byte) (err error) {
	varGetServProfServicesRespContentfeatures := _GetServProfServicesRespContentfeatures{}

	err = json.Unmarshal(data, &varGetServProfServicesRespContentfeatures)

	if err != nil {
		return err
	}

	*o = GetServProfServicesRespContentfeatures(varGetServProfServicesRespContentfeatures)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloudReach")
		delete(additionalProperties, "testProfile")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetServProfServicesRespContentfeatures struct {
	value *GetServProfServicesRespContentfeatures
	isSet bool
}

func (v NullableGetServProfServicesRespContentfeatures) Get() *GetServProfServicesRespContentfeatures {
	return v.value
}

func (v *NullableGetServProfServicesRespContentfeatures) Set(val *GetServProfServicesRespContentfeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServProfServicesRespContentfeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServProfServicesRespContentfeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServProfServicesRespContentfeatures(val *GetServProfServicesRespContentfeatures) *NullableGetServProfServicesRespContentfeatures {
	return &NullableGetServProfServicesRespContentfeatures{value: val, isSet: true}
}

func (v NullableGetServProfServicesRespContentfeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServProfServicesRespContentfeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
