/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the PostConnectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostConnectionRequest{}

// PostConnectionRequest struct for PostConnectionRequest
type PostConnectionRequest struct {
	PrimaryName                *string  `json:"primaryName,omitempty"`
	VirtualDeviceUUID          *string  `json:"virtualDeviceUUID,omitempty"`
	ProfileUUID                *string  `json:"profileUUID,omitempty"`
	AuthorizationKey           *string  `json:"authorizationKey,omitempty"`
	Speed                      *int32   `json:"speed,omitempty"`
	SpeedUnit                  *string  `json:"speedUnit,omitempty"`
	Notifications              []string `json:"notifications,omitempty"`
	PurchaseOrderNumber        *string  `json:"purchaseOrderNumber,omitempty"`
	SellerMetroCode            *string  `json:"sellerMetroCode,omitempty"`
	InterfaceId                *int32   `json:"interfaceId,omitempty"`
	SecondaryName              *string  `json:"secondaryName,omitempty"`
	NamedTag                   *string  `json:"namedTag,omitempty"`
	SecondaryVirtualDeviceUUID *string  `json:"secondaryVirtualDeviceUUID,omitempty"`
	SecondaryProfileUUID       *string  `json:"secondaryProfileUUID,omitempty"`
	SecondaryAuthorizationKey  *string  `json:"secondaryAuthorizationKey,omitempty"`
	SecondarySellerMetroCode   *string  `json:"secondarySellerMetroCode,omitempty"`
	SecondarySpeed             *int32   `json:"secondarySpeed,omitempty"`
	SecondarySpeedUnit         *string  `json:"secondarySpeedUnit,omitempty"`
	SecondaryNotifications     []string `json:"secondaryNotifications,omitempty"`
	SecondaryInterfaceId       *int32   `json:"secondaryInterfaceId,omitempty"`
	PrimaryZSideVlanCTag       *int32   `json:"primaryZSideVlanCTag,omitempty"`
	SecondaryZSideVlanCTag     *int32   `json:"secondaryZSideVlanCTag,omitempty"`
	PrimaryZSidePortUUID       *string  `json:"primaryZSidePortUUID,omitempty"`
	PrimaryZSideVlanSTag       *int32   `json:"primaryZSideVlanSTag,omitempty"`
	SecondaryZSidePortUUID     *string  `json:"secondaryZSidePortUUID,omitempty"`
	SecondaryZSideVlanSTag     *int32   `json:"secondaryZSideVlanSTag,omitempty"`
	AdditionalProperties       map[string]interface{}
}

type _PostConnectionRequest PostConnectionRequest

// NewPostConnectionRequest instantiates a new PostConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostConnectionRequest() *PostConnectionRequest {
	this := PostConnectionRequest{}
	return &this
}

// NewPostConnectionRequestWithDefaults instantiates a new PostConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostConnectionRequestWithDefaults() *PostConnectionRequest {
	this := PostConnectionRequest{}
	return &this
}

// GetPrimaryName returns the PrimaryName field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetPrimaryName() string {
	if o == nil || IsNil(o.PrimaryName) {
		var ret string
		return ret
	}
	return *o.PrimaryName
}

// GetPrimaryNameOk returns a tuple with the PrimaryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetPrimaryNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryName) {
		return nil, false
	}
	return o.PrimaryName, true
}

// HasPrimaryName returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasPrimaryName() bool {
	if o != nil && !IsNil(o.PrimaryName) {
		return true
	}

	return false
}

// SetPrimaryName gets a reference to the given string and assigns it to the PrimaryName field.
func (o *PostConnectionRequest) SetPrimaryName(v string) {
	o.PrimaryName = &v
}

// GetVirtualDeviceUUID returns the VirtualDeviceUUID field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetVirtualDeviceUUID() string {
	if o == nil || IsNil(o.VirtualDeviceUUID) {
		var ret string
		return ret
	}
	return *o.VirtualDeviceUUID
}

// GetVirtualDeviceUUIDOk returns a tuple with the VirtualDeviceUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetVirtualDeviceUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualDeviceUUID) {
		return nil, false
	}
	return o.VirtualDeviceUUID, true
}

// HasVirtualDeviceUUID returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasVirtualDeviceUUID() bool {
	if o != nil && !IsNil(o.VirtualDeviceUUID) {
		return true
	}

	return false
}

// SetVirtualDeviceUUID gets a reference to the given string and assigns it to the VirtualDeviceUUID field.
func (o *PostConnectionRequest) SetVirtualDeviceUUID(v string) {
	o.VirtualDeviceUUID = &v
}

// GetProfileUUID returns the ProfileUUID field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetProfileUUID() string {
	if o == nil || IsNil(o.ProfileUUID) {
		var ret string
		return ret
	}
	return *o.ProfileUUID
}

// GetProfileUUIDOk returns a tuple with the ProfileUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetProfileUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileUUID) {
		return nil, false
	}
	return o.ProfileUUID, true
}

// HasProfileUUID returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasProfileUUID() bool {
	if o != nil && !IsNil(o.ProfileUUID) {
		return true
	}

	return false
}

// SetProfileUUID gets a reference to the given string and assigns it to the ProfileUUID field.
func (o *PostConnectionRequest) SetProfileUUID(v string) {
	o.ProfileUUID = &v
}

// GetAuthorizationKey returns the AuthorizationKey field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetAuthorizationKey() string {
	if o == nil || IsNil(o.AuthorizationKey) {
		var ret string
		return ret
	}
	return *o.AuthorizationKey
}

// GetAuthorizationKeyOk returns a tuple with the AuthorizationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetAuthorizationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationKey) {
		return nil, false
	}
	return o.AuthorizationKey, true
}

// HasAuthorizationKey returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasAuthorizationKey() bool {
	if o != nil && !IsNil(o.AuthorizationKey) {
		return true
	}

	return false
}

// SetAuthorizationKey gets a reference to the given string and assigns it to the AuthorizationKey field.
func (o *PostConnectionRequest) SetAuthorizationKey(v string) {
	o.AuthorizationKey = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSpeed() int32 {
	if o == nil || IsNil(o.Speed) {
		var ret int32
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSpeedOk() (*int32, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given int32 and assigns it to the Speed field.
func (o *PostConnectionRequest) SetSpeed(v int32) {
	o.Speed = &v
}

// GetSpeedUnit returns the SpeedUnit field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSpeedUnit() string {
	if o == nil || IsNil(o.SpeedUnit) {
		var ret string
		return ret
	}
	return *o.SpeedUnit
}

// GetSpeedUnitOk returns a tuple with the SpeedUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSpeedUnitOk() (*string, bool) {
	if o == nil || IsNil(o.SpeedUnit) {
		return nil, false
	}
	return o.SpeedUnit, true
}

// HasSpeedUnit returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSpeedUnit() bool {
	if o != nil && !IsNil(o.SpeedUnit) {
		return true
	}

	return false
}

// SetSpeedUnit gets a reference to the given string and assigns it to the SpeedUnit field.
func (o *PostConnectionRequest) SetSpeedUnit(v string) {
	o.SpeedUnit = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetNotifications() []string {
	if o == nil || IsNil(o.Notifications) {
		var ret []string
		return ret
	}
	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetNotificationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given []string and assigns it to the Notifications field.
func (o *PostConnectionRequest) SetNotifications(v []string) {
	o.Notifications = v
}

// GetPurchaseOrderNumber returns the PurchaseOrderNumber field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetPurchaseOrderNumber() string {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		var ret string
		return ret
	}
	return *o.PurchaseOrderNumber
}

// GetPurchaseOrderNumberOk returns a tuple with the PurchaseOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetPurchaseOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		return nil, false
	}
	return o.PurchaseOrderNumber, true
}

// HasPurchaseOrderNumber returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasPurchaseOrderNumber() bool {
	if o != nil && !IsNil(o.PurchaseOrderNumber) {
		return true
	}

	return false
}

// SetPurchaseOrderNumber gets a reference to the given string and assigns it to the PurchaseOrderNumber field.
func (o *PostConnectionRequest) SetPurchaseOrderNumber(v string) {
	o.PurchaseOrderNumber = &v
}

// GetSellerMetroCode returns the SellerMetroCode field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSellerMetroCode() string {
	if o == nil || IsNil(o.SellerMetroCode) {
		var ret string
		return ret
	}
	return *o.SellerMetroCode
}

// GetSellerMetroCodeOk returns a tuple with the SellerMetroCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSellerMetroCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SellerMetroCode) {
		return nil, false
	}
	return o.SellerMetroCode, true
}

// HasSellerMetroCode returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSellerMetroCode() bool {
	if o != nil && !IsNil(o.SellerMetroCode) {
		return true
	}

	return false
}

// SetSellerMetroCode gets a reference to the given string and assigns it to the SellerMetroCode field.
func (o *PostConnectionRequest) SetSellerMetroCode(v string) {
	o.SellerMetroCode = &v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetInterfaceId() int32 {
	if o == nil || IsNil(o.InterfaceId) {
		var ret int32
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetInterfaceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InterfaceId) {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasInterfaceId() bool {
	if o != nil && !IsNil(o.InterfaceId) {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given int32 and assigns it to the InterfaceId field.
func (o *PostConnectionRequest) SetInterfaceId(v int32) {
	o.InterfaceId = &v
}

// GetSecondaryName returns the SecondaryName field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondaryName() string {
	if o == nil || IsNil(o.SecondaryName) {
		var ret string
		return ret
	}
	return *o.SecondaryName
}

// GetSecondaryNameOk returns a tuple with the SecondaryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondaryNameOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryName) {
		return nil, false
	}
	return o.SecondaryName, true
}

// HasSecondaryName returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondaryName() bool {
	if o != nil && !IsNil(o.SecondaryName) {
		return true
	}

	return false
}

// SetSecondaryName gets a reference to the given string and assigns it to the SecondaryName field.
func (o *PostConnectionRequest) SetSecondaryName(v string) {
	o.SecondaryName = &v
}

// GetNamedTag returns the NamedTag field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetNamedTag() string {
	if o == nil || IsNil(o.NamedTag) {
		var ret string
		return ret
	}
	return *o.NamedTag
}

// GetNamedTagOk returns a tuple with the NamedTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetNamedTagOk() (*string, bool) {
	if o == nil || IsNil(o.NamedTag) {
		return nil, false
	}
	return o.NamedTag, true
}

// HasNamedTag returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasNamedTag() bool {
	if o != nil && !IsNil(o.NamedTag) {
		return true
	}

	return false
}

// SetNamedTag gets a reference to the given string and assigns it to the NamedTag field.
func (o *PostConnectionRequest) SetNamedTag(v string) {
	o.NamedTag = &v
}

// GetSecondaryVirtualDeviceUUID returns the SecondaryVirtualDeviceUUID field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondaryVirtualDeviceUUID() string {
	if o == nil || IsNil(o.SecondaryVirtualDeviceUUID) {
		var ret string
		return ret
	}
	return *o.SecondaryVirtualDeviceUUID
}

// GetSecondaryVirtualDeviceUUIDOk returns a tuple with the SecondaryVirtualDeviceUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondaryVirtualDeviceUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryVirtualDeviceUUID) {
		return nil, false
	}
	return o.SecondaryVirtualDeviceUUID, true
}

// HasSecondaryVirtualDeviceUUID returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondaryVirtualDeviceUUID() bool {
	if o != nil && !IsNil(o.SecondaryVirtualDeviceUUID) {
		return true
	}

	return false
}

// SetSecondaryVirtualDeviceUUID gets a reference to the given string and assigns it to the SecondaryVirtualDeviceUUID field.
func (o *PostConnectionRequest) SetSecondaryVirtualDeviceUUID(v string) {
	o.SecondaryVirtualDeviceUUID = &v
}

// GetSecondaryProfileUUID returns the SecondaryProfileUUID field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondaryProfileUUID() string {
	if o == nil || IsNil(o.SecondaryProfileUUID) {
		var ret string
		return ret
	}
	return *o.SecondaryProfileUUID
}

// GetSecondaryProfileUUIDOk returns a tuple with the SecondaryProfileUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondaryProfileUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryProfileUUID) {
		return nil, false
	}
	return o.SecondaryProfileUUID, true
}

// HasSecondaryProfileUUID returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondaryProfileUUID() bool {
	if o != nil && !IsNil(o.SecondaryProfileUUID) {
		return true
	}

	return false
}

// SetSecondaryProfileUUID gets a reference to the given string and assigns it to the SecondaryProfileUUID field.
func (o *PostConnectionRequest) SetSecondaryProfileUUID(v string) {
	o.SecondaryProfileUUID = &v
}

// GetSecondaryAuthorizationKey returns the SecondaryAuthorizationKey field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondaryAuthorizationKey() string {
	if o == nil || IsNil(o.SecondaryAuthorizationKey) {
		var ret string
		return ret
	}
	return *o.SecondaryAuthorizationKey
}

// GetSecondaryAuthorizationKeyOk returns a tuple with the SecondaryAuthorizationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondaryAuthorizationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryAuthorizationKey) {
		return nil, false
	}
	return o.SecondaryAuthorizationKey, true
}

// HasSecondaryAuthorizationKey returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondaryAuthorizationKey() bool {
	if o != nil && !IsNil(o.SecondaryAuthorizationKey) {
		return true
	}

	return false
}

// SetSecondaryAuthorizationKey gets a reference to the given string and assigns it to the SecondaryAuthorizationKey field.
func (o *PostConnectionRequest) SetSecondaryAuthorizationKey(v string) {
	o.SecondaryAuthorizationKey = &v
}

// GetSecondarySellerMetroCode returns the SecondarySellerMetroCode field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondarySellerMetroCode() string {
	if o == nil || IsNil(o.SecondarySellerMetroCode) {
		var ret string
		return ret
	}
	return *o.SecondarySellerMetroCode
}

// GetSecondarySellerMetroCodeOk returns a tuple with the SecondarySellerMetroCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondarySellerMetroCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SecondarySellerMetroCode) {
		return nil, false
	}
	return o.SecondarySellerMetroCode, true
}

// HasSecondarySellerMetroCode returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondarySellerMetroCode() bool {
	if o != nil && !IsNil(o.SecondarySellerMetroCode) {
		return true
	}

	return false
}

// SetSecondarySellerMetroCode gets a reference to the given string and assigns it to the SecondarySellerMetroCode field.
func (o *PostConnectionRequest) SetSecondarySellerMetroCode(v string) {
	o.SecondarySellerMetroCode = &v
}

// GetSecondarySpeed returns the SecondarySpeed field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondarySpeed() int32 {
	if o == nil || IsNil(o.SecondarySpeed) {
		var ret int32
		return ret
	}
	return *o.SecondarySpeed
}

// GetSecondarySpeedOk returns a tuple with the SecondarySpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondarySpeedOk() (*int32, bool) {
	if o == nil || IsNil(o.SecondarySpeed) {
		return nil, false
	}
	return o.SecondarySpeed, true
}

// HasSecondarySpeed returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondarySpeed() bool {
	if o != nil && !IsNil(o.SecondarySpeed) {
		return true
	}

	return false
}

// SetSecondarySpeed gets a reference to the given int32 and assigns it to the SecondarySpeed field.
func (o *PostConnectionRequest) SetSecondarySpeed(v int32) {
	o.SecondarySpeed = &v
}

// GetSecondarySpeedUnit returns the SecondarySpeedUnit field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondarySpeedUnit() string {
	if o == nil || IsNil(o.SecondarySpeedUnit) {
		var ret string
		return ret
	}
	return *o.SecondarySpeedUnit
}

// GetSecondarySpeedUnitOk returns a tuple with the SecondarySpeedUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondarySpeedUnitOk() (*string, bool) {
	if o == nil || IsNil(o.SecondarySpeedUnit) {
		return nil, false
	}
	return o.SecondarySpeedUnit, true
}

// HasSecondarySpeedUnit returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondarySpeedUnit() bool {
	if o != nil && !IsNil(o.SecondarySpeedUnit) {
		return true
	}

	return false
}

// SetSecondarySpeedUnit gets a reference to the given string and assigns it to the SecondarySpeedUnit field.
func (o *PostConnectionRequest) SetSecondarySpeedUnit(v string) {
	o.SecondarySpeedUnit = &v
}

// GetSecondaryNotifications returns the SecondaryNotifications field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondaryNotifications() []string {
	if o == nil || IsNil(o.SecondaryNotifications) {
		var ret []string
		return ret
	}
	return o.SecondaryNotifications
}

// GetSecondaryNotificationsOk returns a tuple with the SecondaryNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondaryNotificationsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecondaryNotifications) {
		return nil, false
	}
	return o.SecondaryNotifications, true
}

// HasSecondaryNotifications returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondaryNotifications() bool {
	if o != nil && !IsNil(o.SecondaryNotifications) {
		return true
	}

	return false
}

// SetSecondaryNotifications gets a reference to the given []string and assigns it to the SecondaryNotifications field.
func (o *PostConnectionRequest) SetSecondaryNotifications(v []string) {
	o.SecondaryNotifications = v
}

// GetSecondaryInterfaceId returns the SecondaryInterfaceId field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondaryInterfaceId() int32 {
	if o == nil || IsNil(o.SecondaryInterfaceId) {
		var ret int32
		return ret
	}
	return *o.SecondaryInterfaceId
}

// GetSecondaryInterfaceIdOk returns a tuple with the SecondaryInterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondaryInterfaceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SecondaryInterfaceId) {
		return nil, false
	}
	return o.SecondaryInterfaceId, true
}

// HasSecondaryInterfaceId returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondaryInterfaceId() bool {
	if o != nil && !IsNil(o.SecondaryInterfaceId) {
		return true
	}

	return false
}

// SetSecondaryInterfaceId gets a reference to the given int32 and assigns it to the SecondaryInterfaceId field.
func (o *PostConnectionRequest) SetSecondaryInterfaceId(v int32) {
	o.SecondaryInterfaceId = &v
}

// GetPrimaryZSideVlanCTag returns the PrimaryZSideVlanCTag field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetPrimaryZSideVlanCTag() int32 {
	if o == nil || IsNil(o.PrimaryZSideVlanCTag) {
		var ret int32
		return ret
	}
	return *o.PrimaryZSideVlanCTag
}

// GetPrimaryZSideVlanCTagOk returns a tuple with the PrimaryZSideVlanCTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetPrimaryZSideVlanCTagOk() (*int32, bool) {
	if o == nil || IsNil(o.PrimaryZSideVlanCTag) {
		return nil, false
	}
	return o.PrimaryZSideVlanCTag, true
}

// HasPrimaryZSideVlanCTag returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasPrimaryZSideVlanCTag() bool {
	if o != nil && !IsNil(o.PrimaryZSideVlanCTag) {
		return true
	}

	return false
}

// SetPrimaryZSideVlanCTag gets a reference to the given int32 and assigns it to the PrimaryZSideVlanCTag field.
func (o *PostConnectionRequest) SetPrimaryZSideVlanCTag(v int32) {
	o.PrimaryZSideVlanCTag = &v
}

// GetSecondaryZSideVlanCTag returns the SecondaryZSideVlanCTag field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondaryZSideVlanCTag() int32 {
	if o == nil || IsNil(o.SecondaryZSideVlanCTag) {
		var ret int32
		return ret
	}
	return *o.SecondaryZSideVlanCTag
}

// GetSecondaryZSideVlanCTagOk returns a tuple with the SecondaryZSideVlanCTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondaryZSideVlanCTagOk() (*int32, bool) {
	if o == nil || IsNil(o.SecondaryZSideVlanCTag) {
		return nil, false
	}
	return o.SecondaryZSideVlanCTag, true
}

// HasSecondaryZSideVlanCTag returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondaryZSideVlanCTag() bool {
	if o != nil && !IsNil(o.SecondaryZSideVlanCTag) {
		return true
	}

	return false
}

// SetSecondaryZSideVlanCTag gets a reference to the given int32 and assigns it to the SecondaryZSideVlanCTag field.
func (o *PostConnectionRequest) SetSecondaryZSideVlanCTag(v int32) {
	o.SecondaryZSideVlanCTag = &v
}

// GetPrimaryZSidePortUUID returns the PrimaryZSidePortUUID field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetPrimaryZSidePortUUID() string {
	if o == nil || IsNil(o.PrimaryZSidePortUUID) {
		var ret string
		return ret
	}
	return *o.PrimaryZSidePortUUID
}

// GetPrimaryZSidePortUUIDOk returns a tuple with the PrimaryZSidePortUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetPrimaryZSidePortUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryZSidePortUUID) {
		return nil, false
	}
	return o.PrimaryZSidePortUUID, true
}

// HasPrimaryZSidePortUUID returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasPrimaryZSidePortUUID() bool {
	if o != nil && !IsNil(o.PrimaryZSidePortUUID) {
		return true
	}

	return false
}

// SetPrimaryZSidePortUUID gets a reference to the given string and assigns it to the PrimaryZSidePortUUID field.
func (o *PostConnectionRequest) SetPrimaryZSidePortUUID(v string) {
	o.PrimaryZSidePortUUID = &v
}

// GetPrimaryZSideVlanSTag returns the PrimaryZSideVlanSTag field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetPrimaryZSideVlanSTag() int32 {
	if o == nil || IsNil(o.PrimaryZSideVlanSTag) {
		var ret int32
		return ret
	}
	return *o.PrimaryZSideVlanSTag
}

// GetPrimaryZSideVlanSTagOk returns a tuple with the PrimaryZSideVlanSTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetPrimaryZSideVlanSTagOk() (*int32, bool) {
	if o == nil || IsNil(o.PrimaryZSideVlanSTag) {
		return nil, false
	}
	return o.PrimaryZSideVlanSTag, true
}

// HasPrimaryZSideVlanSTag returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasPrimaryZSideVlanSTag() bool {
	if o != nil && !IsNil(o.PrimaryZSideVlanSTag) {
		return true
	}

	return false
}

// SetPrimaryZSideVlanSTag gets a reference to the given int32 and assigns it to the PrimaryZSideVlanSTag field.
func (o *PostConnectionRequest) SetPrimaryZSideVlanSTag(v int32) {
	o.PrimaryZSideVlanSTag = &v
}

// GetSecondaryZSidePortUUID returns the SecondaryZSidePortUUID field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondaryZSidePortUUID() string {
	if o == nil || IsNil(o.SecondaryZSidePortUUID) {
		var ret string
		return ret
	}
	return *o.SecondaryZSidePortUUID
}

// GetSecondaryZSidePortUUIDOk returns a tuple with the SecondaryZSidePortUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondaryZSidePortUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryZSidePortUUID) {
		return nil, false
	}
	return o.SecondaryZSidePortUUID, true
}

// HasSecondaryZSidePortUUID returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondaryZSidePortUUID() bool {
	if o != nil && !IsNil(o.SecondaryZSidePortUUID) {
		return true
	}

	return false
}

// SetSecondaryZSidePortUUID gets a reference to the given string and assigns it to the SecondaryZSidePortUUID field.
func (o *PostConnectionRequest) SetSecondaryZSidePortUUID(v string) {
	o.SecondaryZSidePortUUID = &v
}

// GetSecondaryZSideVlanSTag returns the SecondaryZSideVlanSTag field value if set, zero value otherwise.
func (o *PostConnectionRequest) GetSecondaryZSideVlanSTag() int32 {
	if o == nil || IsNil(o.SecondaryZSideVlanSTag) {
		var ret int32
		return ret
	}
	return *o.SecondaryZSideVlanSTag
}

// GetSecondaryZSideVlanSTagOk returns a tuple with the SecondaryZSideVlanSTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostConnectionRequest) GetSecondaryZSideVlanSTagOk() (*int32, bool) {
	if o == nil || IsNil(o.SecondaryZSideVlanSTag) {
		return nil, false
	}
	return o.SecondaryZSideVlanSTag, true
}

// HasSecondaryZSideVlanSTag returns a boolean if a field has been set.
func (o *PostConnectionRequest) HasSecondaryZSideVlanSTag() bool {
	if o != nil && !IsNil(o.SecondaryZSideVlanSTag) {
		return true
	}

	return false
}

// SetSecondaryZSideVlanSTag gets a reference to the given int32 and assigns it to the SecondaryZSideVlanSTag field.
func (o *PostConnectionRequest) SetSecondaryZSideVlanSTag(v int32) {
	o.SecondaryZSideVlanSTag = &v
}

func (o PostConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostConnectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrimaryName) {
		toSerialize["primaryName"] = o.PrimaryName
	}
	if !IsNil(o.VirtualDeviceUUID) {
		toSerialize["virtualDeviceUUID"] = o.VirtualDeviceUUID
	}
	if !IsNil(o.ProfileUUID) {
		toSerialize["profileUUID"] = o.ProfileUUID
	}
	if !IsNil(o.AuthorizationKey) {
		toSerialize["authorizationKey"] = o.AuthorizationKey
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.SpeedUnit) {
		toSerialize["speedUnit"] = o.SpeedUnit
	}
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	if !IsNil(o.PurchaseOrderNumber) {
		toSerialize["purchaseOrderNumber"] = o.PurchaseOrderNumber
	}
	if !IsNil(o.SellerMetroCode) {
		toSerialize["sellerMetroCode"] = o.SellerMetroCode
	}
	if !IsNil(o.InterfaceId) {
		toSerialize["interfaceId"] = o.InterfaceId
	}
	if !IsNil(o.SecondaryName) {
		toSerialize["secondaryName"] = o.SecondaryName
	}
	if !IsNil(o.NamedTag) {
		toSerialize["namedTag"] = o.NamedTag
	}
	if !IsNil(o.SecondaryVirtualDeviceUUID) {
		toSerialize["secondaryVirtualDeviceUUID"] = o.SecondaryVirtualDeviceUUID
	}
	if !IsNil(o.SecondaryProfileUUID) {
		toSerialize["secondaryProfileUUID"] = o.SecondaryProfileUUID
	}
	if !IsNil(o.SecondaryAuthorizationKey) {
		toSerialize["secondaryAuthorizationKey"] = o.SecondaryAuthorizationKey
	}
	if !IsNil(o.SecondarySellerMetroCode) {
		toSerialize["secondarySellerMetroCode"] = o.SecondarySellerMetroCode
	}
	if !IsNil(o.SecondarySpeed) {
		toSerialize["secondarySpeed"] = o.SecondarySpeed
	}
	if !IsNil(o.SecondarySpeedUnit) {
		toSerialize["secondarySpeedUnit"] = o.SecondarySpeedUnit
	}
	if !IsNil(o.SecondaryNotifications) {
		toSerialize["secondaryNotifications"] = o.SecondaryNotifications
	}
	if !IsNil(o.SecondaryInterfaceId) {
		toSerialize["secondaryInterfaceId"] = o.SecondaryInterfaceId
	}
	if !IsNil(o.PrimaryZSideVlanCTag) {
		toSerialize["primaryZSideVlanCTag"] = o.PrimaryZSideVlanCTag
	}
	if !IsNil(o.SecondaryZSideVlanCTag) {
		toSerialize["secondaryZSideVlanCTag"] = o.SecondaryZSideVlanCTag
	}
	if !IsNil(o.PrimaryZSidePortUUID) {
		toSerialize["primaryZSidePortUUID"] = o.PrimaryZSidePortUUID
	}
	if !IsNil(o.PrimaryZSideVlanSTag) {
		toSerialize["primaryZSideVlanSTag"] = o.PrimaryZSideVlanSTag
	}
	if !IsNil(o.SecondaryZSidePortUUID) {
		toSerialize["secondaryZSidePortUUID"] = o.SecondaryZSidePortUUID
	}
	if !IsNil(o.SecondaryZSideVlanSTag) {
		toSerialize["secondaryZSideVlanSTag"] = o.SecondaryZSideVlanSTag
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostConnectionRequest) UnmarshalJSON(data []byte) (err error) {
	varPostConnectionRequest := _PostConnectionRequest{}

	err = json.Unmarshal(data, &varPostConnectionRequest)

	if err != nil {
		return err
	}

	*o = PostConnectionRequest(varPostConnectionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "primaryName")
		delete(additionalProperties, "virtualDeviceUUID")
		delete(additionalProperties, "profileUUID")
		delete(additionalProperties, "authorizationKey")
		delete(additionalProperties, "speed")
		delete(additionalProperties, "speedUnit")
		delete(additionalProperties, "notifications")
		delete(additionalProperties, "purchaseOrderNumber")
		delete(additionalProperties, "sellerMetroCode")
		delete(additionalProperties, "interfaceId")
		delete(additionalProperties, "secondaryName")
		delete(additionalProperties, "namedTag")
		delete(additionalProperties, "secondaryVirtualDeviceUUID")
		delete(additionalProperties, "secondaryProfileUUID")
		delete(additionalProperties, "secondaryAuthorizationKey")
		delete(additionalProperties, "secondarySellerMetroCode")
		delete(additionalProperties, "secondarySpeed")
		delete(additionalProperties, "secondarySpeedUnit")
		delete(additionalProperties, "secondaryNotifications")
		delete(additionalProperties, "secondaryInterfaceId")
		delete(additionalProperties, "primaryZSideVlanCTag")
		delete(additionalProperties, "secondaryZSideVlanCTag")
		delete(additionalProperties, "primaryZSidePortUUID")
		delete(additionalProperties, "primaryZSideVlanSTag")
		delete(additionalProperties, "secondaryZSidePortUUID")
		delete(additionalProperties, "secondaryZSideVlanSTag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostConnectionRequest struct {
	value *PostConnectionRequest
	isSet bool
}

func (v NullablePostConnectionRequest) Get() *PostConnectionRequest {
	return v.value
}

func (v *NullablePostConnectionRequest) Set(val *PostConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostConnectionRequest(val *PostConnectionRequest) *NullablePostConnectionRequest {
	return &NullablePostConnectionRequest{value: val, isSet: true}
}

func (v NullablePostConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
