/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
	"fmt"
)

// checks if the VpnResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpnResponse{}

// VpnResponse struct for VpnResponse
type VpnResponse struct {
	SiteName          string  `json:"siteName"`
	Uuid              *string `json:"uuid,omitempty"`
	VirtualDeviceUuid string  `json:"virtualDeviceUuid"`
	ConfigName        *string `json:"configName,omitempty"`
	Status            *string `json:"status,omitempty"`
	PeerIp            string  `json:"peerIp"`
	PeerSharedKey     string  `json:"peerSharedKey"`
	// Remote Customer ASN - Customer side
	RemoteAsn int64 `json:"remoteAsn"`
	// Remote Customer IP Address - Customer side
	RemoteIpAddress string `json:"remoteIpAddress"`
	// BGP Password
	Password string `json:"password"`
	// Local ASN - Equinix side
	LocalAsn *int64 `json:"localAsn,omitempty"`
	// Local Tunnel IP Address in CIDR format
	TunnelIp              string  `json:"tunnelIp"`
	BgpState              *string `json:"bgpState,omitempty"`
	InboundBytes          *string `json:"inboundBytes,omitempty"`
	InboundPackets        *string `json:"inboundPackets,omitempty"`
	OutboundBytes         *string `json:"outboundBytes,omitempty"`
	OutboundPackets       *string `json:"outboundPackets,omitempty"`
	TunnelStatus          *string `json:"tunnelStatus,omitempty"`
	CustOrgId             *int64  `json:"custOrgId,omitempty"`
	CreatedDate           *string `json:"createdDate,omitempty"`
	CreatedByFirstName    *string `json:"createdByFirstName,omitempty"`
	CreatedByLastName     *string `json:"createdByLastName,omitempty"`
	CreatedByEmail        *string `json:"createdByEmail,omitempty"`
	CreatedByUserKey      *int64  `json:"createdByUserKey,omitempty"`
	CreatedByAccountUcmId *int64  `json:"createdByAccountUcmId,omitempty"`
	CreatedByUserName     *string `json:"createdByUserName,omitempty"`
	CreatedByCustOrgId    *int64  `json:"createdByCustOrgId,omitempty"`
	CreatedByCustOrgName  *string `json:"createdByCustOrgName,omitempty"`
	CreatedByUserStatus   *string `json:"createdByUserStatus,omitempty"`
	CreatedByCompanyName  *string `json:"createdByCompanyName,omitempty"`
	LastUpdatedDate       *string `json:"lastUpdatedDate,omitempty"`
	UpdatedByFirstName    *string `json:"updatedByFirstName,omitempty"`
	UpdatedByLastName     *string `json:"updatedByLastName,omitempty"`
	UpdatedByEmail        *string `json:"updatedByEmail,omitempty"`
	UpdatedByUserKey      *int64  `json:"updatedByUserKey,omitempty"`
	UpdatedByAccountUcmId *int64  `json:"updatedByAccountUcmId,omitempty"`
	UpdatedByUserName     *string `json:"updatedByUserName,omitempty"`
	UpdatedByCustOrgId    *int64  `json:"updatedByCustOrgId,omitempty"`
	UpdatedByCustOrgName  *string `json:"updatedByCustOrgName,omitempty"`
	UpdatedByUserStatus   *string `json:"updatedByUserStatus,omitempty"`
	UpdatedByCompanyName  *string `json:"updatedByCompanyName,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _VpnResponse VpnResponse

// NewVpnResponse instantiates a new VpnResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpnResponse(siteName string, virtualDeviceUuid string, peerIp string, peerSharedKey string, remoteAsn int64, remoteIpAddress string, password string, tunnelIp string) *VpnResponse {
	this := VpnResponse{}
	this.SiteName = siteName
	this.VirtualDeviceUuid = virtualDeviceUuid
	this.PeerIp = peerIp
	this.PeerSharedKey = peerSharedKey
	this.RemoteAsn = remoteAsn
	this.RemoteIpAddress = remoteIpAddress
	this.Password = password
	this.TunnelIp = tunnelIp
	return &this
}

// NewVpnResponseWithDefaults instantiates a new VpnResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpnResponseWithDefaults() *VpnResponse {
	this := VpnResponse{}
	return &this
}

// GetSiteName returns the SiteName field value
func (o *VpnResponse) GetSiteName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteName
}

// GetSiteNameOk returns a tuple with the SiteName field value
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetSiteNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteName, true
}

// SetSiteName sets field value
func (o *VpnResponse) SetSiteName(v string) {
	o.SiteName = v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *VpnResponse) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *VpnResponse) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *VpnResponse) SetUuid(v string) {
	o.Uuid = &v
}

// GetVirtualDeviceUuid returns the VirtualDeviceUuid field value
func (o *VpnResponse) GetVirtualDeviceUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualDeviceUuid
}

// GetVirtualDeviceUuidOk returns a tuple with the VirtualDeviceUuid field value
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetVirtualDeviceUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualDeviceUuid, true
}

// SetVirtualDeviceUuid sets field value
func (o *VpnResponse) SetVirtualDeviceUuid(v string) {
	o.VirtualDeviceUuid = v
}

// GetConfigName returns the ConfigName field value if set, zero value otherwise.
func (o *VpnResponse) GetConfigName() string {
	if o == nil || IsNil(o.ConfigName) {
		var ret string
		return ret
	}
	return *o.ConfigName
}

// GetConfigNameOk returns a tuple with the ConfigName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetConfigNameOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigName) {
		return nil, false
	}
	return o.ConfigName, true
}

// HasConfigName returns a boolean if a field has been set.
func (o *VpnResponse) HasConfigName() bool {
	if o != nil && !IsNil(o.ConfigName) {
		return true
	}

	return false
}

// SetConfigName gets a reference to the given string and assigns it to the ConfigName field.
func (o *VpnResponse) SetConfigName(v string) {
	o.ConfigName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VpnResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VpnResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VpnResponse) SetStatus(v string) {
	o.Status = &v
}

// GetPeerIp returns the PeerIp field value
func (o *VpnResponse) GetPeerIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PeerIp
}

// GetPeerIpOk returns a tuple with the PeerIp field value
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetPeerIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeerIp, true
}

// SetPeerIp sets field value
func (o *VpnResponse) SetPeerIp(v string) {
	o.PeerIp = v
}

// GetPeerSharedKey returns the PeerSharedKey field value
func (o *VpnResponse) GetPeerSharedKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PeerSharedKey
}

// GetPeerSharedKeyOk returns a tuple with the PeerSharedKey field value
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetPeerSharedKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeerSharedKey, true
}

// SetPeerSharedKey sets field value
func (o *VpnResponse) SetPeerSharedKey(v string) {
	o.PeerSharedKey = v
}

// GetRemoteAsn returns the RemoteAsn field value
func (o *VpnResponse) GetRemoteAsn() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RemoteAsn
}

// GetRemoteAsnOk returns a tuple with the RemoteAsn field value
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetRemoteAsnOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteAsn, true
}

// SetRemoteAsn sets field value
func (o *VpnResponse) SetRemoteAsn(v int64) {
	o.RemoteAsn = v
}

// GetRemoteIpAddress returns the RemoteIpAddress field value
func (o *VpnResponse) GetRemoteIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteIpAddress
}

// GetRemoteIpAddressOk returns a tuple with the RemoteIpAddress field value
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetRemoteIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteIpAddress, true
}

// SetRemoteIpAddress sets field value
func (o *VpnResponse) SetRemoteIpAddress(v string) {
	o.RemoteIpAddress = v
}

// GetPassword returns the Password field value
func (o *VpnResponse) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *VpnResponse) SetPassword(v string) {
	o.Password = v
}

// GetLocalAsn returns the LocalAsn field value if set, zero value otherwise.
func (o *VpnResponse) GetLocalAsn() int64 {
	if o == nil || IsNil(o.LocalAsn) {
		var ret int64
		return ret
	}
	return *o.LocalAsn
}

// GetLocalAsnOk returns a tuple with the LocalAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetLocalAsnOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalAsn) {
		return nil, false
	}
	return o.LocalAsn, true
}

// HasLocalAsn returns a boolean if a field has been set.
func (o *VpnResponse) HasLocalAsn() bool {
	if o != nil && !IsNil(o.LocalAsn) {
		return true
	}

	return false
}

// SetLocalAsn gets a reference to the given int64 and assigns it to the LocalAsn field.
func (o *VpnResponse) SetLocalAsn(v int64) {
	o.LocalAsn = &v
}

// GetTunnelIp returns the TunnelIp field value
func (o *VpnResponse) GetTunnelIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TunnelIp
}

// GetTunnelIpOk returns a tuple with the TunnelIp field value
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetTunnelIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TunnelIp, true
}

// SetTunnelIp sets field value
func (o *VpnResponse) SetTunnelIp(v string) {
	o.TunnelIp = v
}

// GetBgpState returns the BgpState field value if set, zero value otherwise.
func (o *VpnResponse) GetBgpState() string {
	if o == nil || IsNil(o.BgpState) {
		var ret string
		return ret
	}
	return *o.BgpState
}

// GetBgpStateOk returns a tuple with the BgpState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetBgpStateOk() (*string, bool) {
	if o == nil || IsNil(o.BgpState) {
		return nil, false
	}
	return o.BgpState, true
}

// HasBgpState returns a boolean if a field has been set.
func (o *VpnResponse) HasBgpState() bool {
	if o != nil && !IsNil(o.BgpState) {
		return true
	}

	return false
}

// SetBgpState gets a reference to the given string and assigns it to the BgpState field.
func (o *VpnResponse) SetBgpState(v string) {
	o.BgpState = &v
}

// GetInboundBytes returns the InboundBytes field value if set, zero value otherwise.
func (o *VpnResponse) GetInboundBytes() string {
	if o == nil || IsNil(o.InboundBytes) {
		var ret string
		return ret
	}
	return *o.InboundBytes
}

// GetInboundBytesOk returns a tuple with the InboundBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetInboundBytesOk() (*string, bool) {
	if o == nil || IsNil(o.InboundBytes) {
		return nil, false
	}
	return o.InboundBytes, true
}

// HasInboundBytes returns a boolean if a field has been set.
func (o *VpnResponse) HasInboundBytes() bool {
	if o != nil && !IsNil(o.InboundBytes) {
		return true
	}

	return false
}

// SetInboundBytes gets a reference to the given string and assigns it to the InboundBytes field.
func (o *VpnResponse) SetInboundBytes(v string) {
	o.InboundBytes = &v
}

// GetInboundPackets returns the InboundPackets field value if set, zero value otherwise.
func (o *VpnResponse) GetInboundPackets() string {
	if o == nil || IsNil(o.InboundPackets) {
		var ret string
		return ret
	}
	return *o.InboundPackets
}

// GetInboundPacketsOk returns a tuple with the InboundPackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetInboundPacketsOk() (*string, bool) {
	if o == nil || IsNil(o.InboundPackets) {
		return nil, false
	}
	return o.InboundPackets, true
}

// HasInboundPackets returns a boolean if a field has been set.
func (o *VpnResponse) HasInboundPackets() bool {
	if o != nil && !IsNil(o.InboundPackets) {
		return true
	}

	return false
}

// SetInboundPackets gets a reference to the given string and assigns it to the InboundPackets field.
func (o *VpnResponse) SetInboundPackets(v string) {
	o.InboundPackets = &v
}

// GetOutboundBytes returns the OutboundBytes field value if set, zero value otherwise.
func (o *VpnResponse) GetOutboundBytes() string {
	if o == nil || IsNil(o.OutboundBytes) {
		var ret string
		return ret
	}
	return *o.OutboundBytes
}

// GetOutboundBytesOk returns a tuple with the OutboundBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetOutboundBytesOk() (*string, bool) {
	if o == nil || IsNil(o.OutboundBytes) {
		return nil, false
	}
	return o.OutboundBytes, true
}

// HasOutboundBytes returns a boolean if a field has been set.
func (o *VpnResponse) HasOutboundBytes() bool {
	if o != nil && !IsNil(o.OutboundBytes) {
		return true
	}

	return false
}

// SetOutboundBytes gets a reference to the given string and assigns it to the OutboundBytes field.
func (o *VpnResponse) SetOutboundBytes(v string) {
	o.OutboundBytes = &v
}

// GetOutboundPackets returns the OutboundPackets field value if set, zero value otherwise.
func (o *VpnResponse) GetOutboundPackets() string {
	if o == nil || IsNil(o.OutboundPackets) {
		var ret string
		return ret
	}
	return *o.OutboundPackets
}

// GetOutboundPacketsOk returns a tuple with the OutboundPackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetOutboundPacketsOk() (*string, bool) {
	if o == nil || IsNil(o.OutboundPackets) {
		return nil, false
	}
	return o.OutboundPackets, true
}

// HasOutboundPackets returns a boolean if a field has been set.
func (o *VpnResponse) HasOutboundPackets() bool {
	if o != nil && !IsNil(o.OutboundPackets) {
		return true
	}

	return false
}

// SetOutboundPackets gets a reference to the given string and assigns it to the OutboundPackets field.
func (o *VpnResponse) SetOutboundPackets(v string) {
	o.OutboundPackets = &v
}

// GetTunnelStatus returns the TunnelStatus field value if set, zero value otherwise.
func (o *VpnResponse) GetTunnelStatus() string {
	if o == nil || IsNil(o.TunnelStatus) {
		var ret string
		return ret
	}
	return *o.TunnelStatus
}

// GetTunnelStatusOk returns a tuple with the TunnelStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetTunnelStatusOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelStatus) {
		return nil, false
	}
	return o.TunnelStatus, true
}

// HasTunnelStatus returns a boolean if a field has been set.
func (o *VpnResponse) HasTunnelStatus() bool {
	if o != nil && !IsNil(o.TunnelStatus) {
		return true
	}

	return false
}

// SetTunnelStatus gets a reference to the given string and assigns it to the TunnelStatus field.
func (o *VpnResponse) SetTunnelStatus(v string) {
	o.TunnelStatus = &v
}

// GetCustOrgId returns the CustOrgId field value if set, zero value otherwise.
func (o *VpnResponse) GetCustOrgId() int64 {
	if o == nil || IsNil(o.CustOrgId) {
		var ret int64
		return ret
	}
	return *o.CustOrgId
}

// GetCustOrgIdOk returns a tuple with the CustOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCustOrgIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CustOrgId) {
		return nil, false
	}
	return o.CustOrgId, true
}

// HasCustOrgId returns a boolean if a field has been set.
func (o *VpnResponse) HasCustOrgId() bool {
	if o != nil && !IsNil(o.CustOrgId) {
		return true
	}

	return false
}

// SetCustOrgId gets a reference to the given int64 and assigns it to the CustOrgId field.
func (o *VpnResponse) SetCustOrgId(v int64) {
	o.CustOrgId = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *VpnResponse) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetCreatedByFirstName returns the CreatedByFirstName field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByFirstName() string {
	if o == nil || IsNil(o.CreatedByFirstName) {
		var ret string
		return ret
	}
	return *o.CreatedByFirstName
}

// GetCreatedByFirstNameOk returns a tuple with the CreatedByFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByFirstName) {
		return nil, false
	}
	return o.CreatedByFirstName, true
}

// HasCreatedByFirstName returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByFirstName() bool {
	if o != nil && !IsNil(o.CreatedByFirstName) {
		return true
	}

	return false
}

// SetCreatedByFirstName gets a reference to the given string and assigns it to the CreatedByFirstName field.
func (o *VpnResponse) SetCreatedByFirstName(v string) {
	o.CreatedByFirstName = &v
}

// GetCreatedByLastName returns the CreatedByLastName field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByLastName() string {
	if o == nil || IsNil(o.CreatedByLastName) {
		var ret string
		return ret
	}
	return *o.CreatedByLastName
}

// GetCreatedByLastNameOk returns a tuple with the CreatedByLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByLastName) {
		return nil, false
	}
	return o.CreatedByLastName, true
}

// HasCreatedByLastName returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByLastName() bool {
	if o != nil && !IsNil(o.CreatedByLastName) {
		return true
	}

	return false
}

// SetCreatedByLastName gets a reference to the given string and assigns it to the CreatedByLastName field.
func (o *VpnResponse) SetCreatedByLastName(v string) {
	o.CreatedByLastName = &v
}

// GetCreatedByEmail returns the CreatedByEmail field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByEmail() string {
	if o == nil || IsNil(o.CreatedByEmail) {
		var ret string
		return ret
	}
	return *o.CreatedByEmail
}

// GetCreatedByEmailOk returns a tuple with the CreatedByEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByEmail) {
		return nil, false
	}
	return o.CreatedByEmail, true
}

// HasCreatedByEmail returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByEmail() bool {
	if o != nil && !IsNil(o.CreatedByEmail) {
		return true
	}

	return false
}

// SetCreatedByEmail gets a reference to the given string and assigns it to the CreatedByEmail field.
func (o *VpnResponse) SetCreatedByEmail(v string) {
	o.CreatedByEmail = &v
}

// GetCreatedByUserKey returns the CreatedByUserKey field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByUserKey() int64 {
	if o == nil || IsNil(o.CreatedByUserKey) {
		var ret int64
		return ret
	}
	return *o.CreatedByUserKey
}

// GetCreatedByUserKeyOk returns a tuple with the CreatedByUserKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByUserKeyOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedByUserKey) {
		return nil, false
	}
	return o.CreatedByUserKey, true
}

// HasCreatedByUserKey returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByUserKey() bool {
	if o != nil && !IsNil(o.CreatedByUserKey) {
		return true
	}

	return false
}

// SetCreatedByUserKey gets a reference to the given int64 and assigns it to the CreatedByUserKey field.
func (o *VpnResponse) SetCreatedByUserKey(v int64) {
	o.CreatedByUserKey = &v
}

// GetCreatedByAccountUcmId returns the CreatedByAccountUcmId field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByAccountUcmId() int64 {
	if o == nil || IsNil(o.CreatedByAccountUcmId) {
		var ret int64
		return ret
	}
	return *o.CreatedByAccountUcmId
}

// GetCreatedByAccountUcmIdOk returns a tuple with the CreatedByAccountUcmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByAccountUcmIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedByAccountUcmId) {
		return nil, false
	}
	return o.CreatedByAccountUcmId, true
}

// HasCreatedByAccountUcmId returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByAccountUcmId() bool {
	if o != nil && !IsNil(o.CreatedByAccountUcmId) {
		return true
	}

	return false
}

// SetCreatedByAccountUcmId gets a reference to the given int64 and assigns it to the CreatedByAccountUcmId field.
func (o *VpnResponse) SetCreatedByAccountUcmId(v int64) {
	o.CreatedByAccountUcmId = &v
}

// GetCreatedByUserName returns the CreatedByUserName field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByUserName() string {
	if o == nil || IsNil(o.CreatedByUserName) {
		var ret string
		return ret
	}
	return *o.CreatedByUserName
}

// GetCreatedByUserNameOk returns a tuple with the CreatedByUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByUserName) {
		return nil, false
	}
	return o.CreatedByUserName, true
}

// HasCreatedByUserName returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByUserName() bool {
	if o != nil && !IsNil(o.CreatedByUserName) {
		return true
	}

	return false
}

// SetCreatedByUserName gets a reference to the given string and assigns it to the CreatedByUserName field.
func (o *VpnResponse) SetCreatedByUserName(v string) {
	o.CreatedByUserName = &v
}

// GetCreatedByCustOrgId returns the CreatedByCustOrgId field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByCustOrgId() int64 {
	if o == nil || IsNil(o.CreatedByCustOrgId) {
		var ret int64
		return ret
	}
	return *o.CreatedByCustOrgId
}

// GetCreatedByCustOrgIdOk returns a tuple with the CreatedByCustOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByCustOrgIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedByCustOrgId) {
		return nil, false
	}
	return o.CreatedByCustOrgId, true
}

// HasCreatedByCustOrgId returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByCustOrgId() bool {
	if o != nil && !IsNil(o.CreatedByCustOrgId) {
		return true
	}

	return false
}

// SetCreatedByCustOrgId gets a reference to the given int64 and assigns it to the CreatedByCustOrgId field.
func (o *VpnResponse) SetCreatedByCustOrgId(v int64) {
	o.CreatedByCustOrgId = &v
}

// GetCreatedByCustOrgName returns the CreatedByCustOrgName field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByCustOrgName() string {
	if o == nil || IsNil(o.CreatedByCustOrgName) {
		var ret string
		return ret
	}
	return *o.CreatedByCustOrgName
}

// GetCreatedByCustOrgNameOk returns a tuple with the CreatedByCustOrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByCustOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByCustOrgName) {
		return nil, false
	}
	return o.CreatedByCustOrgName, true
}

// HasCreatedByCustOrgName returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByCustOrgName() bool {
	if o != nil && !IsNil(o.CreatedByCustOrgName) {
		return true
	}

	return false
}

// SetCreatedByCustOrgName gets a reference to the given string and assigns it to the CreatedByCustOrgName field.
func (o *VpnResponse) SetCreatedByCustOrgName(v string) {
	o.CreatedByCustOrgName = &v
}

// GetCreatedByUserStatus returns the CreatedByUserStatus field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByUserStatus() string {
	if o == nil || IsNil(o.CreatedByUserStatus) {
		var ret string
		return ret
	}
	return *o.CreatedByUserStatus
}

// GetCreatedByUserStatusOk returns a tuple with the CreatedByUserStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByUserStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByUserStatus) {
		return nil, false
	}
	return o.CreatedByUserStatus, true
}

// HasCreatedByUserStatus returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByUserStatus() bool {
	if o != nil && !IsNil(o.CreatedByUserStatus) {
		return true
	}

	return false
}

// SetCreatedByUserStatus gets a reference to the given string and assigns it to the CreatedByUserStatus field.
func (o *VpnResponse) SetCreatedByUserStatus(v string) {
	o.CreatedByUserStatus = &v
}

// GetCreatedByCompanyName returns the CreatedByCompanyName field value if set, zero value otherwise.
func (o *VpnResponse) GetCreatedByCompanyName() string {
	if o == nil || IsNil(o.CreatedByCompanyName) {
		var ret string
		return ret
	}
	return *o.CreatedByCompanyName
}

// GetCreatedByCompanyNameOk returns a tuple with the CreatedByCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetCreatedByCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByCompanyName) {
		return nil, false
	}
	return o.CreatedByCompanyName, true
}

// HasCreatedByCompanyName returns a boolean if a field has been set.
func (o *VpnResponse) HasCreatedByCompanyName() bool {
	if o != nil && !IsNil(o.CreatedByCompanyName) {
		return true
	}

	return false
}

// SetCreatedByCompanyName gets a reference to the given string and assigns it to the CreatedByCompanyName field.
func (o *VpnResponse) SetCreatedByCompanyName(v string) {
	o.CreatedByCompanyName = &v
}

// GetLastUpdatedDate returns the LastUpdatedDate field value if set, zero value otherwise.
func (o *VpnResponse) GetLastUpdatedDate() string {
	if o == nil || IsNil(o.LastUpdatedDate) {
		var ret string
		return ret
	}
	return *o.LastUpdatedDate
}

// GetLastUpdatedDateOk returns a tuple with the LastUpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetLastUpdatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedDate) {
		return nil, false
	}
	return o.LastUpdatedDate, true
}

// HasLastUpdatedDate returns a boolean if a field has been set.
func (o *VpnResponse) HasLastUpdatedDate() bool {
	if o != nil && !IsNil(o.LastUpdatedDate) {
		return true
	}

	return false
}

// SetLastUpdatedDate gets a reference to the given string and assigns it to the LastUpdatedDate field.
func (o *VpnResponse) SetLastUpdatedDate(v string) {
	o.LastUpdatedDate = &v
}

// GetUpdatedByFirstName returns the UpdatedByFirstName field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByFirstName() string {
	if o == nil || IsNil(o.UpdatedByFirstName) {
		var ret string
		return ret
	}
	return *o.UpdatedByFirstName
}

// GetUpdatedByFirstNameOk returns a tuple with the UpdatedByFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedByFirstName) {
		return nil, false
	}
	return o.UpdatedByFirstName, true
}

// HasUpdatedByFirstName returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByFirstName() bool {
	if o != nil && !IsNil(o.UpdatedByFirstName) {
		return true
	}

	return false
}

// SetUpdatedByFirstName gets a reference to the given string and assigns it to the UpdatedByFirstName field.
func (o *VpnResponse) SetUpdatedByFirstName(v string) {
	o.UpdatedByFirstName = &v
}

// GetUpdatedByLastName returns the UpdatedByLastName field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByLastName() string {
	if o == nil || IsNil(o.UpdatedByLastName) {
		var ret string
		return ret
	}
	return *o.UpdatedByLastName
}

// GetUpdatedByLastNameOk returns a tuple with the UpdatedByLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedByLastName) {
		return nil, false
	}
	return o.UpdatedByLastName, true
}

// HasUpdatedByLastName returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByLastName() bool {
	if o != nil && !IsNil(o.UpdatedByLastName) {
		return true
	}

	return false
}

// SetUpdatedByLastName gets a reference to the given string and assigns it to the UpdatedByLastName field.
func (o *VpnResponse) SetUpdatedByLastName(v string) {
	o.UpdatedByLastName = &v
}

// GetUpdatedByEmail returns the UpdatedByEmail field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByEmail() string {
	if o == nil || IsNil(o.UpdatedByEmail) {
		var ret string
		return ret
	}
	return *o.UpdatedByEmail
}

// GetUpdatedByEmailOk returns a tuple with the UpdatedByEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedByEmail) {
		return nil, false
	}
	return o.UpdatedByEmail, true
}

// HasUpdatedByEmail returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByEmail() bool {
	if o != nil && !IsNil(o.UpdatedByEmail) {
		return true
	}

	return false
}

// SetUpdatedByEmail gets a reference to the given string and assigns it to the UpdatedByEmail field.
func (o *VpnResponse) SetUpdatedByEmail(v string) {
	o.UpdatedByEmail = &v
}

// GetUpdatedByUserKey returns the UpdatedByUserKey field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByUserKey() int64 {
	if o == nil || IsNil(o.UpdatedByUserKey) {
		var ret int64
		return ret
	}
	return *o.UpdatedByUserKey
}

// GetUpdatedByUserKeyOk returns a tuple with the UpdatedByUserKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByUserKeyOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedByUserKey) {
		return nil, false
	}
	return o.UpdatedByUserKey, true
}

// HasUpdatedByUserKey returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByUserKey() bool {
	if o != nil && !IsNil(o.UpdatedByUserKey) {
		return true
	}

	return false
}

// SetUpdatedByUserKey gets a reference to the given int64 and assigns it to the UpdatedByUserKey field.
func (o *VpnResponse) SetUpdatedByUserKey(v int64) {
	o.UpdatedByUserKey = &v
}

// GetUpdatedByAccountUcmId returns the UpdatedByAccountUcmId field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByAccountUcmId() int64 {
	if o == nil || IsNil(o.UpdatedByAccountUcmId) {
		var ret int64
		return ret
	}
	return *o.UpdatedByAccountUcmId
}

// GetUpdatedByAccountUcmIdOk returns a tuple with the UpdatedByAccountUcmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByAccountUcmIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedByAccountUcmId) {
		return nil, false
	}
	return o.UpdatedByAccountUcmId, true
}

// HasUpdatedByAccountUcmId returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByAccountUcmId() bool {
	if o != nil && !IsNil(o.UpdatedByAccountUcmId) {
		return true
	}

	return false
}

// SetUpdatedByAccountUcmId gets a reference to the given int64 and assigns it to the UpdatedByAccountUcmId field.
func (o *VpnResponse) SetUpdatedByAccountUcmId(v int64) {
	o.UpdatedByAccountUcmId = &v
}

// GetUpdatedByUserName returns the UpdatedByUserName field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByUserName() string {
	if o == nil || IsNil(o.UpdatedByUserName) {
		var ret string
		return ret
	}
	return *o.UpdatedByUserName
}

// GetUpdatedByUserNameOk returns a tuple with the UpdatedByUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedByUserName) {
		return nil, false
	}
	return o.UpdatedByUserName, true
}

// HasUpdatedByUserName returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByUserName() bool {
	if o != nil && !IsNil(o.UpdatedByUserName) {
		return true
	}

	return false
}

// SetUpdatedByUserName gets a reference to the given string and assigns it to the UpdatedByUserName field.
func (o *VpnResponse) SetUpdatedByUserName(v string) {
	o.UpdatedByUserName = &v
}

// GetUpdatedByCustOrgId returns the UpdatedByCustOrgId field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByCustOrgId() int64 {
	if o == nil || IsNil(o.UpdatedByCustOrgId) {
		var ret int64
		return ret
	}
	return *o.UpdatedByCustOrgId
}

// GetUpdatedByCustOrgIdOk returns a tuple with the UpdatedByCustOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByCustOrgIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedByCustOrgId) {
		return nil, false
	}
	return o.UpdatedByCustOrgId, true
}

// HasUpdatedByCustOrgId returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByCustOrgId() bool {
	if o != nil && !IsNil(o.UpdatedByCustOrgId) {
		return true
	}

	return false
}

// SetUpdatedByCustOrgId gets a reference to the given int64 and assigns it to the UpdatedByCustOrgId field.
func (o *VpnResponse) SetUpdatedByCustOrgId(v int64) {
	o.UpdatedByCustOrgId = &v
}

// GetUpdatedByCustOrgName returns the UpdatedByCustOrgName field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByCustOrgName() string {
	if o == nil || IsNil(o.UpdatedByCustOrgName) {
		var ret string
		return ret
	}
	return *o.UpdatedByCustOrgName
}

// GetUpdatedByCustOrgNameOk returns a tuple with the UpdatedByCustOrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByCustOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedByCustOrgName) {
		return nil, false
	}
	return o.UpdatedByCustOrgName, true
}

// HasUpdatedByCustOrgName returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByCustOrgName() bool {
	if o != nil && !IsNil(o.UpdatedByCustOrgName) {
		return true
	}

	return false
}

// SetUpdatedByCustOrgName gets a reference to the given string and assigns it to the UpdatedByCustOrgName field.
func (o *VpnResponse) SetUpdatedByCustOrgName(v string) {
	o.UpdatedByCustOrgName = &v
}

// GetUpdatedByUserStatus returns the UpdatedByUserStatus field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByUserStatus() string {
	if o == nil || IsNil(o.UpdatedByUserStatus) {
		var ret string
		return ret
	}
	return *o.UpdatedByUserStatus
}

// GetUpdatedByUserStatusOk returns a tuple with the UpdatedByUserStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByUserStatusOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedByUserStatus) {
		return nil, false
	}
	return o.UpdatedByUserStatus, true
}

// HasUpdatedByUserStatus returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByUserStatus() bool {
	if o != nil && !IsNil(o.UpdatedByUserStatus) {
		return true
	}

	return false
}

// SetUpdatedByUserStatus gets a reference to the given string and assigns it to the UpdatedByUserStatus field.
func (o *VpnResponse) SetUpdatedByUserStatus(v string) {
	o.UpdatedByUserStatus = &v
}

// GetUpdatedByCompanyName returns the UpdatedByCompanyName field value if set, zero value otherwise.
func (o *VpnResponse) GetUpdatedByCompanyName() string {
	if o == nil || IsNil(o.UpdatedByCompanyName) {
		var ret string
		return ret
	}
	return *o.UpdatedByCompanyName
}

// GetUpdatedByCompanyNameOk returns a tuple with the UpdatedByCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnResponse) GetUpdatedByCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedByCompanyName) {
		return nil, false
	}
	return o.UpdatedByCompanyName, true
}

// HasUpdatedByCompanyName returns a boolean if a field has been set.
func (o *VpnResponse) HasUpdatedByCompanyName() bool {
	if o != nil && !IsNil(o.UpdatedByCompanyName) {
		return true
	}

	return false
}

// SetUpdatedByCompanyName gets a reference to the given string and assigns it to the UpdatedByCompanyName field.
func (o *VpnResponse) SetUpdatedByCompanyName(v string) {
	o.UpdatedByCompanyName = &v
}

func (o VpnResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpnResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["siteName"] = o.SiteName
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	toSerialize["virtualDeviceUuid"] = o.VirtualDeviceUuid
	if !IsNil(o.ConfigName) {
		toSerialize["configName"] = o.ConfigName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	toSerialize["peerIp"] = o.PeerIp
	toSerialize["peerSharedKey"] = o.PeerSharedKey
	toSerialize["remoteAsn"] = o.RemoteAsn
	toSerialize["remoteIpAddress"] = o.RemoteIpAddress
	toSerialize["password"] = o.Password
	if !IsNil(o.LocalAsn) {
		toSerialize["localAsn"] = o.LocalAsn
	}
	toSerialize["tunnelIp"] = o.TunnelIp
	if !IsNil(o.BgpState) {
		toSerialize["bgpState"] = o.BgpState
	}
	if !IsNil(o.InboundBytes) {
		toSerialize["inboundBytes"] = o.InboundBytes
	}
	if !IsNil(o.InboundPackets) {
		toSerialize["inboundPackets"] = o.InboundPackets
	}
	if !IsNil(o.OutboundBytes) {
		toSerialize["outboundBytes"] = o.OutboundBytes
	}
	if !IsNil(o.OutboundPackets) {
		toSerialize["outboundPackets"] = o.OutboundPackets
	}
	if !IsNil(o.TunnelStatus) {
		toSerialize["tunnelStatus"] = o.TunnelStatus
	}
	if !IsNil(o.CustOrgId) {
		toSerialize["custOrgId"] = o.CustOrgId
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedByFirstName) {
		toSerialize["createdByFirstName"] = o.CreatedByFirstName
	}
	if !IsNil(o.CreatedByLastName) {
		toSerialize["createdByLastName"] = o.CreatedByLastName
	}
	if !IsNil(o.CreatedByEmail) {
		toSerialize["createdByEmail"] = o.CreatedByEmail
	}
	if !IsNil(o.CreatedByUserKey) {
		toSerialize["createdByUserKey"] = o.CreatedByUserKey
	}
	if !IsNil(o.CreatedByAccountUcmId) {
		toSerialize["createdByAccountUcmId"] = o.CreatedByAccountUcmId
	}
	if !IsNil(o.CreatedByUserName) {
		toSerialize["createdByUserName"] = o.CreatedByUserName
	}
	if !IsNil(o.CreatedByCustOrgId) {
		toSerialize["createdByCustOrgId"] = o.CreatedByCustOrgId
	}
	if !IsNil(o.CreatedByCustOrgName) {
		toSerialize["createdByCustOrgName"] = o.CreatedByCustOrgName
	}
	if !IsNil(o.CreatedByUserStatus) {
		toSerialize["createdByUserStatus"] = o.CreatedByUserStatus
	}
	if !IsNil(o.CreatedByCompanyName) {
		toSerialize["createdByCompanyName"] = o.CreatedByCompanyName
	}
	if !IsNil(o.LastUpdatedDate) {
		toSerialize["lastUpdatedDate"] = o.LastUpdatedDate
	}
	if !IsNil(o.UpdatedByFirstName) {
		toSerialize["updatedByFirstName"] = o.UpdatedByFirstName
	}
	if !IsNil(o.UpdatedByLastName) {
		toSerialize["updatedByLastName"] = o.UpdatedByLastName
	}
	if !IsNil(o.UpdatedByEmail) {
		toSerialize["updatedByEmail"] = o.UpdatedByEmail
	}
	if !IsNil(o.UpdatedByUserKey) {
		toSerialize["updatedByUserKey"] = o.UpdatedByUserKey
	}
	if !IsNil(o.UpdatedByAccountUcmId) {
		toSerialize["updatedByAccountUcmId"] = o.UpdatedByAccountUcmId
	}
	if !IsNil(o.UpdatedByUserName) {
		toSerialize["updatedByUserName"] = o.UpdatedByUserName
	}
	if !IsNil(o.UpdatedByCustOrgId) {
		toSerialize["updatedByCustOrgId"] = o.UpdatedByCustOrgId
	}
	if !IsNil(o.UpdatedByCustOrgName) {
		toSerialize["updatedByCustOrgName"] = o.UpdatedByCustOrgName
	}
	if !IsNil(o.UpdatedByUserStatus) {
		toSerialize["updatedByUserStatus"] = o.UpdatedByUserStatus
	}
	if !IsNil(o.UpdatedByCompanyName) {
		toSerialize["updatedByCompanyName"] = o.UpdatedByCompanyName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VpnResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"siteName",
		"virtualDeviceUuid",
		"peerIp",
		"peerSharedKey",
		"remoteAsn",
		"remoteIpAddress",
		"password",
		"tunnelIp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVpnResponse := _VpnResponse{}

	err = json.Unmarshal(data, &varVpnResponse)

	if err != nil {
		return err
	}

	*o = VpnResponse(varVpnResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "siteName")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "virtualDeviceUuid")
		delete(additionalProperties, "configName")
		delete(additionalProperties, "status")
		delete(additionalProperties, "peerIp")
		delete(additionalProperties, "peerSharedKey")
		delete(additionalProperties, "remoteAsn")
		delete(additionalProperties, "remoteIpAddress")
		delete(additionalProperties, "password")
		delete(additionalProperties, "localAsn")
		delete(additionalProperties, "tunnelIp")
		delete(additionalProperties, "bgpState")
		delete(additionalProperties, "inboundBytes")
		delete(additionalProperties, "inboundPackets")
		delete(additionalProperties, "outboundBytes")
		delete(additionalProperties, "outboundPackets")
		delete(additionalProperties, "tunnelStatus")
		delete(additionalProperties, "custOrgId")
		delete(additionalProperties, "createdDate")
		delete(additionalProperties, "createdByFirstName")
		delete(additionalProperties, "createdByLastName")
		delete(additionalProperties, "createdByEmail")
		delete(additionalProperties, "createdByUserKey")
		delete(additionalProperties, "createdByAccountUcmId")
		delete(additionalProperties, "createdByUserName")
		delete(additionalProperties, "createdByCustOrgId")
		delete(additionalProperties, "createdByCustOrgName")
		delete(additionalProperties, "createdByUserStatus")
		delete(additionalProperties, "createdByCompanyName")
		delete(additionalProperties, "lastUpdatedDate")
		delete(additionalProperties, "updatedByFirstName")
		delete(additionalProperties, "updatedByLastName")
		delete(additionalProperties, "updatedByEmail")
		delete(additionalProperties, "updatedByUserKey")
		delete(additionalProperties, "updatedByAccountUcmId")
		delete(additionalProperties, "updatedByUserName")
		delete(additionalProperties, "updatedByCustOrgId")
		delete(additionalProperties, "updatedByCustOrgName")
		delete(additionalProperties, "updatedByUserStatus")
		delete(additionalProperties, "updatedByCompanyName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVpnResponse struct {
	value *VpnResponse
	isSet bool
}

func (v NullableVpnResponse) Get() *VpnResponse {
	return v.value
}

func (v *NullableVpnResponse) Set(val *VpnResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnResponse(val *VpnResponse) *NullableVpnResponse {
	return &NullableVpnResponse{value: val, isSet: true}
}

func (v NullableVpnResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
