/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the InitialDeviceACLResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitialDeviceACLResponse{}

// InitialDeviceACLResponse struct for InitialDeviceACLResponse
type InitialDeviceACLResponse struct {
	AclTemplate          *DeviceACLDetailsResponse `json:"aclTemplate,omitempty"`
	MgmtAclTemplate      *DeviceACLDetailsResponse `json:"mgmtAclTemplate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InitialDeviceACLResponse InitialDeviceACLResponse

// NewInitialDeviceACLResponse instantiates a new InitialDeviceACLResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitialDeviceACLResponse() *InitialDeviceACLResponse {
	this := InitialDeviceACLResponse{}
	return &this
}

// NewInitialDeviceACLResponseWithDefaults instantiates a new InitialDeviceACLResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitialDeviceACLResponseWithDefaults() *InitialDeviceACLResponse {
	this := InitialDeviceACLResponse{}
	return &this
}

// GetAclTemplate returns the AclTemplate field value if set, zero value otherwise.
func (o *InitialDeviceACLResponse) GetAclTemplate() DeviceACLDetailsResponse {
	if o == nil || IsNil(o.AclTemplate) {
		var ret DeviceACLDetailsResponse
		return ret
	}
	return *o.AclTemplate
}

// GetAclTemplateOk returns a tuple with the AclTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitialDeviceACLResponse) GetAclTemplateOk() (*DeviceACLDetailsResponse, bool) {
	if o == nil || IsNil(o.AclTemplate) {
		return nil, false
	}
	return o.AclTemplate, true
}

// HasAclTemplate returns a boolean if a field has been set.
func (o *InitialDeviceACLResponse) HasAclTemplate() bool {
	if o != nil && !IsNil(o.AclTemplate) {
		return true
	}

	return false
}

// SetAclTemplate gets a reference to the given DeviceACLDetailsResponse and assigns it to the AclTemplate field.
func (o *InitialDeviceACLResponse) SetAclTemplate(v DeviceACLDetailsResponse) {
	o.AclTemplate = &v
}

// GetMgmtAclTemplate returns the MgmtAclTemplate field value if set, zero value otherwise.
func (o *InitialDeviceACLResponse) GetMgmtAclTemplate() DeviceACLDetailsResponse {
	if o == nil || IsNil(o.MgmtAclTemplate) {
		var ret DeviceACLDetailsResponse
		return ret
	}
	return *o.MgmtAclTemplate
}

// GetMgmtAclTemplateOk returns a tuple with the MgmtAclTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitialDeviceACLResponse) GetMgmtAclTemplateOk() (*DeviceACLDetailsResponse, bool) {
	if o == nil || IsNil(o.MgmtAclTemplate) {
		return nil, false
	}
	return o.MgmtAclTemplate, true
}

// HasMgmtAclTemplate returns a boolean if a field has been set.
func (o *InitialDeviceACLResponse) HasMgmtAclTemplate() bool {
	if o != nil && !IsNil(o.MgmtAclTemplate) {
		return true
	}

	return false
}

// SetMgmtAclTemplate gets a reference to the given DeviceACLDetailsResponse and assigns it to the MgmtAclTemplate field.
func (o *InitialDeviceACLResponse) SetMgmtAclTemplate(v DeviceACLDetailsResponse) {
	o.MgmtAclTemplate = &v
}

func (o InitialDeviceACLResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitialDeviceACLResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AclTemplate) {
		toSerialize["aclTemplate"] = o.AclTemplate
	}
	if !IsNil(o.MgmtAclTemplate) {
		toSerialize["mgmtAclTemplate"] = o.MgmtAclTemplate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InitialDeviceACLResponse) UnmarshalJSON(data []byte) (err error) {
	varInitialDeviceACLResponse := _InitialDeviceACLResponse{}

	err = json.Unmarshal(data, &varInitialDeviceACLResponse)

	if err != nil {
		return err
	}

	*o = InitialDeviceACLResponse(varInitialDeviceACLResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "aclTemplate")
		delete(additionalProperties, "mgmtAclTemplate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInitialDeviceACLResponse struct {
	value *InitialDeviceACLResponse
	isSet bool
}

func (v NullableInitialDeviceACLResponse) Get() *InitialDeviceACLResponse {
	return v.value
}

func (v *NullableInitialDeviceACLResponse) Set(val *InitialDeviceACLResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInitialDeviceACLResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInitialDeviceACLResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitialDeviceACLResponse(val *InitialDeviceACLResponse) *NullableInitialDeviceACLResponse {
	return &NullableInitialDeviceACLResponse{value: val, isSet: true}
}

func (v NullableInitialDeviceACLResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitialDeviceACLResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
