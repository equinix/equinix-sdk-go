/*
Network Edge APIs

Testing Layer2ConnectionsServiceProfilesApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package networkedgev1

import (
	"context"
	"testing"

	openapiclient "github.com/equinix/equinix-sdk-go/services/networkedgev1"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_networkedgev1_Layer2ConnectionsServiceProfilesApiService(t *testing.T) {
	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test Layer2ConnectionsServiceProfilesApiService CreateConnectionUsingPOST", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.Layer2ConnectionsServiceProfilesApi.CreateConnectionUsingPOST(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test Layer2ConnectionsServiceProfilesApiService DeleteConnectionUsingDELETE", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var uuid string

		resp, httpRes, err := apiClient.Layer2ConnectionsServiceProfilesApi.DeleteConnectionUsingDELETE(context.Background(), uuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test Layer2ConnectionsServiceProfilesApiService GetConnectionByUuidUsingGET", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var uuid string

		resp, httpRes, err := apiClient.Layer2ConnectionsServiceProfilesApi.GetConnectionByUuidUsingGET(context.Background(), uuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test Layer2ConnectionsServiceProfilesApiService GetConnectionsByGET", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.Layer2ConnectionsServiceProfilesApi.GetConnectionsByGET(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test Layer2ConnectionsServiceProfilesApiService GetProfileByIdUsingGET", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var uuid string

		resp, httpRes, err := apiClient.Layer2ConnectionsServiceProfilesApi.GetProfileByIdUsingGET(context.Background(), uuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test Layer2ConnectionsServiceProfilesApiService GetProfilesByMetroUsingGET", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.Layer2ConnectionsServiceProfilesApi.GetProfilesByMetroUsingGET(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test Layer2ConnectionsServiceProfilesApiService PerformUserActionUsingPATCH", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var uuid string

		resp, httpRes, err := apiClient.Layer2ConnectionsServiceProfilesApi.PerformUserActionUsingPATCH(context.Background(), uuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test Layer2ConnectionsServiceProfilesApiService ValidateAuthorizationKeyUsingGET", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.Layer2ConnectionsServiceProfilesApi.ValidateAuthorizationKeyUsingGET(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})
}
