/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the SecondaryDeviceDeleteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecondaryDeviceDeleteRequest{}

// SecondaryDeviceDeleteRequest struct for SecondaryDeviceDeleteRequest
type SecondaryDeviceDeleteRequest struct {
	// Object that holds the secondary deactivation key for a redundant device. If you do not provide a deactivation key for a Palo Alto BYOL device, you must contact your vendor to release the license.
	DeactivationKey      *string `json:"deactivationKey,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SecondaryDeviceDeleteRequest SecondaryDeviceDeleteRequest

// NewSecondaryDeviceDeleteRequest instantiates a new SecondaryDeviceDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecondaryDeviceDeleteRequest() *SecondaryDeviceDeleteRequest {
	this := SecondaryDeviceDeleteRequest{}
	return &this
}

// NewSecondaryDeviceDeleteRequestWithDefaults instantiates a new SecondaryDeviceDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecondaryDeviceDeleteRequestWithDefaults() *SecondaryDeviceDeleteRequest {
	this := SecondaryDeviceDeleteRequest{}
	return &this
}

// GetDeactivationKey returns the DeactivationKey field value if set, zero value otherwise.
func (o *SecondaryDeviceDeleteRequest) GetDeactivationKey() string {
	if o == nil || IsNil(o.DeactivationKey) {
		var ret string
		return ret
	}
	return *o.DeactivationKey
}

// GetDeactivationKeyOk returns a tuple with the DeactivationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecondaryDeviceDeleteRequest) GetDeactivationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.DeactivationKey) {
		return nil, false
	}
	return o.DeactivationKey, true
}

// HasDeactivationKey returns a boolean if a field has been set.
func (o *SecondaryDeviceDeleteRequest) HasDeactivationKey() bool {
	if o != nil && !IsNil(o.DeactivationKey) {
		return true
	}

	return false
}

// SetDeactivationKey gets a reference to the given string and assigns it to the DeactivationKey field.
func (o *SecondaryDeviceDeleteRequest) SetDeactivationKey(v string) {
	o.DeactivationKey = &v
}

func (o SecondaryDeviceDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecondaryDeviceDeleteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeactivationKey) {
		toSerialize["deactivationKey"] = o.DeactivationKey
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SecondaryDeviceDeleteRequest) UnmarshalJSON(data []byte) (err error) {
	varSecondaryDeviceDeleteRequest := _SecondaryDeviceDeleteRequest{}

	err = json.Unmarshal(data, &varSecondaryDeviceDeleteRequest)

	if err != nil {
		return err
	}

	*o = SecondaryDeviceDeleteRequest(varSecondaryDeviceDeleteRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "deactivationKey")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecondaryDeviceDeleteRequest struct {
	value *SecondaryDeviceDeleteRequest
	isSet bool
}

func (v NullableSecondaryDeviceDeleteRequest) Get() *SecondaryDeviceDeleteRequest {
	return v.value
}

func (v *NullableSecondaryDeviceDeleteRequest) Set(val *SecondaryDeviceDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSecondaryDeviceDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSecondaryDeviceDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecondaryDeviceDeleteRequest(val *SecondaryDeviceDeleteRequest) *NullableSecondaryDeviceDeleteRequest {
	return &NullableSecondaryDeviceDeleteRequest{value: val, isSet: true}
}

func (v NullableSecondaryDeviceDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecondaryDeviceDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
