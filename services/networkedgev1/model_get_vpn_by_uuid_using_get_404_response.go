/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
	"fmt"
)

// GetVpnByUuidUsingGET404Response the model 'GetVpnByUuidUsingGET404Response'
type GetVpnByUuidUsingGET404Response string

// List of getVpnByUuidUsingGET_404_response
const (
	GETVPNBYUUIDUSINGGET404RESPONSE_INTERNAL_SERVER_ERROR             GetVpnByUuidUsingGET404Response = "INTERNAL_SERVER_ERROR"
	GETVPNBYUUIDUSINGGET404RESPONSE_INVALID_JSON_FORMAT               GetVpnByUuidUsingGET404Response = "INVALID_JSON_FORMAT"
	GETVPNBYUUIDUSINGGET404RESPONSE_RESOURCE_NOT_FOUND                GetVpnByUuidUsingGET404Response = "RESOURCE_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_UNAUTHORIZED_USER                 GetVpnByUuidUsingGET404Response = "UNAUTHORIZED_USER"
	GETVPNBYUUIDUSINGGET404RESPONSE_INVALID_REQUEST_FORMAT            GetVpnByUuidUsingGET404Response = "INVALID_REQUEST_FORMAT"
	GETVPNBYUUIDUSINGGET404RESPONSE_ZONE_NOT_FOUND                    GetVpnByUuidUsingGET404Response = "ZONE_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_SOURCE_ZONE_NOT_FOUND             GetVpnByUuidUsingGET404Response = "SOURCE_ZONE_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_DESTINATION_ZONE_NOT_FOUND        GetVpnByUuidUsingGET404Response = "DESTINATION_ZONE_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_ZONES_NOT_PART_SAME_DEVICE        GetVpnByUuidUsingGET404Response = "ZONES_NOT_PART_SAME_DEVICE"
	GETVPNBYUUIDUSINGGET404RESPONSE_CONNECTION_ALREADY_PART_OF_ZONE   GetVpnByUuidUsingGET404Response = "CONNECTION_ALREADY_PART_OF_ZONE"
	GETVPNBYUUIDUSINGGET404RESPONSE_ZONE_PART_OF_FIREWALL             GetVpnByUuidUsingGET404Response = "ZONE_PART_OF_FIREWALL"
	GETVPNBYUUIDUSINGGET404RESPONSE_CONNECTION_NOT_AVAILABLE          GetVpnByUuidUsingGET404Response = "CONNECTION_NOT_AVAILABLE"
	GETVPNBYUUIDUSINGGET404RESPONSE_ZONE_ALREADY_EXISTS               GetVpnByUuidUsingGET404Response = "ZONE_ALREADY_EXISTS"
	GETVPNBYUUIDUSINGGET404RESPONSE_FIREWALL_NOT_FOUND                GetVpnByUuidUsingGET404Response = "FIREWALL_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_FIREWALL_ALREADY_EXISTS           GetVpnByUuidUsingGET404Response = "FIREWALL_ALREADY_EXISTS"
	GETVPNBYUUIDUSINGGET404RESPONSE_RULE_ALREADY_EXISTS               GetVpnByUuidUsingGET404Response = "RULE_ALREADY_EXISTS"
	GETVPNBYUUIDUSINGGET404RESPONSE_RULE_NOT_FOUND                    GetVpnByUuidUsingGET404Response = "RULE_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_RULE_NOT_PART_OF_FIREWALL         GetVpnByUuidUsingGET404Response = "RULE_NOT_PART_OF_FIREWALL"
	GETVPNBYUUIDUSINGGET404RESPONSE_VIRTUAL_DEVICE_NOT_FOUND          GetVpnByUuidUsingGET404Response = "VIRTUAL_DEVICE_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_VIRTUAL_DEVICE_NOT_PROVISIONED    GetVpnByUuidUsingGET404Response = "VIRTUAL_DEVICE_NOT_PROVISIONED"
	GETVPNBYUUIDUSINGGET404RESPONSE_DEVICE_LICENSE_NOT_REGISTERED     GetVpnByUuidUsingGET404Response = "DEVICE_LICENSE_NOT_REGISTERED"
	GETVPNBYUUIDUSINGGET404RESPONSE_MGMT_INTERFACE_NOT_AVAILABLE      GetVpnByUuidUsingGET404Response = "MGMT_INTERFACE_NOT_AVAILABLE"
	GETVPNBYUUIDUSINGGET404RESPONSE_INTERFACE_NOT_AVAILABLE           GetVpnByUuidUsingGET404Response = "INTERFACE_NOT_AVAILABLE"
	GETVPNBYUUIDUSINGGET404RESPONSE_INTERFACE_NOT_PROVISIONED         GetVpnByUuidUsingGET404Response = "INTERFACE_NOT_PROVISIONED"
	GETVPNBYUUIDUSINGGET404RESPONSE_NAT_CONFIG_ALREADY_EXISTS         GetVpnByUuidUsingGET404Response = "NAT_CONFIG_ALREADY_EXISTS"
	GETVPNBYUUIDUSINGGET404RESPONSE_NAT_CONFIG_NOT_FOUND              GetVpnByUuidUsingGET404Response = "NAT_CONFIG_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_ADD_NAT_CONFIG_FAILED             GetVpnByUuidUsingGET404Response = "ADD_NAT_CONFIG_FAILED"
	GETVPNBYUUIDUSINGGET404RESPONSE_EDIT_NAT_CONFIG_FAILED            GetVpnByUuidUsingGET404Response = "EDIT_NAT_CONFIG_FAILED"
	GETVPNBYUUIDUSINGGET404RESPONSE_REMOVE_NAT_CONFIG_FAILED          GetVpnByUuidUsingGET404Response = "REMOVE_NAT_CONFIG_FAILED"
	GETVPNBYUUIDUSINGGET404RESPONSE_NAT_POOL_TYPE_CHANGE_DISABLED     GetVpnByUuidUsingGET404Response = "NAT_POOL_TYPE_CHANGE_DISABLED"
	GETVPNBYUUIDUSINGGET404RESPONSE_INVALID_ACTION_TYPE               GetVpnByUuidUsingGET404Response = "INVALID_ACTION_TYPE"
	GETVPNBYUUIDUSINGGET404RESPONSE_INVALID_ADD_ACTION                GetVpnByUuidUsingGET404Response = "INVALID_ADD_ACTION"
	GETVPNBYUUIDUSINGGET404RESPONSE_INVALID_MODIFY_ACTION             GetVpnByUuidUsingGET404Response = "INVALID_MODIFY_ACTION"
	GETVPNBYUUIDUSINGGET404RESPONSE_INVALID_STATIC_NAT_UUID           GetVpnByUuidUsingGET404Response = "INVALID_STATIC_NAT_UUID"
	GETVPNBYUUIDUSINGGET404RESPONSE_OVERLAP_IP_CONFLICT               GetVpnByUuidUsingGET404Response = "OVERLAP_IP_CONFLICT"
	GETVPNBYUUIDUSINGGET404RESPONSE_CONNECTION_NOT_FOUND              GetVpnByUuidUsingGET404Response = "CONNECTION_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_NOT_FOUND                     GetVpnByUuidUsingGET404Response = "BGP_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_INVALID_IP_ADDRESS                GetVpnByUuidUsingGET404Response = "INVALID_IP_ADDRESS"
	GETVPNBYUUIDUSINGGET404RESPONSE_INVALID_NETWORK_SERVICE_TYPE      GetVpnByUuidUsingGET404Response = "INVALID_NETWORK_SERVICE_TYPE"
	GETVPNBYUUIDUSINGGET404RESPONSE_IBX_NOT_FOUND                     GetVpnByUuidUsingGET404Response = "IBX_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_PRICE_SERVICE_REQUEST_INVALID     GetVpnByUuidUsingGET404Response = "PRICE_SERVICE_REQUEST_INVALID"
	GETVPNBYUUIDUSINGGET404RESPONSE_PRICE_SERVICE_REQUEST_FAILED      GetVpnByUuidUsingGET404Response = "PRICE_SERVICE_REQUEST_FAILED"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_CONFIG_NOT_FOUND              GetVpnByUuidUsingGET404Response = "BGP_CONFIG_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_NEIGHBOR_INFO_NOT_FOUND       GetVpnByUuidUsingGET404Response = "BGP_NEIGHBOR_INFO_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_LOCAL_IP_ADDRESS_NOT_IN_RANGE     GetVpnByUuidUsingGET404Response = "LOCAL_IP_ADDRESS_NOT_IN_RANGE"
	GETVPNBYUUIDUSINGGET404RESPONSE_REMOTE_IP_ADDRESS_NOT_IN_RANGE    GetVpnByUuidUsingGET404Response = "REMOTE_IP_ADDRESS_NOT_IN_RANGE"
	GETVPNBYUUIDUSINGGET404RESPONSE_CONNECTION_DEVICE_NOT_FOUND       GetVpnByUuidUsingGET404Response = "CONNECTION_DEVICE_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_CONNECTION_NOT_PROVISIONED        GetVpnByUuidUsingGET404Response = "CONNECTION_NOT_PROVISIONED"
	GETVPNBYUUIDUSINGGET404RESPONSE_BROADCAST_ADDRESS_NOT_ALLOWED     GetVpnByUuidUsingGET404Response = "BROADCAST_ADDRESS_NOT_ALLOWED"
	GETVPNBYUUIDUSINGGET404RESPONSE_NETWORK_ADDRESS_NOT_ALLOWED       GetVpnByUuidUsingGET404Response = "NETWORK_ADDRESS_NOT_ALLOWED"
	GETVPNBYUUIDUSINGGET404RESPONSE_OVERLAP_LOCAL_IP_ADDRESS          GetVpnByUuidUsingGET404Response = "OVERLAP_LOCAL_IP_ADDRESS"
	GETVPNBYUUIDUSINGGET404RESPONSE_DATA_INTERFACE_NOT_AVAILABLE      GetVpnByUuidUsingGET404Response = "DATA_INTERFACE_NOT_AVAILABLE"
	GETVPNBYUUIDUSINGGET404RESPONSE_ADD_BGP_CONFIG_FAILED             GetVpnByUuidUsingGET404Response = "ADD_BGP_CONFIG_FAILED"
	GETVPNBYUUIDUSINGGET404RESPONSE_REMOVE_BGP_CONFIG_FAILED          GetVpnByUuidUsingGET404Response = "REMOVE_BGP_CONFIG_FAILED"
	GETVPNBYUUIDUSINGGET404RESPONSE_INTERFACE_NOT_FOUND               GetVpnByUuidUsingGET404Response = "INTERFACE_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_UPDATE_BGP_CONFIG_FAILED          GetVpnByUuidUsingGET404Response = "UPDATE_BGP_CONFIG_FAILED"
	GETVPNBYUUIDUSINGGET404RESPONSE_EXISTING_CONNECTION_BGP           GetVpnByUuidUsingGET404Response = "EXISTING_CONNECTION_BGP"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_EXISTING_NAT_SERVICES         GetVpnByUuidUsingGET404Response = "BGP_EXISTING_NAT_SERVICES"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_EXISTING_FIREWALL_SERVICES    GetVpnByUuidUsingGET404Response = "BGP_EXISTING_FIREWALL_SERVICES"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_UPDATE_NOT_ALLOWED            GetVpnByUuidUsingGET404Response = "BGP_UPDATE_NOT_ALLOWED"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_EXISTING_VPN_SERVICES         GetVpnByUuidUsingGET404Response = "BGP_EXISTING_VPN_SERVICES"
	GETVPNBYUUIDUSINGGET404RESPONSE_REMOTE_LOCAL_SAME_IP_ADDRESS      GetVpnByUuidUsingGET404Response = "REMOTE_LOCAL_SAME_IP_ADDRESS"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_FAILED_ASN_UPDATE             GetVpnByUuidUsingGET404Response = "BGP_FAILED_ASN_UPDATE"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_FAILED_INTERFACE_DESC         GetVpnByUuidUsingGET404Response = "BGP_FAILED_INTERFACE_DESC"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_NSO_FAILED_FETCH              GetVpnByUuidUsingGET404Response = "BGP_NSO_FAILED_FETCH"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_NSO_FAILED_UPDATE             GetVpnByUuidUsingGET404Response = "BGP_NSO_FAILED_UPDATE"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_FAILED_VPN_UPDATE             GetVpnByUuidUsingGET404Response = "BGP_FAILED_VPN_UPDATE"
	GETVPNBYUUIDUSINGGET404RESPONSE_BGP_RETRY_FAILED                  GetVpnByUuidUsingGET404Response = "BGP_RETRY_FAILED"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_NAME_ALREADY_IN_USE           GetVpnByUuidUsingGET404Response = "VPN_NAME_ALREADY_IN_USE"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_DEVICE_NOT_FOUND              GetVpnByUuidUsingGET404Response = "VPN_DEVICE_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_DEVICE_USER_KEY_MISMATCH      GetVpnByUuidUsingGET404Response = "VPN_DEVICE_USER_KEY_MISMATCH"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_DEVICE_NOT_REGISTERED         GetVpnByUuidUsingGET404Response = "VPN_DEVICE_NOT_REGISTERED"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_NO_CONFIGURED_CLOUD_BGP_FOUND GetVpnByUuidUsingGET404Response = "VPN_NO_CONFIGURED_CLOUD_BGP_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_DEVICE_ASN_NOT_CONFIGURED     GetVpnByUuidUsingGET404Response = "VPN_DEVICE_ASN_NOT_CONFIGURED"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_MATCHING_ASN                  GetVpnByUuidUsingGET404Response = "VPN_MATCHING_ASN"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_LIMIT_EXCEEDED                GetVpnByUuidUsingGET404Response = "VPN_LIMIT_EXCEEDED"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_NO_INTERFACES_FOUND           GetVpnByUuidUsingGET404Response = "VPN_NO_INTERFACES_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_SSH_INTERFACE_ID_NOT_FOUND    GetVpnByUuidUsingGET404Response = "VPN_SSH_INTERFACE_ID_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_INVALID_SSH_INTERFACE_ID      GetVpnByUuidUsingGET404Response = "VPN_INVALID_SSH_INTERFACE_ID"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_CONFIG_NOT_FOUND              GetVpnByUuidUsingGET404Response = "VPN_CONFIG_NOT_FOUND"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_NSO_CREATE_TRANSIENT_FAILURE  GetVpnByUuidUsingGET404Response = "VPN_NSO_CREATE_TRANSIENT_FAILURE"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_NSO_CREATE_PERMANENT_FAILURE  GetVpnByUuidUsingGET404Response = "VPN_NSO_CREATE_PERMANENT_FAILURE"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_NSO_DELETE_TRANSIENT_FAILURE  GetVpnByUuidUsingGET404Response = "VPN_NSO_DELETE_TRANSIENT_FAILURE"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_NSO_DELETE_PERMANENT_FAILURE  GetVpnByUuidUsingGET404Response = "VPN_NSO_DELETE_PERMANENT_FAILURE"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_PEER_IP_ALREADY_IN_USE        GetVpnByUuidUsingGET404Response = "VPN_PEER_IP_ALREADY_IN_USE"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_DEVICE_MISSING_IPSEC_PACKAGE  GetVpnByUuidUsingGET404Response = "VPN_DEVICE_MISSING_IPSEC_PACKAGE"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_INVALID_STATUS_LIST           GetVpnByUuidUsingGET404Response = "VPN_INVALID_STATUS_LIST"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_RESTRICTED_ASN                GetVpnByUuidUsingGET404Response = "VPN_RESTRICTED_ASN"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_UNAUTHORIZED_ACCESS           GetVpnByUuidUsingGET404Response = "VPN_UNAUTHORIZED_ACCESS"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_ALREADY_DELETED               GetVpnByUuidUsingGET404Response = "VPN_ALREADY_DELETED"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_RESTRICTED_IP_ADDRESS         GetVpnByUuidUsingGET404Response = "VPN_RESTRICTED_IP_ADDRESS"
	GETVPNBYUUIDUSINGGET404RESPONSE_VPN_DEVICE_NOT_IN_READY_STATE     GetVpnByUuidUsingGET404Response = "VPN_DEVICE_NOT_IN_READY_STATE"
)

// All allowed values of GetVpnByUuidUsingGET404Response enum
var AllowedGetVpnByUuidUsingGET404ResponseEnumValues = []GetVpnByUuidUsingGET404Response{
	"INTERNAL_SERVER_ERROR",
	"INVALID_JSON_FORMAT",
	"RESOURCE_NOT_FOUND",
	"UNAUTHORIZED_USER",
	"INVALID_REQUEST_FORMAT",
	"ZONE_NOT_FOUND",
	"SOURCE_ZONE_NOT_FOUND",
	"DESTINATION_ZONE_NOT_FOUND",
	"ZONES_NOT_PART_SAME_DEVICE",
	"CONNECTION_ALREADY_PART_OF_ZONE",
	"ZONE_PART_OF_FIREWALL",
	"CONNECTION_NOT_AVAILABLE",
	"ZONE_ALREADY_EXISTS",
	"FIREWALL_NOT_FOUND",
	"FIREWALL_ALREADY_EXISTS",
	"RULE_ALREADY_EXISTS",
	"RULE_NOT_FOUND",
	"RULE_NOT_PART_OF_FIREWALL",
	"VIRTUAL_DEVICE_NOT_FOUND",
	"VIRTUAL_DEVICE_NOT_PROVISIONED",
	"DEVICE_LICENSE_NOT_REGISTERED",
	"MGMT_INTERFACE_NOT_AVAILABLE",
	"INTERFACE_NOT_AVAILABLE",
	"INTERFACE_NOT_PROVISIONED",
	"NAT_CONFIG_ALREADY_EXISTS",
	"NAT_CONFIG_NOT_FOUND",
	"ADD_NAT_CONFIG_FAILED",
	"EDIT_NAT_CONFIG_FAILED",
	"REMOVE_NAT_CONFIG_FAILED",
	"NAT_POOL_TYPE_CHANGE_DISABLED",
	"INVALID_ACTION_TYPE",
	"INVALID_ADD_ACTION",
	"INVALID_MODIFY_ACTION",
	"INVALID_STATIC_NAT_UUID",
	"OVERLAP_IP_CONFLICT",
	"CONNECTION_NOT_FOUND",
	"BGP_NOT_FOUND",
	"INVALID_IP_ADDRESS",
	"INVALID_NETWORK_SERVICE_TYPE",
	"IBX_NOT_FOUND",
	"PRICE_SERVICE_REQUEST_INVALID",
	"PRICE_SERVICE_REQUEST_FAILED",
	"BGP_CONFIG_NOT_FOUND",
	"BGP_NEIGHBOR_INFO_NOT_FOUND",
	"LOCAL_IP_ADDRESS_NOT_IN_RANGE",
	"REMOTE_IP_ADDRESS_NOT_IN_RANGE",
	"CONNECTION_DEVICE_NOT_FOUND",
	"CONNECTION_NOT_PROVISIONED",
	"BROADCAST_ADDRESS_NOT_ALLOWED",
	"NETWORK_ADDRESS_NOT_ALLOWED",
	"OVERLAP_LOCAL_IP_ADDRESS",
	"DATA_INTERFACE_NOT_AVAILABLE",
	"ADD_BGP_CONFIG_FAILED",
	"REMOVE_BGP_CONFIG_FAILED",
	"INTERFACE_NOT_FOUND",
	"UPDATE_BGP_CONFIG_FAILED",
	"EXISTING_CONNECTION_BGP",
	"BGP_EXISTING_NAT_SERVICES",
	"BGP_EXISTING_FIREWALL_SERVICES",
	"BGP_UPDATE_NOT_ALLOWED",
	"BGP_EXISTING_VPN_SERVICES",
	"REMOTE_LOCAL_SAME_IP_ADDRESS",
	"BGP_FAILED_ASN_UPDATE",
	"BGP_FAILED_INTERFACE_DESC",
	"BGP_NSO_FAILED_FETCH",
	"BGP_NSO_FAILED_UPDATE",
	"BGP_FAILED_VPN_UPDATE",
	"BGP_RETRY_FAILED",
	"VPN_NAME_ALREADY_IN_USE",
	"VPN_DEVICE_NOT_FOUND",
	"VPN_DEVICE_USER_KEY_MISMATCH",
	"VPN_DEVICE_NOT_REGISTERED",
	"VPN_NO_CONFIGURED_CLOUD_BGP_FOUND",
	"VPN_DEVICE_ASN_NOT_CONFIGURED",
	"VPN_MATCHING_ASN",
	"VPN_LIMIT_EXCEEDED",
	"VPN_NO_INTERFACES_FOUND",
	"VPN_SSH_INTERFACE_ID_NOT_FOUND",
	"VPN_INVALID_SSH_INTERFACE_ID",
	"VPN_CONFIG_NOT_FOUND",
	"VPN_NSO_CREATE_TRANSIENT_FAILURE",
	"VPN_NSO_CREATE_PERMANENT_FAILURE",
	"VPN_NSO_DELETE_TRANSIENT_FAILURE",
	"VPN_NSO_DELETE_PERMANENT_FAILURE",
	"VPN_PEER_IP_ALREADY_IN_USE",
	"VPN_DEVICE_MISSING_IPSEC_PACKAGE",
	"VPN_INVALID_STATUS_LIST",
	"VPN_RESTRICTED_ASN",
	"VPN_UNAUTHORIZED_ACCESS",
	"VPN_ALREADY_DELETED",
	"VPN_RESTRICTED_IP_ADDRESS",
	"VPN_DEVICE_NOT_IN_READY_STATE",
}

func (v *GetVpnByUuidUsingGET404Response) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetVpnByUuidUsingGET404Response(value)
	for _, existing := range AllowedGetVpnByUuidUsingGET404ResponseEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetVpnByUuidUsingGET404Response", value)
}

// NewGetVpnByUuidUsingGET404ResponseFromValue returns a pointer to a valid GetVpnByUuidUsingGET404Response
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetVpnByUuidUsingGET404ResponseFromValue(v string) (*GetVpnByUuidUsingGET404Response, error) {
	ev := GetVpnByUuidUsingGET404Response(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetVpnByUuidUsingGET404Response: valid values are %v", v, AllowedGetVpnByUuidUsingGET404ResponseEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetVpnByUuidUsingGET404Response) IsValid() bool {
	for _, existing := range AllowedGetVpnByUuidUsingGET404ResponseEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to getVpnByUuidUsingGET_404_response value
func (v GetVpnByUuidUsingGET404Response) Ptr() *GetVpnByUuidUsingGET404Response {
	return &v
}

type NullableGetVpnByUuidUsingGET404Response struct {
	value *GetVpnByUuidUsingGET404Response
	isSet bool
}

func (v NullableGetVpnByUuidUsingGET404Response) Get() *GetVpnByUuidUsingGET404Response {
	return v.value
}

func (v *NullableGetVpnByUuidUsingGET404Response) Set(val *GetVpnByUuidUsingGET404Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVpnByUuidUsingGET404Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVpnByUuidUsingGET404Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVpnByUuidUsingGET404Response(val *GetVpnByUuidUsingGET404Response) *NullableGetVpnByUuidUsingGET404Response {
	return &NullableGetVpnByUuidUsingGET404Response{value: val, isSet: true}
}

func (v NullableGetVpnByUuidUsingGET404Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVpnByUuidUsingGET404Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
