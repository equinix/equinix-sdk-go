/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the GetServProfServicesRespContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetServProfServicesRespContent{}

// GetServProfServicesRespContent struct for GetServProfServicesRespContent
type GetServProfServicesRespContent struct {
	Uuid                 *string                                 `json:"uuid,omitempty"`
	Name                 *string                                 `json:"name,omitempty"`
	AuthKeyLabel         *string                                 `json:"authKeyLabel,omitempty"`
	ConnectionNameLabel  *string                                 `json:"connectionNameLabel,omitempty"`
	RequiredRedundancy   *bool                                   `json:"requiredRedundancy,omitempty"`
	AllowCustomSpeed     *bool                                   `json:"allowCustomSpeed,omitempty"`
	SpeedBands           []SpeedBand                             `json:"speedBands,omitempty"`
	Metros               *GetServProfServicesRespContentMetros   `json:"metros,omitempty"`
	CreatedDate          *string                                 `json:"createdDate,omitempty"`
	CreatedBy            *string                                 `json:"createdBy,omitempty"`
	LastUpdatedDate      *string                                 `json:"lastUpdatedDate,omitempty"`
	LastUpdatedBy        *string                                 `json:"lastUpdatedBy,omitempty"`
	VlanSameAsPrimary    *bool                                   `json:"vlanSameAsPrimary,omitempty"`
	TagType              *string                                 `json:"tagType,omitempty"`
	CtagLabel            *string                                 `json:"ctagLabel,omitempty"`
	ApiAvailable         *bool                                   `json:"apiAvailable,omitempty"`
	SelfProfile          *bool                                   `json:"selfProfile,omitempty"`
	ProfileEncapsulation *string                                 `json:"profileEncapsulation,omitempty"`
	AuthorizationKey     *string                                 `json:"authorizationKey,omitempty"`
	OrganizationName     *string                                 `json:"organizationName,omitempty"`
	Private              *bool                                   `json:"private,omitempty"`
	Features             *GetServProfServicesRespContentfeatures `json:"features,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetServProfServicesRespContent GetServProfServicesRespContent

// NewGetServProfServicesRespContent instantiates a new GetServProfServicesRespContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServProfServicesRespContent() *GetServProfServicesRespContent {
	this := GetServProfServicesRespContent{}
	return &this
}

// NewGetServProfServicesRespContentWithDefaults instantiates a new GetServProfServicesRespContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServProfServicesRespContentWithDefaults() *GetServProfServicesRespContent {
	this := GetServProfServicesRespContent{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *GetServProfServicesRespContent) SetUuid(v string) {
	o.Uuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetServProfServicesRespContent) SetName(v string) {
	o.Name = &v
}

// GetAuthKeyLabel returns the AuthKeyLabel field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetAuthKeyLabel() string {
	if o == nil || IsNil(o.AuthKeyLabel) {
		var ret string
		return ret
	}
	return *o.AuthKeyLabel
}

// GetAuthKeyLabelOk returns a tuple with the AuthKeyLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetAuthKeyLabelOk() (*string, bool) {
	if o == nil || IsNil(o.AuthKeyLabel) {
		return nil, false
	}
	return o.AuthKeyLabel, true
}

// HasAuthKeyLabel returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasAuthKeyLabel() bool {
	if o != nil && !IsNil(o.AuthKeyLabel) {
		return true
	}

	return false
}

// SetAuthKeyLabel gets a reference to the given string and assigns it to the AuthKeyLabel field.
func (o *GetServProfServicesRespContent) SetAuthKeyLabel(v string) {
	o.AuthKeyLabel = &v
}

// GetConnectionNameLabel returns the ConnectionNameLabel field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetConnectionNameLabel() string {
	if o == nil || IsNil(o.ConnectionNameLabel) {
		var ret string
		return ret
	}
	return *o.ConnectionNameLabel
}

// GetConnectionNameLabelOk returns a tuple with the ConnectionNameLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetConnectionNameLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionNameLabel) {
		return nil, false
	}
	return o.ConnectionNameLabel, true
}

// HasConnectionNameLabel returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasConnectionNameLabel() bool {
	if o != nil && !IsNil(o.ConnectionNameLabel) {
		return true
	}

	return false
}

// SetConnectionNameLabel gets a reference to the given string and assigns it to the ConnectionNameLabel field.
func (o *GetServProfServicesRespContent) SetConnectionNameLabel(v string) {
	o.ConnectionNameLabel = &v
}

// GetRequiredRedundancy returns the RequiredRedundancy field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetRequiredRedundancy() bool {
	if o == nil || IsNil(o.RequiredRedundancy) {
		var ret bool
		return ret
	}
	return *o.RequiredRedundancy
}

// GetRequiredRedundancyOk returns a tuple with the RequiredRedundancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetRequiredRedundancyOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiredRedundancy) {
		return nil, false
	}
	return o.RequiredRedundancy, true
}

// HasRequiredRedundancy returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasRequiredRedundancy() bool {
	if o != nil && !IsNil(o.RequiredRedundancy) {
		return true
	}

	return false
}

// SetRequiredRedundancy gets a reference to the given bool and assigns it to the RequiredRedundancy field.
func (o *GetServProfServicesRespContent) SetRequiredRedundancy(v bool) {
	o.RequiredRedundancy = &v
}

// GetAllowCustomSpeed returns the AllowCustomSpeed field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetAllowCustomSpeed() bool {
	if o == nil || IsNil(o.AllowCustomSpeed) {
		var ret bool
		return ret
	}
	return *o.AllowCustomSpeed
}

// GetAllowCustomSpeedOk returns a tuple with the AllowCustomSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetAllowCustomSpeedOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCustomSpeed) {
		return nil, false
	}
	return o.AllowCustomSpeed, true
}

// HasAllowCustomSpeed returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasAllowCustomSpeed() bool {
	if o != nil && !IsNil(o.AllowCustomSpeed) {
		return true
	}

	return false
}

// SetAllowCustomSpeed gets a reference to the given bool and assigns it to the AllowCustomSpeed field.
func (o *GetServProfServicesRespContent) SetAllowCustomSpeed(v bool) {
	o.AllowCustomSpeed = &v
}

// GetSpeedBands returns the SpeedBands field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetSpeedBands() []SpeedBand {
	if o == nil || IsNil(o.SpeedBands) {
		var ret []SpeedBand
		return ret
	}
	return o.SpeedBands
}

// GetSpeedBandsOk returns a tuple with the SpeedBands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetSpeedBandsOk() ([]SpeedBand, bool) {
	if o == nil || IsNil(o.SpeedBands) {
		return nil, false
	}
	return o.SpeedBands, true
}

// HasSpeedBands returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasSpeedBands() bool {
	if o != nil && !IsNil(o.SpeedBands) {
		return true
	}

	return false
}

// SetSpeedBands gets a reference to the given []SpeedBand and assigns it to the SpeedBands field.
func (o *GetServProfServicesRespContent) SetSpeedBands(v []SpeedBand) {
	o.SpeedBands = v
}

// GetMetros returns the Metros field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetMetros() GetServProfServicesRespContentMetros {
	if o == nil || IsNil(o.Metros) {
		var ret GetServProfServicesRespContentMetros
		return ret
	}
	return *o.Metros
}

// GetMetrosOk returns a tuple with the Metros field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetMetrosOk() (*GetServProfServicesRespContentMetros, bool) {
	if o == nil || IsNil(o.Metros) {
		return nil, false
	}
	return o.Metros, true
}

// HasMetros returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasMetros() bool {
	if o != nil && !IsNil(o.Metros) {
		return true
	}

	return false
}

// SetMetros gets a reference to the given GetServProfServicesRespContentMetros and assigns it to the Metros field.
func (o *GetServProfServicesRespContent) SetMetros(v GetServProfServicesRespContentMetros) {
	o.Metros = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *GetServProfServicesRespContent) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *GetServProfServicesRespContent) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLastUpdatedDate returns the LastUpdatedDate field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetLastUpdatedDate() string {
	if o == nil || IsNil(o.LastUpdatedDate) {
		var ret string
		return ret
	}
	return *o.LastUpdatedDate
}

// GetLastUpdatedDateOk returns a tuple with the LastUpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetLastUpdatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedDate) {
		return nil, false
	}
	return o.LastUpdatedDate, true
}

// HasLastUpdatedDate returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasLastUpdatedDate() bool {
	if o != nil && !IsNil(o.LastUpdatedDate) {
		return true
	}

	return false
}

// SetLastUpdatedDate gets a reference to the given string and assigns it to the LastUpdatedDate field.
func (o *GetServProfServicesRespContent) SetLastUpdatedDate(v string) {
	o.LastUpdatedDate = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetLastUpdatedBy() string {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret string
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetLastUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given string and assigns it to the LastUpdatedBy field.
func (o *GetServProfServicesRespContent) SetLastUpdatedBy(v string) {
	o.LastUpdatedBy = &v
}

// GetVlanSameAsPrimary returns the VlanSameAsPrimary field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetVlanSameAsPrimary() bool {
	if o == nil || IsNil(o.VlanSameAsPrimary) {
		var ret bool
		return ret
	}
	return *o.VlanSameAsPrimary
}

// GetVlanSameAsPrimaryOk returns a tuple with the VlanSameAsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetVlanSameAsPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.VlanSameAsPrimary) {
		return nil, false
	}
	return o.VlanSameAsPrimary, true
}

// HasVlanSameAsPrimary returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasVlanSameAsPrimary() bool {
	if o != nil && !IsNil(o.VlanSameAsPrimary) {
		return true
	}

	return false
}

// SetVlanSameAsPrimary gets a reference to the given bool and assigns it to the VlanSameAsPrimary field.
func (o *GetServProfServicesRespContent) SetVlanSameAsPrimary(v bool) {
	o.VlanSameAsPrimary = &v
}

// GetTagType returns the TagType field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetTagType() string {
	if o == nil || IsNil(o.TagType) {
		var ret string
		return ret
	}
	return *o.TagType
}

// GetTagTypeOk returns a tuple with the TagType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetTagTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TagType) {
		return nil, false
	}
	return o.TagType, true
}

// HasTagType returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasTagType() bool {
	if o != nil && !IsNil(o.TagType) {
		return true
	}

	return false
}

// SetTagType gets a reference to the given string and assigns it to the TagType field.
func (o *GetServProfServicesRespContent) SetTagType(v string) {
	o.TagType = &v
}

// GetCtagLabel returns the CtagLabel field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetCtagLabel() string {
	if o == nil || IsNil(o.CtagLabel) {
		var ret string
		return ret
	}
	return *o.CtagLabel
}

// GetCtagLabelOk returns a tuple with the CtagLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetCtagLabelOk() (*string, bool) {
	if o == nil || IsNil(o.CtagLabel) {
		return nil, false
	}
	return o.CtagLabel, true
}

// HasCtagLabel returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasCtagLabel() bool {
	if o != nil && !IsNil(o.CtagLabel) {
		return true
	}

	return false
}

// SetCtagLabel gets a reference to the given string and assigns it to the CtagLabel field.
func (o *GetServProfServicesRespContent) SetCtagLabel(v string) {
	o.CtagLabel = &v
}

// GetApiAvailable returns the ApiAvailable field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetApiAvailable() bool {
	if o == nil || IsNil(o.ApiAvailable) {
		var ret bool
		return ret
	}
	return *o.ApiAvailable
}

// GetApiAvailableOk returns a tuple with the ApiAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetApiAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.ApiAvailable) {
		return nil, false
	}
	return o.ApiAvailable, true
}

// HasApiAvailable returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasApiAvailable() bool {
	if o != nil && !IsNil(o.ApiAvailable) {
		return true
	}

	return false
}

// SetApiAvailable gets a reference to the given bool and assigns it to the ApiAvailable field.
func (o *GetServProfServicesRespContent) SetApiAvailable(v bool) {
	o.ApiAvailable = &v
}

// GetSelfProfile returns the SelfProfile field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetSelfProfile() bool {
	if o == nil || IsNil(o.SelfProfile) {
		var ret bool
		return ret
	}
	return *o.SelfProfile
}

// GetSelfProfileOk returns a tuple with the SelfProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetSelfProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.SelfProfile) {
		return nil, false
	}
	return o.SelfProfile, true
}

// HasSelfProfile returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasSelfProfile() bool {
	if o != nil && !IsNil(o.SelfProfile) {
		return true
	}

	return false
}

// SetSelfProfile gets a reference to the given bool and assigns it to the SelfProfile field.
func (o *GetServProfServicesRespContent) SetSelfProfile(v bool) {
	o.SelfProfile = &v
}

// GetProfileEncapsulation returns the ProfileEncapsulation field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetProfileEncapsulation() string {
	if o == nil || IsNil(o.ProfileEncapsulation) {
		var ret string
		return ret
	}
	return *o.ProfileEncapsulation
}

// GetProfileEncapsulationOk returns a tuple with the ProfileEncapsulation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetProfileEncapsulationOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileEncapsulation) {
		return nil, false
	}
	return o.ProfileEncapsulation, true
}

// HasProfileEncapsulation returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasProfileEncapsulation() bool {
	if o != nil && !IsNil(o.ProfileEncapsulation) {
		return true
	}

	return false
}

// SetProfileEncapsulation gets a reference to the given string and assigns it to the ProfileEncapsulation field.
func (o *GetServProfServicesRespContent) SetProfileEncapsulation(v string) {
	o.ProfileEncapsulation = &v
}

// GetAuthorizationKey returns the AuthorizationKey field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetAuthorizationKey() string {
	if o == nil || IsNil(o.AuthorizationKey) {
		var ret string
		return ret
	}
	return *o.AuthorizationKey
}

// GetAuthorizationKeyOk returns a tuple with the AuthorizationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetAuthorizationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationKey) {
		return nil, false
	}
	return o.AuthorizationKey, true
}

// HasAuthorizationKey returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasAuthorizationKey() bool {
	if o != nil && !IsNil(o.AuthorizationKey) {
		return true
	}

	return false
}

// SetAuthorizationKey gets a reference to the given string and assigns it to the AuthorizationKey field.
func (o *GetServProfServicesRespContent) SetAuthorizationKey(v string) {
	o.AuthorizationKey = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *GetServProfServicesRespContent) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetPrivate() bool {
	if o == nil || IsNil(o.Private) {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.Private) {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasPrivate() bool {
	if o != nil && !IsNil(o.Private) {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *GetServProfServicesRespContent) SetPrivate(v bool) {
	o.Private = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *GetServProfServicesRespContent) GetFeatures() GetServProfServicesRespContentfeatures {
	if o == nil || IsNil(o.Features) {
		var ret GetServProfServicesRespContentfeatures
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServProfServicesRespContent) GetFeaturesOk() (*GetServProfServicesRespContentfeatures, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *GetServProfServicesRespContent) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given GetServProfServicesRespContentfeatures and assigns it to the Features field.
func (o *GetServProfServicesRespContent) SetFeatures(v GetServProfServicesRespContentfeatures) {
	o.Features = &v
}

func (o GetServProfServicesRespContent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetServProfServicesRespContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AuthKeyLabel) {
		toSerialize["authKeyLabel"] = o.AuthKeyLabel
	}
	if !IsNil(o.ConnectionNameLabel) {
		toSerialize["connectionNameLabel"] = o.ConnectionNameLabel
	}
	if !IsNil(o.RequiredRedundancy) {
		toSerialize["requiredRedundancy"] = o.RequiredRedundancy
	}
	if !IsNil(o.AllowCustomSpeed) {
		toSerialize["allowCustomSpeed"] = o.AllowCustomSpeed
	}
	if !IsNil(o.SpeedBands) {
		toSerialize["speedBands"] = o.SpeedBands
	}
	if !IsNil(o.Metros) {
		toSerialize["metros"] = o.Metros
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.LastUpdatedDate) {
		toSerialize["lastUpdatedDate"] = o.LastUpdatedDate
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.VlanSameAsPrimary) {
		toSerialize["vlanSameAsPrimary"] = o.VlanSameAsPrimary
	}
	if !IsNil(o.TagType) {
		toSerialize["tagType"] = o.TagType
	}
	if !IsNil(o.CtagLabel) {
		toSerialize["ctagLabel"] = o.CtagLabel
	}
	if !IsNil(o.ApiAvailable) {
		toSerialize["apiAvailable"] = o.ApiAvailable
	}
	if !IsNil(o.SelfProfile) {
		toSerialize["selfProfile"] = o.SelfProfile
	}
	if !IsNil(o.ProfileEncapsulation) {
		toSerialize["profileEncapsulation"] = o.ProfileEncapsulation
	}
	if !IsNil(o.AuthorizationKey) {
		toSerialize["authorizationKey"] = o.AuthorizationKey
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.Private) {
		toSerialize["private"] = o.Private
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetServProfServicesRespContent) UnmarshalJSON(data []byte) (err error) {
	varGetServProfServicesRespContent := _GetServProfServicesRespContent{}

	err = json.Unmarshal(data, &varGetServProfServicesRespContent)

	if err != nil {
		return err
	}

	*o = GetServProfServicesRespContent(varGetServProfServicesRespContent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "name")
		delete(additionalProperties, "authKeyLabel")
		delete(additionalProperties, "connectionNameLabel")
		delete(additionalProperties, "requiredRedundancy")
		delete(additionalProperties, "allowCustomSpeed")
		delete(additionalProperties, "speedBands")
		delete(additionalProperties, "metros")
		delete(additionalProperties, "createdDate")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "lastUpdatedDate")
		delete(additionalProperties, "lastUpdatedBy")
		delete(additionalProperties, "vlanSameAsPrimary")
		delete(additionalProperties, "tagType")
		delete(additionalProperties, "ctagLabel")
		delete(additionalProperties, "apiAvailable")
		delete(additionalProperties, "selfProfile")
		delete(additionalProperties, "profileEncapsulation")
		delete(additionalProperties, "authorizationKey")
		delete(additionalProperties, "organizationName")
		delete(additionalProperties, "private")
		delete(additionalProperties, "features")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetServProfServicesRespContent struct {
	value *GetServProfServicesRespContent
	isSet bool
}

func (v NullableGetServProfServicesRespContent) Get() *GetServProfServicesRespContent {
	return v.value
}

func (v *NullableGetServProfServicesRespContent) Set(val *GetServProfServicesRespContent) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServProfServicesRespContent) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServProfServicesRespContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServProfServicesRespContent(val *GetServProfServicesRespContent) *NullableGetServProfServicesRespContent {
	return &NullableGetServProfServicesRespContent{value: val, isSet: true}
}

func (v NullableGetServProfServicesRespContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServProfServicesRespContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
