/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the VirtualDeviceDetailsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualDeviceDetailsResponse{}

// VirtualDeviceDetailsResponse struct for VirtualDeviceDetailsResponse
type VirtualDeviceDetailsResponse struct {
	AccountName        *string `json:"accountName,omitempty"`
	AccountNumber      *string `json:"accountNumber,omitempty"`
	CreatedBy          *string `json:"createdBy,omitempty"`
	CreatedDate        *string `json:"createdDate,omitempty"`
	DeviceSerialNo     *string `json:"deviceSerialNo,omitempty"`
	DeviceTypeCategory *string `json:"deviceTypeCategory,omitempty"`
	// The name of a device that is in a location different from this device.
	DiverseFromDeviceName *string `json:"diverseFromDeviceName,omitempty"`
	// The unique ID of a device that is in a location different from this device.
	DiverseFromDeviceUuid *string                      `json:"diverseFromDeviceUuid,omitempty"`
	DeviceTypeCode        *string                      `json:"deviceTypeCode,omitempty"`
	DeviceTypeName        *string                      `json:"deviceTypeName,omitempty"`
	Expiry                *string                      `json:"expiry,omitempty"`
	Region                *string                      `json:"region,omitempty"`
	DeviceTypeVendor      *string                      `json:"deviceTypeVendor,omitempty"`
	HostName              *string                      `json:"hostName,omitempty"`
	Uuid                  *string                      `json:"uuid,omitempty"`
	LastUpdatedBy         *string                      `json:"lastUpdatedBy,omitempty"`
	LastUpdatedDate       *string                      `json:"lastUpdatedDate,omitempty"`
	LicenseFileId         *string                      `json:"licenseFileId,omitempty"`
	LicenseName           *string                      `json:"licenseName,omitempty"`
	LicenseStatus         *string                      `json:"licenseStatus,omitempty"`
	LicenseType           *string                      `json:"licenseType,omitempty"`
	MetroCode             *string                      `json:"metroCode,omitempty"`
	MetroName             *string                      `json:"metroName,omitempty"`
	Name                  *string                      `json:"name,omitempty"`
	Notifications         []string                     `json:"notifications,omitempty"`
	PackageCode           *string                      `json:"packageCode,omitempty"`
	PackageName           *string                      `json:"packageName,omitempty"`
	Version               *string                      `json:"version,omitempty"`
	PurchaseOrderNumber   *string                      `json:"purchaseOrderNumber,omitempty"`
	RedundancyType        *string                      `json:"redundancyType,omitempty"`
	RedundantUuid         *string                      `json:"redundantUuid,omitempty"`
	Connectivity          *string                      `json:"connectivity,omitempty"`
	SshIpAddress          *string                      `json:"sshIpAddress,omitempty"`
	SshIpFqdn             *string                      `json:"sshIpFqdn,omitempty"`
	SshIpFqdnStatus       *string                      `json:"sshIpFqdnStatus,omitempty"`
	Status                *string                      `json:"status,omitempty"`
	Throughput            *int32                       `json:"throughput,omitempty"`
	ThroughputUnit        *string                      `json:"throughputUnit,omitempty"`
	Core                  *CoresDisplayConfig          `json:"core,omitempty"`
	PricingDetails        *PricingSiebelConfig         `json:"pricingDetails,omitempty"`
	InterfaceCount        *int32                       `json:"interfaceCount,omitempty"`
	DeviceManagementType  *string                      `json:"deviceManagementType,omitempty"`
	UserPublicKey         *UserPublicKeyConfig         `json:"userPublicKey,omitempty"`
	ManagementIp          *string                      `json:"managementIp,omitempty"`
	ManagementGatewayIp   *string                      `json:"managementGatewayIp,omitempty"`
	PublicIp              *string                      `json:"publicIp,omitempty"`
	PublicGatewayIp       *string                      `json:"publicGatewayIp,omitempty"`
	PrimaryDnsName        *string                      `json:"primaryDnsName,omitempty"`
	SecondaryDnsName      *string                      `json:"secondaryDnsName,omitempty"`
	TermLength            *string                      `json:"termLength,omitempty"`
	AdditionalBandwidth   *string                      `json:"additionalBandwidth,omitempty"`
	SiteId                *string                      `json:"siteId,omitempty"`
	SystemIpAddress       *string                      `json:"systemIpAddress,omitempty"`
	VendorConfig          *VendorConfig                `json:"vendorConfig,omitempty"`
	Interfaces            []InterfaceBasicInfoResponse `json:"interfaces,omitempty"`
	// The ASN number.
	Asn *float32 `json:"asn,omitempty"`
	// The name of the channel partner.
	ChannelPartner       *string `json:"channelPartner,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VirtualDeviceDetailsResponse VirtualDeviceDetailsResponse

// NewVirtualDeviceDetailsResponse instantiates a new VirtualDeviceDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualDeviceDetailsResponse() *VirtualDeviceDetailsResponse {
	this := VirtualDeviceDetailsResponse{}
	return &this
}

// NewVirtualDeviceDetailsResponseWithDefaults instantiates a new VirtualDeviceDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualDeviceDetailsResponseWithDefaults() *VirtualDeviceDetailsResponse {
	this := VirtualDeviceDetailsResponse{}
	return &this
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *VirtualDeviceDetailsResponse) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *VirtualDeviceDetailsResponse) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *VirtualDeviceDetailsResponse) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *VirtualDeviceDetailsResponse) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetDeviceSerialNo returns the DeviceSerialNo field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetDeviceSerialNo() string {
	if o == nil || IsNil(o.DeviceSerialNo) {
		var ret string
		return ret
	}
	return *o.DeviceSerialNo
}

// GetDeviceSerialNoOk returns a tuple with the DeviceSerialNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetDeviceSerialNoOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceSerialNo) {
		return nil, false
	}
	return o.DeviceSerialNo, true
}

// HasDeviceSerialNo returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasDeviceSerialNo() bool {
	if o != nil && !IsNil(o.DeviceSerialNo) {
		return true
	}

	return false
}

// SetDeviceSerialNo gets a reference to the given string and assigns it to the DeviceSerialNo field.
func (o *VirtualDeviceDetailsResponse) SetDeviceSerialNo(v string) {
	o.DeviceSerialNo = &v
}

// GetDeviceTypeCategory returns the DeviceTypeCategory field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetDeviceTypeCategory() string {
	if o == nil || IsNil(o.DeviceTypeCategory) {
		var ret string
		return ret
	}
	return *o.DeviceTypeCategory
}

// GetDeviceTypeCategoryOk returns a tuple with the DeviceTypeCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetDeviceTypeCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceTypeCategory) {
		return nil, false
	}
	return o.DeviceTypeCategory, true
}

// HasDeviceTypeCategory returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasDeviceTypeCategory() bool {
	if o != nil && !IsNil(o.DeviceTypeCategory) {
		return true
	}

	return false
}

// SetDeviceTypeCategory gets a reference to the given string and assigns it to the DeviceTypeCategory field.
func (o *VirtualDeviceDetailsResponse) SetDeviceTypeCategory(v string) {
	o.DeviceTypeCategory = &v
}

// GetDiverseFromDeviceName returns the DiverseFromDeviceName field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetDiverseFromDeviceName() string {
	if o == nil || IsNil(o.DiverseFromDeviceName) {
		var ret string
		return ret
	}
	return *o.DiverseFromDeviceName
}

// GetDiverseFromDeviceNameOk returns a tuple with the DiverseFromDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetDiverseFromDeviceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DiverseFromDeviceName) {
		return nil, false
	}
	return o.DiverseFromDeviceName, true
}

// HasDiverseFromDeviceName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasDiverseFromDeviceName() bool {
	if o != nil && !IsNil(o.DiverseFromDeviceName) {
		return true
	}

	return false
}

// SetDiverseFromDeviceName gets a reference to the given string and assigns it to the DiverseFromDeviceName field.
func (o *VirtualDeviceDetailsResponse) SetDiverseFromDeviceName(v string) {
	o.DiverseFromDeviceName = &v
}

// GetDiverseFromDeviceUuid returns the DiverseFromDeviceUuid field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetDiverseFromDeviceUuid() string {
	if o == nil || IsNil(o.DiverseFromDeviceUuid) {
		var ret string
		return ret
	}
	return *o.DiverseFromDeviceUuid
}

// GetDiverseFromDeviceUuidOk returns a tuple with the DiverseFromDeviceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetDiverseFromDeviceUuidOk() (*string, bool) {
	if o == nil || IsNil(o.DiverseFromDeviceUuid) {
		return nil, false
	}
	return o.DiverseFromDeviceUuid, true
}

// HasDiverseFromDeviceUuid returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasDiverseFromDeviceUuid() bool {
	if o != nil && !IsNil(o.DiverseFromDeviceUuid) {
		return true
	}

	return false
}

// SetDiverseFromDeviceUuid gets a reference to the given string and assigns it to the DiverseFromDeviceUuid field.
func (o *VirtualDeviceDetailsResponse) SetDiverseFromDeviceUuid(v string) {
	o.DiverseFromDeviceUuid = &v
}

// GetDeviceTypeCode returns the DeviceTypeCode field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetDeviceTypeCode() string {
	if o == nil || IsNil(o.DeviceTypeCode) {
		var ret string
		return ret
	}
	return *o.DeviceTypeCode
}

// GetDeviceTypeCodeOk returns a tuple with the DeviceTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetDeviceTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceTypeCode) {
		return nil, false
	}
	return o.DeviceTypeCode, true
}

// HasDeviceTypeCode returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasDeviceTypeCode() bool {
	if o != nil && !IsNil(o.DeviceTypeCode) {
		return true
	}

	return false
}

// SetDeviceTypeCode gets a reference to the given string and assigns it to the DeviceTypeCode field.
func (o *VirtualDeviceDetailsResponse) SetDeviceTypeCode(v string) {
	o.DeviceTypeCode = &v
}

// GetDeviceTypeName returns the DeviceTypeName field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetDeviceTypeName() string {
	if o == nil || IsNil(o.DeviceTypeName) {
		var ret string
		return ret
	}
	return *o.DeviceTypeName
}

// GetDeviceTypeNameOk returns a tuple with the DeviceTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetDeviceTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceTypeName) {
		return nil, false
	}
	return o.DeviceTypeName, true
}

// HasDeviceTypeName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasDeviceTypeName() bool {
	if o != nil && !IsNil(o.DeviceTypeName) {
		return true
	}

	return false
}

// SetDeviceTypeName gets a reference to the given string and assigns it to the DeviceTypeName field.
func (o *VirtualDeviceDetailsResponse) SetDeviceTypeName(v string) {
	o.DeviceTypeName = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetExpiry() string {
	if o == nil || IsNil(o.Expiry) {
		var ret string
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.Expiry) {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasExpiry() bool {
	if o != nil && !IsNil(o.Expiry) {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given string and assigns it to the Expiry field.
func (o *VirtualDeviceDetailsResponse) SetExpiry(v string) {
	o.Expiry = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *VirtualDeviceDetailsResponse) SetRegion(v string) {
	o.Region = &v
}

// GetDeviceTypeVendor returns the DeviceTypeVendor field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetDeviceTypeVendor() string {
	if o == nil || IsNil(o.DeviceTypeVendor) {
		var ret string
		return ret
	}
	return *o.DeviceTypeVendor
}

// GetDeviceTypeVendorOk returns a tuple with the DeviceTypeVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetDeviceTypeVendorOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceTypeVendor) {
		return nil, false
	}
	return o.DeviceTypeVendor, true
}

// HasDeviceTypeVendor returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasDeviceTypeVendor() bool {
	if o != nil && !IsNil(o.DeviceTypeVendor) {
		return true
	}

	return false
}

// SetDeviceTypeVendor gets a reference to the given string and assigns it to the DeviceTypeVendor field.
func (o *VirtualDeviceDetailsResponse) SetDeviceTypeVendor(v string) {
	o.DeviceTypeVendor = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *VirtualDeviceDetailsResponse) SetHostName(v string) {
	o.HostName = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *VirtualDeviceDetailsResponse) SetUuid(v string) {
	o.Uuid = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetLastUpdatedBy() string {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret string
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetLastUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given string and assigns it to the LastUpdatedBy field.
func (o *VirtualDeviceDetailsResponse) SetLastUpdatedBy(v string) {
	o.LastUpdatedBy = &v
}

// GetLastUpdatedDate returns the LastUpdatedDate field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetLastUpdatedDate() string {
	if o == nil || IsNil(o.LastUpdatedDate) {
		var ret string
		return ret
	}
	return *o.LastUpdatedDate
}

// GetLastUpdatedDateOk returns a tuple with the LastUpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetLastUpdatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedDate) {
		return nil, false
	}
	return o.LastUpdatedDate, true
}

// HasLastUpdatedDate returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasLastUpdatedDate() bool {
	if o != nil && !IsNil(o.LastUpdatedDate) {
		return true
	}

	return false
}

// SetLastUpdatedDate gets a reference to the given string and assigns it to the LastUpdatedDate field.
func (o *VirtualDeviceDetailsResponse) SetLastUpdatedDate(v string) {
	o.LastUpdatedDate = &v
}

// GetLicenseFileId returns the LicenseFileId field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetLicenseFileId() string {
	if o == nil || IsNil(o.LicenseFileId) {
		var ret string
		return ret
	}
	return *o.LicenseFileId
}

// GetLicenseFileIdOk returns a tuple with the LicenseFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetLicenseFileIdOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseFileId) {
		return nil, false
	}
	return o.LicenseFileId, true
}

// HasLicenseFileId returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasLicenseFileId() bool {
	if o != nil && !IsNil(o.LicenseFileId) {
		return true
	}

	return false
}

// SetLicenseFileId gets a reference to the given string and assigns it to the LicenseFileId field.
func (o *VirtualDeviceDetailsResponse) SetLicenseFileId(v string) {
	o.LicenseFileId = &v
}

// GetLicenseName returns the LicenseName field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetLicenseName() string {
	if o == nil || IsNil(o.LicenseName) {
		var ret string
		return ret
	}
	return *o.LicenseName
}

// GetLicenseNameOk returns a tuple with the LicenseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetLicenseNameOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseName) {
		return nil, false
	}
	return o.LicenseName, true
}

// HasLicenseName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasLicenseName() bool {
	if o != nil && !IsNil(o.LicenseName) {
		return true
	}

	return false
}

// SetLicenseName gets a reference to the given string and assigns it to the LicenseName field.
func (o *VirtualDeviceDetailsResponse) SetLicenseName(v string) {
	o.LicenseName = &v
}

// GetLicenseStatus returns the LicenseStatus field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetLicenseStatus() string {
	if o == nil || IsNil(o.LicenseStatus) {
		var ret string
		return ret
	}
	return *o.LicenseStatus
}

// GetLicenseStatusOk returns a tuple with the LicenseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetLicenseStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseStatus) {
		return nil, false
	}
	return o.LicenseStatus, true
}

// HasLicenseStatus returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasLicenseStatus() bool {
	if o != nil && !IsNil(o.LicenseStatus) {
		return true
	}

	return false
}

// SetLicenseStatus gets a reference to the given string and assigns it to the LicenseStatus field.
func (o *VirtualDeviceDetailsResponse) SetLicenseStatus(v string) {
	o.LicenseStatus = &v
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetLicenseType() string {
	if o == nil || IsNil(o.LicenseType) {
		var ret string
		return ret
	}
	return *o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetLicenseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseType) {
		return nil, false
	}
	return o.LicenseType, true
}

// HasLicenseType returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasLicenseType() bool {
	if o != nil && !IsNil(o.LicenseType) {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given string and assigns it to the LicenseType field.
func (o *VirtualDeviceDetailsResponse) SetLicenseType(v string) {
	o.LicenseType = &v
}

// GetMetroCode returns the MetroCode field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetMetroCode() string {
	if o == nil || IsNil(o.MetroCode) {
		var ret string
		return ret
	}
	return *o.MetroCode
}

// GetMetroCodeOk returns a tuple with the MetroCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetMetroCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MetroCode) {
		return nil, false
	}
	return o.MetroCode, true
}

// HasMetroCode returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasMetroCode() bool {
	if o != nil && !IsNil(o.MetroCode) {
		return true
	}

	return false
}

// SetMetroCode gets a reference to the given string and assigns it to the MetroCode field.
func (o *VirtualDeviceDetailsResponse) SetMetroCode(v string) {
	o.MetroCode = &v
}

// GetMetroName returns the MetroName field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetMetroName() string {
	if o == nil || IsNil(o.MetroName) {
		var ret string
		return ret
	}
	return *o.MetroName
}

// GetMetroNameOk returns a tuple with the MetroName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetMetroNameOk() (*string, bool) {
	if o == nil || IsNil(o.MetroName) {
		return nil, false
	}
	return o.MetroName, true
}

// HasMetroName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasMetroName() bool {
	if o != nil && !IsNil(o.MetroName) {
		return true
	}

	return false
}

// SetMetroName gets a reference to the given string and assigns it to the MetroName field.
func (o *VirtualDeviceDetailsResponse) SetMetroName(v string) {
	o.MetroName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VirtualDeviceDetailsResponse) SetName(v string) {
	o.Name = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetNotifications() []string {
	if o == nil || IsNil(o.Notifications) {
		var ret []string
		return ret
	}
	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetNotificationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given []string and assigns it to the Notifications field.
func (o *VirtualDeviceDetailsResponse) SetNotifications(v []string) {
	o.Notifications = v
}

// GetPackageCode returns the PackageCode field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetPackageCode() string {
	if o == nil || IsNil(o.PackageCode) {
		var ret string
		return ret
	}
	return *o.PackageCode
}

// GetPackageCodeOk returns a tuple with the PackageCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetPackageCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PackageCode) {
		return nil, false
	}
	return o.PackageCode, true
}

// HasPackageCode returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasPackageCode() bool {
	if o != nil && !IsNil(o.PackageCode) {
		return true
	}

	return false
}

// SetPackageCode gets a reference to the given string and assigns it to the PackageCode field.
func (o *VirtualDeviceDetailsResponse) SetPackageCode(v string) {
	o.PackageCode = &v
}

// GetPackageName returns the PackageName field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetPackageName() string {
	if o == nil || IsNil(o.PackageName) {
		var ret string
		return ret
	}
	return *o.PackageName
}

// GetPackageNameOk returns a tuple with the PackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetPackageNameOk() (*string, bool) {
	if o == nil || IsNil(o.PackageName) {
		return nil, false
	}
	return o.PackageName, true
}

// HasPackageName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasPackageName() bool {
	if o != nil && !IsNil(o.PackageName) {
		return true
	}

	return false
}

// SetPackageName gets a reference to the given string and assigns it to the PackageName field.
func (o *VirtualDeviceDetailsResponse) SetPackageName(v string) {
	o.PackageName = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *VirtualDeviceDetailsResponse) SetVersion(v string) {
	o.Version = &v
}

// GetPurchaseOrderNumber returns the PurchaseOrderNumber field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetPurchaseOrderNumber() string {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		var ret string
		return ret
	}
	return *o.PurchaseOrderNumber
}

// GetPurchaseOrderNumberOk returns a tuple with the PurchaseOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetPurchaseOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		return nil, false
	}
	return o.PurchaseOrderNumber, true
}

// HasPurchaseOrderNumber returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasPurchaseOrderNumber() bool {
	if o != nil && !IsNil(o.PurchaseOrderNumber) {
		return true
	}

	return false
}

// SetPurchaseOrderNumber gets a reference to the given string and assigns it to the PurchaseOrderNumber field.
func (o *VirtualDeviceDetailsResponse) SetPurchaseOrderNumber(v string) {
	o.PurchaseOrderNumber = &v
}

// GetRedundancyType returns the RedundancyType field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetRedundancyType() string {
	if o == nil || IsNil(o.RedundancyType) {
		var ret string
		return ret
	}
	return *o.RedundancyType
}

// GetRedundancyTypeOk returns a tuple with the RedundancyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetRedundancyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RedundancyType) {
		return nil, false
	}
	return o.RedundancyType, true
}

// HasRedundancyType returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasRedundancyType() bool {
	if o != nil && !IsNil(o.RedundancyType) {
		return true
	}

	return false
}

// SetRedundancyType gets a reference to the given string and assigns it to the RedundancyType field.
func (o *VirtualDeviceDetailsResponse) SetRedundancyType(v string) {
	o.RedundancyType = &v
}

// GetRedundantUuid returns the RedundantUuid field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetRedundantUuid() string {
	if o == nil || IsNil(o.RedundantUuid) {
		var ret string
		return ret
	}
	return *o.RedundantUuid
}

// GetRedundantUuidOk returns a tuple with the RedundantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetRedundantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.RedundantUuid) {
		return nil, false
	}
	return o.RedundantUuid, true
}

// HasRedundantUuid returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasRedundantUuid() bool {
	if o != nil && !IsNil(o.RedundantUuid) {
		return true
	}

	return false
}

// SetRedundantUuid gets a reference to the given string and assigns it to the RedundantUuid field.
func (o *VirtualDeviceDetailsResponse) SetRedundantUuid(v string) {
	o.RedundantUuid = &v
}

// GetConnectivity returns the Connectivity field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetConnectivity() string {
	if o == nil || IsNil(o.Connectivity) {
		var ret string
		return ret
	}
	return *o.Connectivity
}

// GetConnectivityOk returns a tuple with the Connectivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetConnectivityOk() (*string, bool) {
	if o == nil || IsNil(o.Connectivity) {
		return nil, false
	}
	return o.Connectivity, true
}

// HasConnectivity returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasConnectivity() bool {
	if o != nil && !IsNil(o.Connectivity) {
		return true
	}

	return false
}

// SetConnectivity gets a reference to the given string and assigns it to the Connectivity field.
func (o *VirtualDeviceDetailsResponse) SetConnectivity(v string) {
	o.Connectivity = &v
}

// GetSshIpAddress returns the SshIpAddress field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetSshIpAddress() string {
	if o == nil || IsNil(o.SshIpAddress) {
		var ret string
		return ret
	}
	return *o.SshIpAddress
}

// GetSshIpAddressOk returns a tuple with the SshIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetSshIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SshIpAddress) {
		return nil, false
	}
	return o.SshIpAddress, true
}

// HasSshIpAddress returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasSshIpAddress() bool {
	if o != nil && !IsNil(o.SshIpAddress) {
		return true
	}

	return false
}

// SetSshIpAddress gets a reference to the given string and assigns it to the SshIpAddress field.
func (o *VirtualDeviceDetailsResponse) SetSshIpAddress(v string) {
	o.SshIpAddress = &v
}

// GetSshIpFqdn returns the SshIpFqdn field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetSshIpFqdn() string {
	if o == nil || IsNil(o.SshIpFqdn) {
		var ret string
		return ret
	}
	return *o.SshIpFqdn
}

// GetSshIpFqdnOk returns a tuple with the SshIpFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetSshIpFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.SshIpFqdn) {
		return nil, false
	}
	return o.SshIpFqdn, true
}

// HasSshIpFqdn returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasSshIpFqdn() bool {
	if o != nil && !IsNil(o.SshIpFqdn) {
		return true
	}

	return false
}

// SetSshIpFqdn gets a reference to the given string and assigns it to the SshIpFqdn field.
func (o *VirtualDeviceDetailsResponse) SetSshIpFqdn(v string) {
	o.SshIpFqdn = &v
}

// GetSshIpFqdnStatus returns the SshIpFqdnStatus field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetSshIpFqdnStatus() string {
	if o == nil || IsNil(o.SshIpFqdnStatus) {
		var ret string
		return ret
	}
	return *o.SshIpFqdnStatus
}

// GetSshIpFqdnStatusOk returns a tuple with the SshIpFqdnStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetSshIpFqdnStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SshIpFqdnStatus) {
		return nil, false
	}
	return o.SshIpFqdnStatus, true
}

// HasSshIpFqdnStatus returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasSshIpFqdnStatus() bool {
	if o != nil && !IsNil(o.SshIpFqdnStatus) {
		return true
	}

	return false
}

// SetSshIpFqdnStatus gets a reference to the given string and assigns it to the SshIpFqdnStatus field.
func (o *VirtualDeviceDetailsResponse) SetSshIpFqdnStatus(v string) {
	o.SshIpFqdnStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VirtualDeviceDetailsResponse) SetStatus(v string) {
	o.Status = &v
}

// GetThroughput returns the Throughput field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetThroughput() int32 {
	if o == nil || IsNil(o.Throughput) {
		var ret int32
		return ret
	}
	return *o.Throughput
}

// GetThroughputOk returns a tuple with the Throughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetThroughputOk() (*int32, bool) {
	if o == nil || IsNil(o.Throughput) {
		return nil, false
	}
	return o.Throughput, true
}

// HasThroughput returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasThroughput() bool {
	if o != nil && !IsNil(o.Throughput) {
		return true
	}

	return false
}

// SetThroughput gets a reference to the given int32 and assigns it to the Throughput field.
func (o *VirtualDeviceDetailsResponse) SetThroughput(v int32) {
	o.Throughput = &v
}

// GetThroughputUnit returns the ThroughputUnit field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetThroughputUnit() string {
	if o == nil || IsNil(o.ThroughputUnit) {
		var ret string
		return ret
	}
	return *o.ThroughputUnit
}

// GetThroughputUnitOk returns a tuple with the ThroughputUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetThroughputUnitOk() (*string, bool) {
	if o == nil || IsNil(o.ThroughputUnit) {
		return nil, false
	}
	return o.ThroughputUnit, true
}

// HasThroughputUnit returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasThroughputUnit() bool {
	if o != nil && !IsNil(o.ThroughputUnit) {
		return true
	}

	return false
}

// SetThroughputUnit gets a reference to the given string and assigns it to the ThroughputUnit field.
func (o *VirtualDeviceDetailsResponse) SetThroughputUnit(v string) {
	o.ThroughputUnit = &v
}

// GetCore returns the Core field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetCore() CoresDisplayConfig {
	if o == nil || IsNil(o.Core) {
		var ret CoresDisplayConfig
		return ret
	}
	return *o.Core
}

// GetCoreOk returns a tuple with the Core field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetCoreOk() (*CoresDisplayConfig, bool) {
	if o == nil || IsNil(o.Core) {
		return nil, false
	}
	return o.Core, true
}

// HasCore returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasCore() bool {
	if o != nil && !IsNil(o.Core) {
		return true
	}

	return false
}

// SetCore gets a reference to the given CoresDisplayConfig and assigns it to the Core field.
func (o *VirtualDeviceDetailsResponse) SetCore(v CoresDisplayConfig) {
	o.Core = &v
}

// GetPricingDetails returns the PricingDetails field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetPricingDetails() PricingSiebelConfig {
	if o == nil || IsNil(o.PricingDetails) {
		var ret PricingSiebelConfig
		return ret
	}
	return *o.PricingDetails
}

// GetPricingDetailsOk returns a tuple with the PricingDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetPricingDetailsOk() (*PricingSiebelConfig, bool) {
	if o == nil || IsNil(o.PricingDetails) {
		return nil, false
	}
	return o.PricingDetails, true
}

// HasPricingDetails returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasPricingDetails() bool {
	if o != nil && !IsNil(o.PricingDetails) {
		return true
	}

	return false
}

// SetPricingDetails gets a reference to the given PricingSiebelConfig and assigns it to the PricingDetails field.
func (o *VirtualDeviceDetailsResponse) SetPricingDetails(v PricingSiebelConfig) {
	o.PricingDetails = &v
}

// GetInterfaceCount returns the InterfaceCount field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetInterfaceCount() int32 {
	if o == nil || IsNil(o.InterfaceCount) {
		var ret int32
		return ret
	}
	return *o.InterfaceCount
}

// GetInterfaceCountOk returns a tuple with the InterfaceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetInterfaceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InterfaceCount) {
		return nil, false
	}
	return o.InterfaceCount, true
}

// HasInterfaceCount returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasInterfaceCount() bool {
	if o != nil && !IsNil(o.InterfaceCount) {
		return true
	}

	return false
}

// SetInterfaceCount gets a reference to the given int32 and assigns it to the InterfaceCount field.
func (o *VirtualDeviceDetailsResponse) SetInterfaceCount(v int32) {
	o.InterfaceCount = &v
}

// GetDeviceManagementType returns the DeviceManagementType field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetDeviceManagementType() string {
	if o == nil || IsNil(o.DeviceManagementType) {
		var ret string
		return ret
	}
	return *o.DeviceManagementType
}

// GetDeviceManagementTypeOk returns a tuple with the DeviceManagementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetDeviceManagementTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceManagementType) {
		return nil, false
	}
	return o.DeviceManagementType, true
}

// HasDeviceManagementType returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasDeviceManagementType() bool {
	if o != nil && !IsNil(o.DeviceManagementType) {
		return true
	}

	return false
}

// SetDeviceManagementType gets a reference to the given string and assigns it to the DeviceManagementType field.
func (o *VirtualDeviceDetailsResponse) SetDeviceManagementType(v string) {
	o.DeviceManagementType = &v
}

// GetUserPublicKey returns the UserPublicKey field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetUserPublicKey() UserPublicKeyConfig {
	if o == nil || IsNil(o.UserPublicKey) {
		var ret UserPublicKeyConfig
		return ret
	}
	return *o.UserPublicKey
}

// GetUserPublicKeyOk returns a tuple with the UserPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetUserPublicKeyOk() (*UserPublicKeyConfig, bool) {
	if o == nil || IsNil(o.UserPublicKey) {
		return nil, false
	}
	return o.UserPublicKey, true
}

// HasUserPublicKey returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasUserPublicKey() bool {
	if o != nil && !IsNil(o.UserPublicKey) {
		return true
	}

	return false
}

// SetUserPublicKey gets a reference to the given UserPublicKeyConfig and assigns it to the UserPublicKey field.
func (o *VirtualDeviceDetailsResponse) SetUserPublicKey(v UserPublicKeyConfig) {
	o.UserPublicKey = &v
}

// GetManagementIp returns the ManagementIp field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetManagementIp() string {
	if o == nil || IsNil(o.ManagementIp) {
		var ret string
		return ret
	}
	return *o.ManagementIp
}

// GetManagementIpOk returns a tuple with the ManagementIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetManagementIpOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementIp) {
		return nil, false
	}
	return o.ManagementIp, true
}

// HasManagementIp returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasManagementIp() bool {
	if o != nil && !IsNil(o.ManagementIp) {
		return true
	}

	return false
}

// SetManagementIp gets a reference to the given string and assigns it to the ManagementIp field.
func (o *VirtualDeviceDetailsResponse) SetManagementIp(v string) {
	o.ManagementIp = &v
}

// GetManagementGatewayIp returns the ManagementGatewayIp field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetManagementGatewayIp() string {
	if o == nil || IsNil(o.ManagementGatewayIp) {
		var ret string
		return ret
	}
	return *o.ManagementGatewayIp
}

// GetManagementGatewayIpOk returns a tuple with the ManagementGatewayIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetManagementGatewayIpOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementGatewayIp) {
		return nil, false
	}
	return o.ManagementGatewayIp, true
}

// HasManagementGatewayIp returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasManagementGatewayIp() bool {
	if o != nil && !IsNil(o.ManagementGatewayIp) {
		return true
	}

	return false
}

// SetManagementGatewayIp gets a reference to the given string and assigns it to the ManagementGatewayIp field.
func (o *VirtualDeviceDetailsResponse) SetManagementGatewayIp(v string) {
	o.ManagementGatewayIp = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *VirtualDeviceDetailsResponse) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPublicGatewayIp returns the PublicGatewayIp field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetPublicGatewayIp() string {
	if o == nil || IsNil(o.PublicGatewayIp) {
		var ret string
		return ret
	}
	return *o.PublicGatewayIp
}

// GetPublicGatewayIpOk returns a tuple with the PublicGatewayIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetPublicGatewayIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicGatewayIp) {
		return nil, false
	}
	return o.PublicGatewayIp, true
}

// HasPublicGatewayIp returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasPublicGatewayIp() bool {
	if o != nil && !IsNil(o.PublicGatewayIp) {
		return true
	}

	return false
}

// SetPublicGatewayIp gets a reference to the given string and assigns it to the PublicGatewayIp field.
func (o *VirtualDeviceDetailsResponse) SetPublicGatewayIp(v string) {
	o.PublicGatewayIp = &v
}

// GetPrimaryDnsName returns the PrimaryDnsName field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetPrimaryDnsName() string {
	if o == nil || IsNil(o.PrimaryDnsName) {
		var ret string
		return ret
	}
	return *o.PrimaryDnsName
}

// GetPrimaryDnsNameOk returns a tuple with the PrimaryDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetPrimaryDnsNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryDnsName) {
		return nil, false
	}
	return o.PrimaryDnsName, true
}

// HasPrimaryDnsName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasPrimaryDnsName() bool {
	if o != nil && !IsNil(o.PrimaryDnsName) {
		return true
	}

	return false
}

// SetPrimaryDnsName gets a reference to the given string and assigns it to the PrimaryDnsName field.
func (o *VirtualDeviceDetailsResponse) SetPrimaryDnsName(v string) {
	o.PrimaryDnsName = &v
}

// GetSecondaryDnsName returns the SecondaryDnsName field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetSecondaryDnsName() string {
	if o == nil || IsNil(o.SecondaryDnsName) {
		var ret string
		return ret
	}
	return *o.SecondaryDnsName
}

// GetSecondaryDnsNameOk returns a tuple with the SecondaryDnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetSecondaryDnsNameOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryDnsName) {
		return nil, false
	}
	return o.SecondaryDnsName, true
}

// HasSecondaryDnsName returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasSecondaryDnsName() bool {
	if o != nil && !IsNil(o.SecondaryDnsName) {
		return true
	}

	return false
}

// SetSecondaryDnsName gets a reference to the given string and assigns it to the SecondaryDnsName field.
func (o *VirtualDeviceDetailsResponse) SetSecondaryDnsName(v string) {
	o.SecondaryDnsName = &v
}

// GetTermLength returns the TermLength field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetTermLength() string {
	if o == nil || IsNil(o.TermLength) {
		var ret string
		return ret
	}
	return *o.TermLength
}

// GetTermLengthOk returns a tuple with the TermLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetTermLengthOk() (*string, bool) {
	if o == nil || IsNil(o.TermLength) {
		return nil, false
	}
	return o.TermLength, true
}

// HasTermLength returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasTermLength() bool {
	if o != nil && !IsNil(o.TermLength) {
		return true
	}

	return false
}

// SetTermLength gets a reference to the given string and assigns it to the TermLength field.
func (o *VirtualDeviceDetailsResponse) SetTermLength(v string) {
	o.TermLength = &v
}

// GetAdditionalBandwidth returns the AdditionalBandwidth field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetAdditionalBandwidth() string {
	if o == nil || IsNil(o.AdditionalBandwidth) {
		var ret string
		return ret
	}
	return *o.AdditionalBandwidth
}

// GetAdditionalBandwidthOk returns a tuple with the AdditionalBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetAdditionalBandwidthOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalBandwidth) {
		return nil, false
	}
	return o.AdditionalBandwidth, true
}

// HasAdditionalBandwidth returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasAdditionalBandwidth() bool {
	if o != nil && !IsNil(o.AdditionalBandwidth) {
		return true
	}

	return false
}

// SetAdditionalBandwidth gets a reference to the given string and assigns it to the AdditionalBandwidth field.
func (o *VirtualDeviceDetailsResponse) SetAdditionalBandwidth(v string) {
	o.AdditionalBandwidth = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *VirtualDeviceDetailsResponse) SetSiteId(v string) {
	o.SiteId = &v
}

// GetSystemIpAddress returns the SystemIpAddress field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetSystemIpAddress() string {
	if o == nil || IsNil(o.SystemIpAddress) {
		var ret string
		return ret
	}
	return *o.SystemIpAddress
}

// GetSystemIpAddressOk returns a tuple with the SystemIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetSystemIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SystemIpAddress) {
		return nil, false
	}
	return o.SystemIpAddress, true
}

// HasSystemIpAddress returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasSystemIpAddress() bool {
	if o != nil && !IsNil(o.SystemIpAddress) {
		return true
	}

	return false
}

// SetSystemIpAddress gets a reference to the given string and assigns it to the SystemIpAddress field.
func (o *VirtualDeviceDetailsResponse) SetSystemIpAddress(v string) {
	o.SystemIpAddress = &v
}

// GetVendorConfig returns the VendorConfig field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetVendorConfig() VendorConfig {
	if o == nil || IsNil(o.VendorConfig) {
		var ret VendorConfig
		return ret
	}
	return *o.VendorConfig
}

// GetVendorConfigOk returns a tuple with the VendorConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetVendorConfigOk() (*VendorConfig, bool) {
	if o == nil || IsNil(o.VendorConfig) {
		return nil, false
	}
	return o.VendorConfig, true
}

// HasVendorConfig returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasVendorConfig() bool {
	if o != nil && !IsNil(o.VendorConfig) {
		return true
	}

	return false
}

// SetVendorConfig gets a reference to the given VendorConfig and assigns it to the VendorConfig field.
func (o *VirtualDeviceDetailsResponse) SetVendorConfig(v VendorConfig) {
	o.VendorConfig = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetInterfaces() []InterfaceBasicInfoResponse {
	if o == nil || IsNil(o.Interfaces) {
		var ret []InterfaceBasicInfoResponse
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetInterfacesOk() ([]InterfaceBasicInfoResponse, bool) {
	if o == nil || IsNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasInterfaces() bool {
	if o != nil && !IsNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []InterfaceBasicInfoResponse and assigns it to the Interfaces field.
func (o *VirtualDeviceDetailsResponse) SetInterfaces(v []InterfaceBasicInfoResponse) {
	o.Interfaces = v
}

// GetAsn returns the Asn field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetAsn() float32 {
	if o == nil || IsNil(o.Asn) {
		var ret float32
		return ret
	}
	return *o.Asn
}

// GetAsnOk returns a tuple with the Asn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetAsnOk() (*float32, bool) {
	if o == nil || IsNil(o.Asn) {
		return nil, false
	}
	return o.Asn, true
}

// HasAsn returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasAsn() bool {
	if o != nil && !IsNil(o.Asn) {
		return true
	}

	return false
}

// SetAsn gets a reference to the given float32 and assigns it to the Asn field.
func (o *VirtualDeviceDetailsResponse) SetAsn(v float32) {
	o.Asn = &v
}

// GetChannelPartner returns the ChannelPartner field value if set, zero value otherwise.
func (o *VirtualDeviceDetailsResponse) GetChannelPartner() string {
	if o == nil || IsNil(o.ChannelPartner) {
		var ret string
		return ret
	}
	return *o.ChannelPartner
}

// GetChannelPartnerOk returns a tuple with the ChannelPartner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualDeviceDetailsResponse) GetChannelPartnerOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelPartner) {
		return nil, false
	}
	return o.ChannelPartner, true
}

// HasChannelPartner returns a boolean if a field has been set.
func (o *VirtualDeviceDetailsResponse) HasChannelPartner() bool {
	if o != nil && !IsNil(o.ChannelPartner) {
		return true
	}

	return false
}

// SetChannelPartner gets a reference to the given string and assigns it to the ChannelPartner field.
func (o *VirtualDeviceDetailsResponse) SetChannelPartner(v string) {
	o.ChannelPartner = &v
}

func (o VirtualDeviceDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualDeviceDetailsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.DeviceSerialNo) {
		toSerialize["deviceSerialNo"] = o.DeviceSerialNo
	}
	if !IsNil(o.DeviceTypeCategory) {
		toSerialize["deviceTypeCategory"] = o.DeviceTypeCategory
	}
	if !IsNil(o.DiverseFromDeviceName) {
		toSerialize["diverseFromDeviceName"] = o.DiverseFromDeviceName
	}
	if !IsNil(o.DiverseFromDeviceUuid) {
		toSerialize["diverseFromDeviceUuid"] = o.DiverseFromDeviceUuid
	}
	if !IsNil(o.DeviceTypeCode) {
		toSerialize["deviceTypeCode"] = o.DeviceTypeCode
	}
	if !IsNil(o.DeviceTypeName) {
		toSerialize["deviceTypeName"] = o.DeviceTypeName
	}
	if !IsNil(o.Expiry) {
		toSerialize["expiry"] = o.Expiry
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.DeviceTypeVendor) {
		toSerialize["deviceTypeVendor"] = o.DeviceTypeVendor
	}
	if !IsNil(o.HostName) {
		toSerialize["hostName"] = o.HostName
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.LastUpdatedDate) {
		toSerialize["lastUpdatedDate"] = o.LastUpdatedDate
	}
	if !IsNil(o.LicenseFileId) {
		toSerialize["licenseFileId"] = o.LicenseFileId
	}
	if !IsNil(o.LicenseName) {
		toSerialize["licenseName"] = o.LicenseName
	}
	if !IsNil(o.LicenseStatus) {
		toSerialize["licenseStatus"] = o.LicenseStatus
	}
	if !IsNil(o.LicenseType) {
		toSerialize["licenseType"] = o.LicenseType
	}
	if !IsNil(o.MetroCode) {
		toSerialize["metroCode"] = o.MetroCode
	}
	if !IsNil(o.MetroName) {
		toSerialize["metroName"] = o.MetroName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	if !IsNil(o.PackageCode) {
		toSerialize["packageCode"] = o.PackageCode
	}
	if !IsNil(o.PackageName) {
		toSerialize["packageName"] = o.PackageName
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.PurchaseOrderNumber) {
		toSerialize["purchaseOrderNumber"] = o.PurchaseOrderNumber
	}
	if !IsNil(o.RedundancyType) {
		toSerialize["redundancyType"] = o.RedundancyType
	}
	if !IsNil(o.RedundantUuid) {
		toSerialize["redundantUuid"] = o.RedundantUuid
	}
	if !IsNil(o.Connectivity) {
		toSerialize["connectivity"] = o.Connectivity
	}
	if !IsNil(o.SshIpAddress) {
		toSerialize["sshIpAddress"] = o.SshIpAddress
	}
	if !IsNil(o.SshIpFqdn) {
		toSerialize["sshIpFqdn"] = o.SshIpFqdn
	}
	if !IsNil(o.SshIpFqdnStatus) {
		toSerialize["sshIpFqdnStatus"] = o.SshIpFqdnStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Throughput) {
		toSerialize["throughput"] = o.Throughput
	}
	if !IsNil(o.ThroughputUnit) {
		toSerialize["throughputUnit"] = o.ThroughputUnit
	}
	if !IsNil(o.Core) {
		toSerialize["core"] = o.Core
	}
	if !IsNil(o.PricingDetails) {
		toSerialize["pricingDetails"] = o.PricingDetails
	}
	if !IsNil(o.InterfaceCount) {
		toSerialize["interfaceCount"] = o.InterfaceCount
	}
	if !IsNil(o.DeviceManagementType) {
		toSerialize["deviceManagementType"] = o.DeviceManagementType
	}
	if !IsNil(o.UserPublicKey) {
		toSerialize["userPublicKey"] = o.UserPublicKey
	}
	if !IsNil(o.ManagementIp) {
		toSerialize["managementIp"] = o.ManagementIp
	}
	if !IsNil(o.ManagementGatewayIp) {
		toSerialize["managementGatewayIp"] = o.ManagementGatewayIp
	}
	if !IsNil(o.PublicIp) {
		toSerialize["publicIp"] = o.PublicIp
	}
	if !IsNil(o.PublicGatewayIp) {
		toSerialize["publicGatewayIp"] = o.PublicGatewayIp
	}
	if !IsNil(o.PrimaryDnsName) {
		toSerialize["primaryDnsName"] = o.PrimaryDnsName
	}
	if !IsNil(o.SecondaryDnsName) {
		toSerialize["secondaryDnsName"] = o.SecondaryDnsName
	}
	if !IsNil(o.TermLength) {
		toSerialize["termLength"] = o.TermLength
	}
	if !IsNil(o.AdditionalBandwidth) {
		toSerialize["additionalBandwidth"] = o.AdditionalBandwidth
	}
	if !IsNil(o.SiteId) {
		toSerialize["siteId"] = o.SiteId
	}
	if !IsNil(o.SystemIpAddress) {
		toSerialize["systemIpAddress"] = o.SystemIpAddress
	}
	if !IsNil(o.VendorConfig) {
		toSerialize["vendorConfig"] = o.VendorConfig
	}
	if !IsNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !IsNil(o.Asn) {
		toSerialize["asn"] = o.Asn
	}
	if !IsNil(o.ChannelPartner) {
		toSerialize["channelPartner"] = o.ChannelPartner
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VirtualDeviceDetailsResponse) UnmarshalJSON(data []byte) (err error) {
	varVirtualDeviceDetailsResponse := _VirtualDeviceDetailsResponse{}

	err = json.Unmarshal(data, &varVirtualDeviceDetailsResponse)

	if err != nil {
		return err
	}

	*o = VirtualDeviceDetailsResponse(varVirtualDeviceDetailsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountName")
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "createdDate")
		delete(additionalProperties, "deviceSerialNo")
		delete(additionalProperties, "deviceTypeCategory")
		delete(additionalProperties, "diverseFromDeviceName")
		delete(additionalProperties, "diverseFromDeviceUuid")
		delete(additionalProperties, "deviceTypeCode")
		delete(additionalProperties, "deviceTypeName")
		delete(additionalProperties, "expiry")
		delete(additionalProperties, "region")
		delete(additionalProperties, "deviceTypeVendor")
		delete(additionalProperties, "hostName")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "lastUpdatedBy")
		delete(additionalProperties, "lastUpdatedDate")
		delete(additionalProperties, "licenseFileId")
		delete(additionalProperties, "licenseName")
		delete(additionalProperties, "licenseStatus")
		delete(additionalProperties, "licenseType")
		delete(additionalProperties, "metroCode")
		delete(additionalProperties, "metroName")
		delete(additionalProperties, "name")
		delete(additionalProperties, "notifications")
		delete(additionalProperties, "packageCode")
		delete(additionalProperties, "packageName")
		delete(additionalProperties, "version")
		delete(additionalProperties, "purchaseOrderNumber")
		delete(additionalProperties, "redundancyType")
		delete(additionalProperties, "redundantUuid")
		delete(additionalProperties, "connectivity")
		delete(additionalProperties, "sshIpAddress")
		delete(additionalProperties, "sshIpFqdn")
		delete(additionalProperties, "sshIpFqdnStatus")
		delete(additionalProperties, "status")
		delete(additionalProperties, "throughput")
		delete(additionalProperties, "throughputUnit")
		delete(additionalProperties, "core")
		delete(additionalProperties, "pricingDetails")
		delete(additionalProperties, "interfaceCount")
		delete(additionalProperties, "deviceManagementType")
		delete(additionalProperties, "userPublicKey")
		delete(additionalProperties, "managementIp")
		delete(additionalProperties, "managementGatewayIp")
		delete(additionalProperties, "publicIp")
		delete(additionalProperties, "publicGatewayIp")
		delete(additionalProperties, "primaryDnsName")
		delete(additionalProperties, "secondaryDnsName")
		delete(additionalProperties, "termLength")
		delete(additionalProperties, "additionalBandwidth")
		delete(additionalProperties, "siteId")
		delete(additionalProperties, "systemIpAddress")
		delete(additionalProperties, "vendorConfig")
		delete(additionalProperties, "interfaces")
		delete(additionalProperties, "asn")
		delete(additionalProperties, "channelPartner")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVirtualDeviceDetailsResponse struct {
	value *VirtualDeviceDetailsResponse
	isSet bool
}

func (v NullableVirtualDeviceDetailsResponse) Get() *VirtualDeviceDetailsResponse {
	return v.value
}

func (v *NullableVirtualDeviceDetailsResponse) Set(val *VirtualDeviceDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualDeviceDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualDeviceDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualDeviceDetailsResponse(val *VirtualDeviceDetailsResponse) *NullableVirtualDeviceDetailsResponse {
	return &NullableVirtualDeviceDetailsResponse{value: val, isSet: true}
}

func (v NullableVirtualDeviceDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualDeviceDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
