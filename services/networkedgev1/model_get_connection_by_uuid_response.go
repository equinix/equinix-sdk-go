/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the GETConnectionByUuidResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GETConnectionByUuidResponse{}

// GETConnectionByUuidResponse struct for GETConnectionByUuidResponse
type GETConnectionByUuidResponse struct {
	BuyerOrganizationName  *string  `json:"buyerOrganizationName,omitempty"`
	Uuid                   *string  `json:"uuid,omitempty"`
	Name                   *string  `json:"name,omitempty"`
	VlanSTag               *int32   `json:"vlanSTag,omitempty"`
	PortUUID               *string  `json:"portUUID,omitempty"`
	PortName               *string  `json:"portName,omitempty"`
	AsideEncapsulation     *string  `json:"asideEncapsulation,omitempty"`
	MetroCode              *string  `json:"metroCode,omitempty"`
	MetroDescription       *string  `json:"metroDescription,omitempty"`
	ProviderStatus         *string  `json:"providerStatus,omitempty"`
	Status                 *string  `json:"status,omitempty"`
	BillingTier            *string  `json:"billingTier,omitempty"`
	AuthorizationKey       *string  `json:"authorizationKey,omitempty"`
	Speed                  *int32   `json:"speed,omitempty"`
	SpeedUnit              *string  `json:"speedUnit,omitempty"`
	RedundancyType         *string  `json:"redundancyType,omitempty"`
	RedundancyGroup        *string  `json:"redundancyGroup,omitempty"`
	SellerMetroCode        *string  `json:"sellerMetroCode,omitempty"`
	SellerMetroDescription *string  `json:"sellerMetroDescription,omitempty"`
	SellerServiceName      *string  `json:"sellerServiceName,omitempty"`
	SellerServiceUUID      *string  `json:"sellerServiceUUID,omitempty"`
	SellerOrganizationName *string  `json:"sellerOrganizationName,omitempty"`
	Notifications          []string `json:"notifications,omitempty"`
	PurchaseOrderNumber    *string  `json:"purchaseOrderNumber,omitempty"`
	NamedTag               *string  `json:"namedTag,omitempty"`
	CreatedDate            *string  `json:"createdDate,omitempty"`
	CreatedBy              *string  `json:"createdBy,omitempty"`
	CreatedByFullName      *string  `json:"createdByFullName,omitempty"`
	CreatedByEmail         *string  `json:"createdByEmail,omitempty"`
	LastUpdatedBy          *string  `json:"lastUpdatedBy,omitempty"`
	LastUpdatedDate        *string  `json:"lastUpdatedDate,omitempty"`
	LastUpdatedByFullName  *string  `json:"lastUpdatedByFullName,omitempty"`
	LastUpdatedByEmail     *string  `json:"lastUpdatedByEmail,omitempty"`
	ZSidePortName          *string  `json:"zSidePortName,omitempty"`
	ZSidePortUUID          *string  `json:"zSidePortUUID,omitempty"`
	ZSideVlanCTag          *int32   `json:"zSideVlanCTag,omitempty"`
	ZSideVlanSTag          *int32   `json:"zSideVlanSTag,omitempty"`
	Remote                 *bool    `json:"remote,omitempty"`
	Private                *bool    `json:"private,omitempty"`
	Self                   *bool    `json:"self,omitempty"`
	RedundantUuid          *string  `json:"redundantUuid,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _GETConnectionByUuidResponse GETConnectionByUuidResponse

// NewGETConnectionByUuidResponse instantiates a new GETConnectionByUuidResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGETConnectionByUuidResponse() *GETConnectionByUuidResponse {
	this := GETConnectionByUuidResponse{}
	return &this
}

// NewGETConnectionByUuidResponseWithDefaults instantiates a new GETConnectionByUuidResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGETConnectionByUuidResponseWithDefaults() *GETConnectionByUuidResponse {
	this := GETConnectionByUuidResponse{}
	return &this
}

// GetBuyerOrganizationName returns the BuyerOrganizationName field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetBuyerOrganizationName() string {
	if o == nil || IsNil(o.BuyerOrganizationName) {
		var ret string
		return ret
	}
	return *o.BuyerOrganizationName
}

// GetBuyerOrganizationNameOk returns a tuple with the BuyerOrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetBuyerOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.BuyerOrganizationName) {
		return nil, false
	}
	return o.BuyerOrganizationName, true
}

// HasBuyerOrganizationName returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasBuyerOrganizationName() bool {
	if o != nil && !IsNil(o.BuyerOrganizationName) {
		return true
	}

	return false
}

// SetBuyerOrganizationName gets a reference to the given string and assigns it to the BuyerOrganizationName field.
func (o *GETConnectionByUuidResponse) SetBuyerOrganizationName(v string) {
	o.BuyerOrganizationName = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *GETConnectionByUuidResponse) SetUuid(v string) {
	o.Uuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GETConnectionByUuidResponse) SetName(v string) {
	o.Name = &v
}

// GetVlanSTag returns the VlanSTag field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetVlanSTag() int32 {
	if o == nil || IsNil(o.VlanSTag) {
		var ret int32
		return ret
	}
	return *o.VlanSTag
}

// GetVlanSTagOk returns a tuple with the VlanSTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetVlanSTagOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanSTag) {
		return nil, false
	}
	return o.VlanSTag, true
}

// HasVlanSTag returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasVlanSTag() bool {
	if o != nil && !IsNil(o.VlanSTag) {
		return true
	}

	return false
}

// SetVlanSTag gets a reference to the given int32 and assigns it to the VlanSTag field.
func (o *GETConnectionByUuidResponse) SetVlanSTag(v int32) {
	o.VlanSTag = &v
}

// GetPortUUID returns the PortUUID field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetPortUUID() string {
	if o == nil || IsNil(o.PortUUID) {
		var ret string
		return ret
	}
	return *o.PortUUID
}

// GetPortUUIDOk returns a tuple with the PortUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetPortUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.PortUUID) {
		return nil, false
	}
	return o.PortUUID, true
}

// HasPortUUID returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasPortUUID() bool {
	if o != nil && !IsNil(o.PortUUID) {
		return true
	}

	return false
}

// SetPortUUID gets a reference to the given string and assigns it to the PortUUID field.
func (o *GETConnectionByUuidResponse) SetPortUUID(v string) {
	o.PortUUID = &v
}

// GetPortName returns the PortName field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetPortName() string {
	if o == nil || IsNil(o.PortName) {
		var ret string
		return ret
	}
	return *o.PortName
}

// GetPortNameOk returns a tuple with the PortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetPortNameOk() (*string, bool) {
	if o == nil || IsNil(o.PortName) {
		return nil, false
	}
	return o.PortName, true
}

// HasPortName returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasPortName() bool {
	if o != nil && !IsNil(o.PortName) {
		return true
	}

	return false
}

// SetPortName gets a reference to the given string and assigns it to the PortName field.
func (o *GETConnectionByUuidResponse) SetPortName(v string) {
	o.PortName = &v
}

// GetAsideEncapsulation returns the AsideEncapsulation field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetAsideEncapsulation() string {
	if o == nil || IsNil(o.AsideEncapsulation) {
		var ret string
		return ret
	}
	return *o.AsideEncapsulation
}

// GetAsideEncapsulationOk returns a tuple with the AsideEncapsulation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetAsideEncapsulationOk() (*string, bool) {
	if o == nil || IsNil(o.AsideEncapsulation) {
		return nil, false
	}
	return o.AsideEncapsulation, true
}

// HasAsideEncapsulation returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasAsideEncapsulation() bool {
	if o != nil && !IsNil(o.AsideEncapsulation) {
		return true
	}

	return false
}

// SetAsideEncapsulation gets a reference to the given string and assigns it to the AsideEncapsulation field.
func (o *GETConnectionByUuidResponse) SetAsideEncapsulation(v string) {
	o.AsideEncapsulation = &v
}

// GetMetroCode returns the MetroCode field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetMetroCode() string {
	if o == nil || IsNil(o.MetroCode) {
		var ret string
		return ret
	}
	return *o.MetroCode
}

// GetMetroCodeOk returns a tuple with the MetroCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetMetroCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MetroCode) {
		return nil, false
	}
	return o.MetroCode, true
}

// HasMetroCode returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasMetroCode() bool {
	if o != nil && !IsNil(o.MetroCode) {
		return true
	}

	return false
}

// SetMetroCode gets a reference to the given string and assigns it to the MetroCode field.
func (o *GETConnectionByUuidResponse) SetMetroCode(v string) {
	o.MetroCode = &v
}

// GetMetroDescription returns the MetroDescription field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetMetroDescription() string {
	if o == nil || IsNil(o.MetroDescription) {
		var ret string
		return ret
	}
	return *o.MetroDescription
}

// GetMetroDescriptionOk returns a tuple with the MetroDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetMetroDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetroDescription) {
		return nil, false
	}
	return o.MetroDescription, true
}

// HasMetroDescription returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasMetroDescription() bool {
	if o != nil && !IsNil(o.MetroDescription) {
		return true
	}

	return false
}

// SetMetroDescription gets a reference to the given string and assigns it to the MetroDescription field.
func (o *GETConnectionByUuidResponse) SetMetroDescription(v string) {
	o.MetroDescription = &v
}

// GetProviderStatus returns the ProviderStatus field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetProviderStatus() string {
	if o == nil || IsNil(o.ProviderStatus) {
		var ret string
		return ret
	}
	return *o.ProviderStatus
}

// GetProviderStatusOk returns a tuple with the ProviderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetProviderStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderStatus) {
		return nil, false
	}
	return o.ProviderStatus, true
}

// HasProviderStatus returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasProviderStatus() bool {
	if o != nil && !IsNil(o.ProviderStatus) {
		return true
	}

	return false
}

// SetProviderStatus gets a reference to the given string and assigns it to the ProviderStatus field.
func (o *GETConnectionByUuidResponse) SetProviderStatus(v string) {
	o.ProviderStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GETConnectionByUuidResponse) SetStatus(v string) {
	o.Status = &v
}

// GetBillingTier returns the BillingTier field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetBillingTier() string {
	if o == nil || IsNil(o.BillingTier) {
		var ret string
		return ret
	}
	return *o.BillingTier
}

// GetBillingTierOk returns a tuple with the BillingTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetBillingTierOk() (*string, bool) {
	if o == nil || IsNil(o.BillingTier) {
		return nil, false
	}
	return o.BillingTier, true
}

// HasBillingTier returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasBillingTier() bool {
	if o != nil && !IsNil(o.BillingTier) {
		return true
	}

	return false
}

// SetBillingTier gets a reference to the given string and assigns it to the BillingTier field.
func (o *GETConnectionByUuidResponse) SetBillingTier(v string) {
	o.BillingTier = &v
}

// GetAuthorizationKey returns the AuthorizationKey field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetAuthorizationKey() string {
	if o == nil || IsNil(o.AuthorizationKey) {
		var ret string
		return ret
	}
	return *o.AuthorizationKey
}

// GetAuthorizationKeyOk returns a tuple with the AuthorizationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetAuthorizationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationKey) {
		return nil, false
	}
	return o.AuthorizationKey, true
}

// HasAuthorizationKey returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasAuthorizationKey() bool {
	if o != nil && !IsNil(o.AuthorizationKey) {
		return true
	}

	return false
}

// SetAuthorizationKey gets a reference to the given string and assigns it to the AuthorizationKey field.
func (o *GETConnectionByUuidResponse) SetAuthorizationKey(v string) {
	o.AuthorizationKey = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetSpeed() int32 {
	if o == nil || IsNil(o.Speed) {
		var ret int32
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetSpeedOk() (*int32, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given int32 and assigns it to the Speed field.
func (o *GETConnectionByUuidResponse) SetSpeed(v int32) {
	o.Speed = &v
}

// GetSpeedUnit returns the SpeedUnit field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetSpeedUnit() string {
	if o == nil || IsNil(o.SpeedUnit) {
		var ret string
		return ret
	}
	return *o.SpeedUnit
}

// GetSpeedUnitOk returns a tuple with the SpeedUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetSpeedUnitOk() (*string, bool) {
	if o == nil || IsNil(o.SpeedUnit) {
		return nil, false
	}
	return o.SpeedUnit, true
}

// HasSpeedUnit returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasSpeedUnit() bool {
	if o != nil && !IsNil(o.SpeedUnit) {
		return true
	}

	return false
}

// SetSpeedUnit gets a reference to the given string and assigns it to the SpeedUnit field.
func (o *GETConnectionByUuidResponse) SetSpeedUnit(v string) {
	o.SpeedUnit = &v
}

// GetRedundancyType returns the RedundancyType field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetRedundancyType() string {
	if o == nil || IsNil(o.RedundancyType) {
		var ret string
		return ret
	}
	return *o.RedundancyType
}

// GetRedundancyTypeOk returns a tuple with the RedundancyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetRedundancyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RedundancyType) {
		return nil, false
	}
	return o.RedundancyType, true
}

// HasRedundancyType returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasRedundancyType() bool {
	if o != nil && !IsNil(o.RedundancyType) {
		return true
	}

	return false
}

// SetRedundancyType gets a reference to the given string and assigns it to the RedundancyType field.
func (o *GETConnectionByUuidResponse) SetRedundancyType(v string) {
	o.RedundancyType = &v
}

// GetRedundancyGroup returns the RedundancyGroup field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetRedundancyGroup() string {
	if o == nil || IsNil(o.RedundancyGroup) {
		var ret string
		return ret
	}
	return *o.RedundancyGroup
}

// GetRedundancyGroupOk returns a tuple with the RedundancyGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetRedundancyGroupOk() (*string, bool) {
	if o == nil || IsNil(o.RedundancyGroup) {
		return nil, false
	}
	return o.RedundancyGroup, true
}

// HasRedundancyGroup returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasRedundancyGroup() bool {
	if o != nil && !IsNil(o.RedundancyGroup) {
		return true
	}

	return false
}

// SetRedundancyGroup gets a reference to the given string and assigns it to the RedundancyGroup field.
func (o *GETConnectionByUuidResponse) SetRedundancyGroup(v string) {
	o.RedundancyGroup = &v
}

// GetSellerMetroCode returns the SellerMetroCode field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetSellerMetroCode() string {
	if o == nil || IsNil(o.SellerMetroCode) {
		var ret string
		return ret
	}
	return *o.SellerMetroCode
}

// GetSellerMetroCodeOk returns a tuple with the SellerMetroCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetSellerMetroCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SellerMetroCode) {
		return nil, false
	}
	return o.SellerMetroCode, true
}

// HasSellerMetroCode returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasSellerMetroCode() bool {
	if o != nil && !IsNil(o.SellerMetroCode) {
		return true
	}

	return false
}

// SetSellerMetroCode gets a reference to the given string and assigns it to the SellerMetroCode field.
func (o *GETConnectionByUuidResponse) SetSellerMetroCode(v string) {
	o.SellerMetroCode = &v
}

// GetSellerMetroDescription returns the SellerMetroDescription field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetSellerMetroDescription() string {
	if o == nil || IsNil(o.SellerMetroDescription) {
		var ret string
		return ret
	}
	return *o.SellerMetroDescription
}

// GetSellerMetroDescriptionOk returns a tuple with the SellerMetroDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetSellerMetroDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SellerMetroDescription) {
		return nil, false
	}
	return o.SellerMetroDescription, true
}

// HasSellerMetroDescription returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasSellerMetroDescription() bool {
	if o != nil && !IsNil(o.SellerMetroDescription) {
		return true
	}

	return false
}

// SetSellerMetroDescription gets a reference to the given string and assigns it to the SellerMetroDescription field.
func (o *GETConnectionByUuidResponse) SetSellerMetroDescription(v string) {
	o.SellerMetroDescription = &v
}

// GetSellerServiceName returns the SellerServiceName field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetSellerServiceName() string {
	if o == nil || IsNil(o.SellerServiceName) {
		var ret string
		return ret
	}
	return *o.SellerServiceName
}

// GetSellerServiceNameOk returns a tuple with the SellerServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetSellerServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SellerServiceName) {
		return nil, false
	}
	return o.SellerServiceName, true
}

// HasSellerServiceName returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasSellerServiceName() bool {
	if o != nil && !IsNil(o.SellerServiceName) {
		return true
	}

	return false
}

// SetSellerServiceName gets a reference to the given string and assigns it to the SellerServiceName field.
func (o *GETConnectionByUuidResponse) SetSellerServiceName(v string) {
	o.SellerServiceName = &v
}

// GetSellerServiceUUID returns the SellerServiceUUID field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetSellerServiceUUID() string {
	if o == nil || IsNil(o.SellerServiceUUID) {
		var ret string
		return ret
	}
	return *o.SellerServiceUUID
}

// GetSellerServiceUUIDOk returns a tuple with the SellerServiceUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetSellerServiceUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.SellerServiceUUID) {
		return nil, false
	}
	return o.SellerServiceUUID, true
}

// HasSellerServiceUUID returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasSellerServiceUUID() bool {
	if o != nil && !IsNil(o.SellerServiceUUID) {
		return true
	}

	return false
}

// SetSellerServiceUUID gets a reference to the given string and assigns it to the SellerServiceUUID field.
func (o *GETConnectionByUuidResponse) SetSellerServiceUUID(v string) {
	o.SellerServiceUUID = &v
}

// GetSellerOrganizationName returns the SellerOrganizationName field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetSellerOrganizationName() string {
	if o == nil || IsNil(o.SellerOrganizationName) {
		var ret string
		return ret
	}
	return *o.SellerOrganizationName
}

// GetSellerOrganizationNameOk returns a tuple with the SellerOrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetSellerOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.SellerOrganizationName) {
		return nil, false
	}
	return o.SellerOrganizationName, true
}

// HasSellerOrganizationName returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasSellerOrganizationName() bool {
	if o != nil && !IsNil(o.SellerOrganizationName) {
		return true
	}

	return false
}

// SetSellerOrganizationName gets a reference to the given string and assigns it to the SellerOrganizationName field.
func (o *GETConnectionByUuidResponse) SetSellerOrganizationName(v string) {
	o.SellerOrganizationName = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetNotifications() []string {
	if o == nil || IsNil(o.Notifications) {
		var ret []string
		return ret
	}
	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetNotificationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given []string and assigns it to the Notifications field.
func (o *GETConnectionByUuidResponse) SetNotifications(v []string) {
	o.Notifications = v
}

// GetPurchaseOrderNumber returns the PurchaseOrderNumber field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetPurchaseOrderNumber() string {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		var ret string
		return ret
	}
	return *o.PurchaseOrderNumber
}

// GetPurchaseOrderNumberOk returns a tuple with the PurchaseOrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetPurchaseOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseOrderNumber) {
		return nil, false
	}
	return o.PurchaseOrderNumber, true
}

// HasPurchaseOrderNumber returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasPurchaseOrderNumber() bool {
	if o != nil && !IsNil(o.PurchaseOrderNumber) {
		return true
	}

	return false
}

// SetPurchaseOrderNumber gets a reference to the given string and assigns it to the PurchaseOrderNumber field.
func (o *GETConnectionByUuidResponse) SetPurchaseOrderNumber(v string) {
	o.PurchaseOrderNumber = &v
}

// GetNamedTag returns the NamedTag field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetNamedTag() string {
	if o == nil || IsNil(o.NamedTag) {
		var ret string
		return ret
	}
	return *o.NamedTag
}

// GetNamedTagOk returns a tuple with the NamedTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetNamedTagOk() (*string, bool) {
	if o == nil || IsNil(o.NamedTag) {
		return nil, false
	}
	return o.NamedTag, true
}

// HasNamedTag returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasNamedTag() bool {
	if o != nil && !IsNil(o.NamedTag) {
		return true
	}

	return false
}

// SetNamedTag gets a reference to the given string and assigns it to the NamedTag field.
func (o *GETConnectionByUuidResponse) SetNamedTag(v string) {
	o.NamedTag = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *GETConnectionByUuidResponse) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *GETConnectionByUuidResponse) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedByFullName returns the CreatedByFullName field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetCreatedByFullName() string {
	if o == nil || IsNil(o.CreatedByFullName) {
		var ret string
		return ret
	}
	return *o.CreatedByFullName
}

// GetCreatedByFullNameOk returns a tuple with the CreatedByFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetCreatedByFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByFullName) {
		return nil, false
	}
	return o.CreatedByFullName, true
}

// HasCreatedByFullName returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasCreatedByFullName() bool {
	if o != nil && !IsNil(o.CreatedByFullName) {
		return true
	}

	return false
}

// SetCreatedByFullName gets a reference to the given string and assigns it to the CreatedByFullName field.
func (o *GETConnectionByUuidResponse) SetCreatedByFullName(v string) {
	o.CreatedByFullName = &v
}

// GetCreatedByEmail returns the CreatedByEmail field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetCreatedByEmail() string {
	if o == nil || IsNil(o.CreatedByEmail) {
		var ret string
		return ret
	}
	return *o.CreatedByEmail
}

// GetCreatedByEmailOk returns a tuple with the CreatedByEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetCreatedByEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByEmail) {
		return nil, false
	}
	return o.CreatedByEmail, true
}

// HasCreatedByEmail returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasCreatedByEmail() bool {
	if o != nil && !IsNil(o.CreatedByEmail) {
		return true
	}

	return false
}

// SetCreatedByEmail gets a reference to the given string and assigns it to the CreatedByEmail field.
func (o *GETConnectionByUuidResponse) SetCreatedByEmail(v string) {
	o.CreatedByEmail = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetLastUpdatedBy() string {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret string
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetLastUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given string and assigns it to the LastUpdatedBy field.
func (o *GETConnectionByUuidResponse) SetLastUpdatedBy(v string) {
	o.LastUpdatedBy = &v
}

// GetLastUpdatedDate returns the LastUpdatedDate field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetLastUpdatedDate() string {
	if o == nil || IsNil(o.LastUpdatedDate) {
		var ret string
		return ret
	}
	return *o.LastUpdatedDate
}

// GetLastUpdatedDateOk returns a tuple with the LastUpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetLastUpdatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedDate) {
		return nil, false
	}
	return o.LastUpdatedDate, true
}

// HasLastUpdatedDate returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasLastUpdatedDate() bool {
	if o != nil && !IsNil(o.LastUpdatedDate) {
		return true
	}

	return false
}

// SetLastUpdatedDate gets a reference to the given string and assigns it to the LastUpdatedDate field.
func (o *GETConnectionByUuidResponse) SetLastUpdatedDate(v string) {
	o.LastUpdatedDate = &v
}

// GetLastUpdatedByFullName returns the LastUpdatedByFullName field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetLastUpdatedByFullName() string {
	if o == nil || IsNil(o.LastUpdatedByFullName) {
		var ret string
		return ret
	}
	return *o.LastUpdatedByFullName
}

// GetLastUpdatedByFullNameOk returns a tuple with the LastUpdatedByFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetLastUpdatedByFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedByFullName) {
		return nil, false
	}
	return o.LastUpdatedByFullName, true
}

// HasLastUpdatedByFullName returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasLastUpdatedByFullName() bool {
	if o != nil && !IsNil(o.LastUpdatedByFullName) {
		return true
	}

	return false
}

// SetLastUpdatedByFullName gets a reference to the given string and assigns it to the LastUpdatedByFullName field.
func (o *GETConnectionByUuidResponse) SetLastUpdatedByFullName(v string) {
	o.LastUpdatedByFullName = &v
}

// GetLastUpdatedByEmail returns the LastUpdatedByEmail field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetLastUpdatedByEmail() string {
	if o == nil || IsNil(o.LastUpdatedByEmail) {
		var ret string
		return ret
	}
	return *o.LastUpdatedByEmail
}

// GetLastUpdatedByEmailOk returns a tuple with the LastUpdatedByEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetLastUpdatedByEmailOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedByEmail) {
		return nil, false
	}
	return o.LastUpdatedByEmail, true
}

// HasLastUpdatedByEmail returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasLastUpdatedByEmail() bool {
	if o != nil && !IsNil(o.LastUpdatedByEmail) {
		return true
	}

	return false
}

// SetLastUpdatedByEmail gets a reference to the given string and assigns it to the LastUpdatedByEmail field.
func (o *GETConnectionByUuidResponse) SetLastUpdatedByEmail(v string) {
	o.LastUpdatedByEmail = &v
}

// GetZSidePortName returns the ZSidePortName field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetZSidePortName() string {
	if o == nil || IsNil(o.ZSidePortName) {
		var ret string
		return ret
	}
	return *o.ZSidePortName
}

// GetZSidePortNameOk returns a tuple with the ZSidePortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetZSidePortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ZSidePortName) {
		return nil, false
	}
	return o.ZSidePortName, true
}

// HasZSidePortName returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasZSidePortName() bool {
	if o != nil && !IsNil(o.ZSidePortName) {
		return true
	}

	return false
}

// SetZSidePortName gets a reference to the given string and assigns it to the ZSidePortName field.
func (o *GETConnectionByUuidResponse) SetZSidePortName(v string) {
	o.ZSidePortName = &v
}

// GetZSidePortUUID returns the ZSidePortUUID field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetZSidePortUUID() string {
	if o == nil || IsNil(o.ZSidePortUUID) {
		var ret string
		return ret
	}
	return *o.ZSidePortUUID
}

// GetZSidePortUUIDOk returns a tuple with the ZSidePortUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetZSidePortUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.ZSidePortUUID) {
		return nil, false
	}
	return o.ZSidePortUUID, true
}

// HasZSidePortUUID returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasZSidePortUUID() bool {
	if o != nil && !IsNil(o.ZSidePortUUID) {
		return true
	}

	return false
}

// SetZSidePortUUID gets a reference to the given string and assigns it to the ZSidePortUUID field.
func (o *GETConnectionByUuidResponse) SetZSidePortUUID(v string) {
	o.ZSidePortUUID = &v
}

// GetZSideVlanCTag returns the ZSideVlanCTag field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetZSideVlanCTag() int32 {
	if o == nil || IsNil(o.ZSideVlanCTag) {
		var ret int32
		return ret
	}
	return *o.ZSideVlanCTag
}

// GetZSideVlanCTagOk returns a tuple with the ZSideVlanCTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetZSideVlanCTagOk() (*int32, bool) {
	if o == nil || IsNil(o.ZSideVlanCTag) {
		return nil, false
	}
	return o.ZSideVlanCTag, true
}

// HasZSideVlanCTag returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasZSideVlanCTag() bool {
	if o != nil && !IsNil(o.ZSideVlanCTag) {
		return true
	}

	return false
}

// SetZSideVlanCTag gets a reference to the given int32 and assigns it to the ZSideVlanCTag field.
func (o *GETConnectionByUuidResponse) SetZSideVlanCTag(v int32) {
	o.ZSideVlanCTag = &v
}

// GetZSideVlanSTag returns the ZSideVlanSTag field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetZSideVlanSTag() int32 {
	if o == nil || IsNil(o.ZSideVlanSTag) {
		var ret int32
		return ret
	}
	return *o.ZSideVlanSTag
}

// GetZSideVlanSTagOk returns a tuple with the ZSideVlanSTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetZSideVlanSTagOk() (*int32, bool) {
	if o == nil || IsNil(o.ZSideVlanSTag) {
		return nil, false
	}
	return o.ZSideVlanSTag, true
}

// HasZSideVlanSTag returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasZSideVlanSTag() bool {
	if o != nil && !IsNil(o.ZSideVlanSTag) {
		return true
	}

	return false
}

// SetZSideVlanSTag gets a reference to the given int32 and assigns it to the ZSideVlanSTag field.
func (o *GETConnectionByUuidResponse) SetZSideVlanSTag(v int32) {
	o.ZSideVlanSTag = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetRemote() bool {
	if o == nil || IsNil(o.Remote) {
		var ret bool
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetRemoteOk() (*bool, bool) {
	if o == nil || IsNil(o.Remote) {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasRemote() bool {
	if o != nil && !IsNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given bool and assigns it to the Remote field.
func (o *GETConnectionByUuidResponse) SetRemote(v bool) {
	o.Remote = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetPrivate() bool {
	if o == nil || IsNil(o.Private) {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.Private) {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasPrivate() bool {
	if o != nil && !IsNil(o.Private) {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *GETConnectionByUuidResponse) SetPrivate(v bool) {
	o.Private = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetSelf() bool {
	if o == nil || IsNil(o.Self) {
		var ret bool
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetSelfOk() (*bool, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given bool and assigns it to the Self field.
func (o *GETConnectionByUuidResponse) SetSelf(v bool) {
	o.Self = &v
}

// GetRedundantUuid returns the RedundantUuid field value if set, zero value otherwise.
func (o *GETConnectionByUuidResponse) GetRedundantUuid() string {
	if o == nil || IsNil(o.RedundantUuid) {
		var ret string
		return ret
	}
	return *o.RedundantUuid
}

// GetRedundantUuidOk returns a tuple with the RedundantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionByUuidResponse) GetRedundantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.RedundantUuid) {
		return nil, false
	}
	return o.RedundantUuid, true
}

// HasRedundantUuid returns a boolean if a field has been set.
func (o *GETConnectionByUuidResponse) HasRedundantUuid() bool {
	if o != nil && !IsNil(o.RedundantUuid) {
		return true
	}

	return false
}

// SetRedundantUuid gets a reference to the given string and assigns it to the RedundantUuid field.
func (o *GETConnectionByUuidResponse) SetRedundantUuid(v string) {
	o.RedundantUuid = &v
}

func (o GETConnectionByUuidResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GETConnectionByUuidResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuyerOrganizationName) {
		toSerialize["buyerOrganizationName"] = o.BuyerOrganizationName
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.VlanSTag) {
		toSerialize["vlanSTag"] = o.VlanSTag
	}
	if !IsNil(o.PortUUID) {
		toSerialize["portUUID"] = o.PortUUID
	}
	if !IsNil(o.PortName) {
		toSerialize["portName"] = o.PortName
	}
	if !IsNil(o.AsideEncapsulation) {
		toSerialize["asideEncapsulation"] = o.AsideEncapsulation
	}
	if !IsNil(o.MetroCode) {
		toSerialize["metroCode"] = o.MetroCode
	}
	if !IsNil(o.MetroDescription) {
		toSerialize["metroDescription"] = o.MetroDescription
	}
	if !IsNil(o.ProviderStatus) {
		toSerialize["providerStatus"] = o.ProviderStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.BillingTier) {
		toSerialize["billingTier"] = o.BillingTier
	}
	if !IsNil(o.AuthorizationKey) {
		toSerialize["authorizationKey"] = o.AuthorizationKey
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.SpeedUnit) {
		toSerialize["speedUnit"] = o.SpeedUnit
	}
	if !IsNil(o.RedundancyType) {
		toSerialize["redundancyType"] = o.RedundancyType
	}
	if !IsNil(o.RedundancyGroup) {
		toSerialize["redundancyGroup"] = o.RedundancyGroup
	}
	if !IsNil(o.SellerMetroCode) {
		toSerialize["sellerMetroCode"] = o.SellerMetroCode
	}
	if !IsNil(o.SellerMetroDescription) {
		toSerialize["sellerMetroDescription"] = o.SellerMetroDescription
	}
	if !IsNil(o.SellerServiceName) {
		toSerialize["sellerServiceName"] = o.SellerServiceName
	}
	if !IsNil(o.SellerServiceUUID) {
		toSerialize["sellerServiceUUID"] = o.SellerServiceUUID
	}
	if !IsNil(o.SellerOrganizationName) {
		toSerialize["sellerOrganizationName"] = o.SellerOrganizationName
	}
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	if !IsNil(o.PurchaseOrderNumber) {
		toSerialize["purchaseOrderNumber"] = o.PurchaseOrderNumber
	}
	if !IsNil(o.NamedTag) {
		toSerialize["namedTag"] = o.NamedTag
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedByFullName) {
		toSerialize["createdByFullName"] = o.CreatedByFullName
	}
	if !IsNil(o.CreatedByEmail) {
		toSerialize["createdByEmail"] = o.CreatedByEmail
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.LastUpdatedDate) {
		toSerialize["lastUpdatedDate"] = o.LastUpdatedDate
	}
	if !IsNil(o.LastUpdatedByFullName) {
		toSerialize["lastUpdatedByFullName"] = o.LastUpdatedByFullName
	}
	if !IsNil(o.LastUpdatedByEmail) {
		toSerialize["lastUpdatedByEmail"] = o.LastUpdatedByEmail
	}
	if !IsNil(o.ZSidePortName) {
		toSerialize["zSidePortName"] = o.ZSidePortName
	}
	if !IsNil(o.ZSidePortUUID) {
		toSerialize["zSidePortUUID"] = o.ZSidePortUUID
	}
	if !IsNil(o.ZSideVlanCTag) {
		toSerialize["zSideVlanCTag"] = o.ZSideVlanCTag
	}
	if !IsNil(o.ZSideVlanSTag) {
		toSerialize["zSideVlanSTag"] = o.ZSideVlanSTag
	}
	if !IsNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if !IsNil(o.Private) {
		toSerialize["private"] = o.Private
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.RedundantUuid) {
		toSerialize["redundantUuid"] = o.RedundantUuid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GETConnectionByUuidResponse) UnmarshalJSON(data []byte) (err error) {
	varGETConnectionByUuidResponse := _GETConnectionByUuidResponse{}

	err = json.Unmarshal(data, &varGETConnectionByUuidResponse)

	if err != nil {
		return err
	}

	*o = GETConnectionByUuidResponse(varGETConnectionByUuidResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "buyerOrganizationName")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "name")
		delete(additionalProperties, "vlanSTag")
		delete(additionalProperties, "portUUID")
		delete(additionalProperties, "portName")
		delete(additionalProperties, "asideEncapsulation")
		delete(additionalProperties, "metroCode")
		delete(additionalProperties, "metroDescription")
		delete(additionalProperties, "providerStatus")
		delete(additionalProperties, "status")
		delete(additionalProperties, "billingTier")
		delete(additionalProperties, "authorizationKey")
		delete(additionalProperties, "speed")
		delete(additionalProperties, "speedUnit")
		delete(additionalProperties, "redundancyType")
		delete(additionalProperties, "redundancyGroup")
		delete(additionalProperties, "sellerMetroCode")
		delete(additionalProperties, "sellerMetroDescription")
		delete(additionalProperties, "sellerServiceName")
		delete(additionalProperties, "sellerServiceUUID")
		delete(additionalProperties, "sellerOrganizationName")
		delete(additionalProperties, "notifications")
		delete(additionalProperties, "purchaseOrderNumber")
		delete(additionalProperties, "namedTag")
		delete(additionalProperties, "createdDate")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "createdByFullName")
		delete(additionalProperties, "createdByEmail")
		delete(additionalProperties, "lastUpdatedBy")
		delete(additionalProperties, "lastUpdatedDate")
		delete(additionalProperties, "lastUpdatedByFullName")
		delete(additionalProperties, "lastUpdatedByEmail")
		delete(additionalProperties, "zSidePortName")
		delete(additionalProperties, "zSidePortUUID")
		delete(additionalProperties, "zSideVlanCTag")
		delete(additionalProperties, "zSideVlanSTag")
		delete(additionalProperties, "remote")
		delete(additionalProperties, "private")
		delete(additionalProperties, "self")
		delete(additionalProperties, "redundantUuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGETConnectionByUuidResponse struct {
	value *GETConnectionByUuidResponse
	isSet bool
}

func (v NullableGETConnectionByUuidResponse) Get() *GETConnectionByUuidResponse {
	return v.value
}

func (v *NullableGETConnectionByUuidResponse) Set(val *GETConnectionByUuidResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGETConnectionByUuidResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGETConnectionByUuidResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETConnectionByUuidResponse(val *GETConnectionByUuidResponse) *NullableGETConnectionByUuidResponse {
	return &NullableGETConnectionByUuidResponse{value: val, isSet: true}
}

func (v NullableGETConnectionByUuidResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETConnectionByUuidResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
