/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the GETConnectionsPageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GETConnectionsPageResponse{}

// GETConnectionsPageResponse struct for GETConnectionsPageResponse
type GETConnectionsPageResponse struct {
	IsLastPage           *bool                         `json:"isLastPage,omitempty"`
	TotalCount           *int32                        `json:"totalCount,omitempty"`
	IsFirstPage          *bool                         `json:"isFirstPage,omitempty"`
	PageSize             *int32                        `json:"pageSize,omitempty"`
	PageNumber           *int32                        `json:"pageNumber,omitempty"`
	Content              []GETConnectionByUuidResponse `json:"content,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GETConnectionsPageResponse GETConnectionsPageResponse

// NewGETConnectionsPageResponse instantiates a new GETConnectionsPageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGETConnectionsPageResponse() *GETConnectionsPageResponse {
	this := GETConnectionsPageResponse{}
	return &this
}

// NewGETConnectionsPageResponseWithDefaults instantiates a new GETConnectionsPageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGETConnectionsPageResponseWithDefaults() *GETConnectionsPageResponse {
	this := GETConnectionsPageResponse{}
	return &this
}

// GetIsLastPage returns the IsLastPage field value if set, zero value otherwise.
func (o *GETConnectionsPageResponse) GetIsLastPage() bool {
	if o == nil || IsNil(o.IsLastPage) {
		var ret bool
		return ret
	}
	return *o.IsLastPage
}

// GetIsLastPageOk returns a tuple with the IsLastPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionsPageResponse) GetIsLastPageOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLastPage) {
		return nil, false
	}
	return o.IsLastPage, true
}

// HasIsLastPage returns a boolean if a field has been set.
func (o *GETConnectionsPageResponse) HasIsLastPage() bool {
	if o != nil && !IsNil(o.IsLastPage) {
		return true
	}

	return false
}

// SetIsLastPage gets a reference to the given bool and assigns it to the IsLastPage field.
func (o *GETConnectionsPageResponse) SetIsLastPage(v bool) {
	o.IsLastPage = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GETConnectionsPageResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionsPageResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GETConnectionsPageResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GETConnectionsPageResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetIsFirstPage returns the IsFirstPage field value if set, zero value otherwise.
func (o *GETConnectionsPageResponse) GetIsFirstPage() bool {
	if o == nil || IsNil(o.IsFirstPage) {
		var ret bool
		return ret
	}
	return *o.IsFirstPage
}

// GetIsFirstPageOk returns a tuple with the IsFirstPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionsPageResponse) GetIsFirstPageOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFirstPage) {
		return nil, false
	}
	return o.IsFirstPage, true
}

// HasIsFirstPage returns a boolean if a field has been set.
func (o *GETConnectionsPageResponse) HasIsFirstPage() bool {
	if o != nil && !IsNil(o.IsFirstPage) {
		return true
	}

	return false
}

// SetIsFirstPage gets a reference to the given bool and assigns it to the IsFirstPage field.
func (o *GETConnectionsPageResponse) SetIsFirstPage(v bool) {
	o.IsFirstPage = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *GETConnectionsPageResponse) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionsPageResponse) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *GETConnectionsPageResponse) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *GETConnectionsPageResponse) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *GETConnectionsPageResponse) GetPageNumber() int32 {
	if o == nil || IsNil(o.PageNumber) {
		var ret int32
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionsPageResponse) GetPageNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *GETConnectionsPageResponse) HasPageNumber() bool {
	if o != nil && !IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int32 and assigns it to the PageNumber field.
func (o *GETConnectionsPageResponse) SetPageNumber(v int32) {
	o.PageNumber = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *GETConnectionsPageResponse) GetContent() []GETConnectionByUuidResponse {
	if o == nil || IsNil(o.Content) {
		var ret []GETConnectionByUuidResponse
		return ret
	}
	return o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETConnectionsPageResponse) GetContentOk() ([]GETConnectionByUuidResponse, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *GETConnectionsPageResponse) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given []GETConnectionByUuidResponse and assigns it to the Content field.
func (o *GETConnectionsPageResponse) SetContent(v []GETConnectionByUuidResponse) {
	o.Content = v
}

func (o GETConnectionsPageResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GETConnectionsPageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsLastPage) {
		toSerialize["isLastPage"] = o.IsLastPage
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	if !IsNil(o.IsFirstPage) {
		toSerialize["isFirstPage"] = o.IsFirstPage
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.PageNumber) {
		toSerialize["pageNumber"] = o.PageNumber
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GETConnectionsPageResponse) UnmarshalJSON(data []byte) (err error) {
	varGETConnectionsPageResponse := _GETConnectionsPageResponse{}

	err = json.Unmarshal(data, &varGETConnectionsPageResponse)

	if err != nil {
		return err
	}

	*o = GETConnectionsPageResponse(varGETConnectionsPageResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "isLastPage")
		delete(additionalProperties, "totalCount")
		delete(additionalProperties, "isFirstPage")
		delete(additionalProperties, "pageSize")
		delete(additionalProperties, "pageNumber")
		delete(additionalProperties, "content")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGETConnectionsPageResponse struct {
	value *GETConnectionsPageResponse
	isSet bool
}

func (v NullableGETConnectionsPageResponse) Get() *GETConnectionsPageResponse {
	return v.value
}

func (v *NullableGETConnectionsPageResponse) Set(val *GETConnectionsPageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGETConnectionsPageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGETConnectionsPageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETConnectionsPageResponse(val *GETConnectionsPageResponse) *NullableGETConnectionsPageResponse {
	return &NullableGETConnectionsPageResponse{value: val, isSet: true}
}

func (v NullableGETConnectionsPageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETConnectionsPageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
