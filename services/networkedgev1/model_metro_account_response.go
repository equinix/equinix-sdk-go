/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the MetroAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetroAccountResponse{}

// MetroAccountResponse struct for MetroAccountResponse
type MetroAccountResponse struct {
	// account Name
	AccountName *string `json:"accountName,omitempty"`
	// account number
	AccountNumber *int32 `json:"accountNumber,omitempty"`
	// account UcmId
	AccountUcmId *string `json:"accountUcmId,omitempty"`
	// account status
	AccountStatus *string `json:"accountStatus,omitempty"`
	// An array of metros where the account is valid
	Metros []string `json:"metros,omitempty"`
	// Whether the account has a credit hold. You cannot use an account on credit hold to create a device.
	CreditHold *bool `json:"creditHold,omitempty"`
	// referenceId
	ReferenceId          *string `json:"referenceId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetroAccountResponse MetroAccountResponse

// NewMetroAccountResponse instantiates a new MetroAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetroAccountResponse() *MetroAccountResponse {
	this := MetroAccountResponse{}
	return &this
}

// NewMetroAccountResponseWithDefaults instantiates a new MetroAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetroAccountResponseWithDefaults() *MetroAccountResponse {
	this := MetroAccountResponse{}
	return &this
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *MetroAccountResponse) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroAccountResponse) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *MetroAccountResponse) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *MetroAccountResponse) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *MetroAccountResponse) GetAccountNumber() int32 {
	if o == nil || IsNil(o.AccountNumber) {
		var ret int32
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroAccountResponse) GetAccountNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *MetroAccountResponse) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given int32 and assigns it to the AccountNumber field.
func (o *MetroAccountResponse) SetAccountNumber(v int32) {
	o.AccountNumber = &v
}

// GetAccountUcmId returns the AccountUcmId field value if set, zero value otherwise.
func (o *MetroAccountResponse) GetAccountUcmId() string {
	if o == nil || IsNil(o.AccountUcmId) {
		var ret string
		return ret
	}
	return *o.AccountUcmId
}

// GetAccountUcmIdOk returns a tuple with the AccountUcmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroAccountResponse) GetAccountUcmIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountUcmId) {
		return nil, false
	}
	return o.AccountUcmId, true
}

// HasAccountUcmId returns a boolean if a field has been set.
func (o *MetroAccountResponse) HasAccountUcmId() bool {
	if o != nil && !IsNil(o.AccountUcmId) {
		return true
	}

	return false
}

// SetAccountUcmId gets a reference to the given string and assigns it to the AccountUcmId field.
func (o *MetroAccountResponse) SetAccountUcmId(v string) {
	o.AccountUcmId = &v
}

// GetAccountStatus returns the AccountStatus field value if set, zero value otherwise.
func (o *MetroAccountResponse) GetAccountStatus() string {
	if o == nil || IsNil(o.AccountStatus) {
		var ret string
		return ret
	}
	return *o.AccountStatus
}

// GetAccountStatusOk returns a tuple with the AccountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroAccountResponse) GetAccountStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AccountStatus) {
		return nil, false
	}
	return o.AccountStatus, true
}

// HasAccountStatus returns a boolean if a field has been set.
func (o *MetroAccountResponse) HasAccountStatus() bool {
	if o != nil && !IsNil(o.AccountStatus) {
		return true
	}

	return false
}

// SetAccountStatus gets a reference to the given string and assigns it to the AccountStatus field.
func (o *MetroAccountResponse) SetAccountStatus(v string) {
	o.AccountStatus = &v
}

// GetMetros returns the Metros field value if set, zero value otherwise.
func (o *MetroAccountResponse) GetMetros() []string {
	if o == nil || IsNil(o.Metros) {
		var ret []string
		return ret
	}
	return o.Metros
}

// GetMetrosOk returns a tuple with the Metros field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroAccountResponse) GetMetrosOk() ([]string, bool) {
	if o == nil || IsNil(o.Metros) {
		return nil, false
	}
	return o.Metros, true
}

// HasMetros returns a boolean if a field has been set.
func (o *MetroAccountResponse) HasMetros() bool {
	if o != nil && !IsNil(o.Metros) {
		return true
	}

	return false
}

// SetMetros gets a reference to the given []string and assigns it to the Metros field.
func (o *MetroAccountResponse) SetMetros(v []string) {
	o.Metros = v
}

// GetCreditHold returns the CreditHold field value if set, zero value otherwise.
func (o *MetroAccountResponse) GetCreditHold() bool {
	if o == nil || IsNil(o.CreditHold) {
		var ret bool
		return ret
	}
	return *o.CreditHold
}

// GetCreditHoldOk returns a tuple with the CreditHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroAccountResponse) GetCreditHoldOk() (*bool, bool) {
	if o == nil || IsNil(o.CreditHold) {
		return nil, false
	}
	return o.CreditHold, true
}

// HasCreditHold returns a boolean if a field has been set.
func (o *MetroAccountResponse) HasCreditHold() bool {
	if o != nil && !IsNil(o.CreditHold) {
		return true
	}

	return false
}

// SetCreditHold gets a reference to the given bool and assigns it to the CreditHold field.
func (o *MetroAccountResponse) SetCreditHold(v bool) {
	o.CreditHold = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *MetroAccountResponse) GetReferenceId() string {
	if o == nil || IsNil(o.ReferenceId) {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroAccountResponse) GetReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceId) {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *MetroAccountResponse) HasReferenceId() bool {
	if o != nil && !IsNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *MetroAccountResponse) SetReferenceId(v string) {
	o.ReferenceId = &v
}

func (o MetroAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetroAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.AccountUcmId) {
		toSerialize["accountUcmId"] = o.AccountUcmId
	}
	if !IsNil(o.AccountStatus) {
		toSerialize["accountStatus"] = o.AccountStatus
	}
	if !IsNil(o.Metros) {
		toSerialize["metros"] = o.Metros
	}
	if !IsNil(o.CreditHold) {
		toSerialize["creditHold"] = o.CreditHold
	}
	if !IsNil(o.ReferenceId) {
		toSerialize["referenceId"] = o.ReferenceId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetroAccountResponse) UnmarshalJSON(data []byte) (err error) {
	varMetroAccountResponse := _MetroAccountResponse{}

	err = json.Unmarshal(data, &varMetroAccountResponse)

	if err != nil {
		return err
	}

	*o = MetroAccountResponse(varMetroAccountResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountName")
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "accountUcmId")
		delete(additionalProperties, "accountStatus")
		delete(additionalProperties, "metros")
		delete(additionalProperties, "creditHold")
		delete(additionalProperties, "referenceId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetroAccountResponse struct {
	value *MetroAccountResponse
	isSet bool
}

func (v NullableMetroAccountResponse) Get() *MetroAccountResponse {
	return v.value
}

func (v *NullableMetroAccountResponse) Set(val *MetroAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMetroAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMetroAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetroAccountResponse(val *MetroAccountResponse) *NullableMetroAccountResponse {
	return &NullableMetroAccountResponse{value: val, isSet: true}
}

func (v NullableMetroAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetroAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
