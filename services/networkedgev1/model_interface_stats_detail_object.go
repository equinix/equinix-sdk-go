/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the InterfaceStatsDetailObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfaceStatsDetailObject{}

// InterfaceStatsDetailObject struct for InterfaceStatsDetailObject
type InterfaceStatsDetailObject struct {
	// Start time of the duration for which you want stats.
	StartDateTime *string `json:"startDateTime,omitempty"`
	// End time of the duration for which you want stats.
	EndDateTime *string `json:"endDateTime,omitempty"`
	// Unit.
	Unit                 *string                  `json:"unit,omitempty"`
	Inbound              *InterfaceStatsofTraffic `json:"inbound,omitempty"`
	Outbound             *InterfaceStatsofTraffic `json:"outbound,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InterfaceStatsDetailObject InterfaceStatsDetailObject

// NewInterfaceStatsDetailObject instantiates a new InterfaceStatsDetailObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceStatsDetailObject() *InterfaceStatsDetailObject {
	this := InterfaceStatsDetailObject{}
	return &this
}

// NewInterfaceStatsDetailObjectWithDefaults instantiates a new InterfaceStatsDetailObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceStatsDetailObjectWithDefaults() *InterfaceStatsDetailObject {
	this := InterfaceStatsDetailObject{}
	return &this
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *InterfaceStatsDetailObject) GetStartDateTime() string {
	if o == nil || IsNil(o.StartDateTime) {
		var ret string
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceStatsDetailObject) GetStartDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartDateTime) {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *InterfaceStatsDetailObject) HasStartDateTime() bool {
	if o != nil && !IsNil(o.StartDateTime) {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given string and assigns it to the StartDateTime field.
func (o *InterfaceStatsDetailObject) SetStartDateTime(v string) {
	o.StartDateTime = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *InterfaceStatsDetailObject) GetEndDateTime() string {
	if o == nil || IsNil(o.EndDateTime) {
		var ret string
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceStatsDetailObject) GetEndDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndDateTime) {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *InterfaceStatsDetailObject) HasEndDateTime() bool {
	if o != nil && !IsNil(o.EndDateTime) {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given string and assigns it to the EndDateTime field.
func (o *InterfaceStatsDetailObject) SetEndDateTime(v string) {
	o.EndDateTime = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *InterfaceStatsDetailObject) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceStatsDetailObject) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *InterfaceStatsDetailObject) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *InterfaceStatsDetailObject) SetUnit(v string) {
	o.Unit = &v
}

// GetInbound returns the Inbound field value if set, zero value otherwise.
func (o *InterfaceStatsDetailObject) GetInbound() InterfaceStatsofTraffic {
	if o == nil || IsNil(o.Inbound) {
		var ret InterfaceStatsofTraffic
		return ret
	}
	return *o.Inbound
}

// GetInboundOk returns a tuple with the Inbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceStatsDetailObject) GetInboundOk() (*InterfaceStatsofTraffic, bool) {
	if o == nil || IsNil(o.Inbound) {
		return nil, false
	}
	return o.Inbound, true
}

// HasInbound returns a boolean if a field has been set.
func (o *InterfaceStatsDetailObject) HasInbound() bool {
	if o != nil && !IsNil(o.Inbound) {
		return true
	}

	return false
}

// SetInbound gets a reference to the given InterfaceStatsofTraffic and assigns it to the Inbound field.
func (o *InterfaceStatsDetailObject) SetInbound(v InterfaceStatsofTraffic) {
	o.Inbound = &v
}

// GetOutbound returns the Outbound field value if set, zero value otherwise.
func (o *InterfaceStatsDetailObject) GetOutbound() InterfaceStatsofTraffic {
	if o == nil || IsNil(o.Outbound) {
		var ret InterfaceStatsofTraffic
		return ret
	}
	return *o.Outbound
}

// GetOutboundOk returns a tuple with the Outbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceStatsDetailObject) GetOutboundOk() (*InterfaceStatsofTraffic, bool) {
	if o == nil || IsNil(o.Outbound) {
		return nil, false
	}
	return o.Outbound, true
}

// HasOutbound returns a boolean if a field has been set.
func (o *InterfaceStatsDetailObject) HasOutbound() bool {
	if o != nil && !IsNil(o.Outbound) {
		return true
	}

	return false
}

// SetOutbound gets a reference to the given InterfaceStatsofTraffic and assigns it to the Outbound field.
func (o *InterfaceStatsDetailObject) SetOutbound(v InterfaceStatsofTraffic) {
	o.Outbound = &v
}

func (o InterfaceStatsDetailObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfaceStatsDetailObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDateTime) {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if !IsNil(o.EndDateTime) {
		toSerialize["endDateTime"] = o.EndDateTime
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.Inbound) {
		toSerialize["inbound"] = o.Inbound
	}
	if !IsNil(o.Outbound) {
		toSerialize["outbound"] = o.Outbound
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InterfaceStatsDetailObject) UnmarshalJSON(data []byte) (err error) {
	varInterfaceStatsDetailObject := _InterfaceStatsDetailObject{}

	err = json.Unmarshal(data, &varInterfaceStatsDetailObject)

	if err != nil {
		return err
	}

	*o = InterfaceStatsDetailObject(varInterfaceStatsDetailObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "startDateTime")
		delete(additionalProperties, "endDateTime")
		delete(additionalProperties, "unit")
		delete(additionalProperties, "inbound")
		delete(additionalProperties, "outbound")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInterfaceStatsDetailObject struct {
	value *InterfaceStatsDetailObject
	isSet bool
}

func (v NullableInterfaceStatsDetailObject) Get() *InterfaceStatsDetailObject {
	return v.value
}

func (v *NullableInterfaceStatsDetailObject) Set(val *InterfaceStatsDetailObject) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceStatsDetailObject) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceStatsDetailObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceStatsDetailObject(val *InterfaceStatsDetailObject) *NullableInterfaceStatsDetailObject {
	return &NullableInterfaceStatsDetailObject{value: val, isSet: true}
}

func (v NullableInterfaceStatsDetailObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceStatsDetailObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
