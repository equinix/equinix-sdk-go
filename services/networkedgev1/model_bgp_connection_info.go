/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the BgpConnectionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpConnectionInfo{}

// BgpConnectionInfo struct for BgpConnectionInfo
type BgpConnectionInfo struct {
	BgpStatus              *string            `json:"bgpStatus,omitempty"`
	IsPrimary              *bool              `json:"isPrimary,omitempty"`
	Metro                  *string            `json:"metro,omitempty"`
	Name                   *string            `json:"name,omitempty"`
	ProviderStatus         *string            `json:"providerStatus,omitempty"`
	RedundantConnection    *BgpConnectionInfo `json:"redundantConnection,omitempty"`
	RedundantUUID          *string            `json:"redundantUUID,omitempty"`
	SellerOrganizationName *string            `json:"sellerOrganizationName,omitempty"`
	Status                 *string            `json:"status,omitempty"`
	Uuid                   *string            `json:"uuid,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _BgpConnectionInfo BgpConnectionInfo

// NewBgpConnectionInfo instantiates a new BgpConnectionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpConnectionInfo() *BgpConnectionInfo {
	this := BgpConnectionInfo{}
	return &this
}

// NewBgpConnectionInfoWithDefaults instantiates a new BgpConnectionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpConnectionInfoWithDefaults() *BgpConnectionInfo {
	this := BgpConnectionInfo{}
	return &this
}

// GetBgpStatus returns the BgpStatus field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetBgpStatus() string {
	if o == nil || IsNil(o.BgpStatus) {
		var ret string
		return ret
	}
	return *o.BgpStatus
}

// GetBgpStatusOk returns a tuple with the BgpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetBgpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BgpStatus) {
		return nil, false
	}
	return o.BgpStatus, true
}

// HasBgpStatus returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasBgpStatus() bool {
	if o != nil && !IsNil(o.BgpStatus) {
		return true
	}

	return false
}

// SetBgpStatus gets a reference to the given string and assigns it to the BgpStatus field.
func (o *BgpConnectionInfo) SetBgpStatus(v string) {
	o.BgpStatus = &v
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetIsPrimary() bool {
	if o == nil || IsNil(o.IsPrimary) {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrimary) {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasIsPrimary() bool {
	if o != nil && !IsNil(o.IsPrimary) {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *BgpConnectionInfo) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

// GetMetro returns the Metro field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetMetro() string {
	if o == nil || IsNil(o.Metro) {
		var ret string
		return ret
	}
	return *o.Metro
}

// GetMetroOk returns a tuple with the Metro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetMetroOk() (*string, bool) {
	if o == nil || IsNil(o.Metro) {
		return nil, false
	}
	return o.Metro, true
}

// HasMetro returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasMetro() bool {
	if o != nil && !IsNil(o.Metro) {
		return true
	}

	return false
}

// SetMetro gets a reference to the given string and assigns it to the Metro field.
func (o *BgpConnectionInfo) SetMetro(v string) {
	o.Metro = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BgpConnectionInfo) SetName(v string) {
	o.Name = &v
}

// GetProviderStatus returns the ProviderStatus field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetProviderStatus() string {
	if o == nil || IsNil(o.ProviderStatus) {
		var ret string
		return ret
	}
	return *o.ProviderStatus
}

// GetProviderStatusOk returns a tuple with the ProviderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetProviderStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderStatus) {
		return nil, false
	}
	return o.ProviderStatus, true
}

// HasProviderStatus returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasProviderStatus() bool {
	if o != nil && !IsNil(o.ProviderStatus) {
		return true
	}

	return false
}

// SetProviderStatus gets a reference to the given string and assigns it to the ProviderStatus field.
func (o *BgpConnectionInfo) SetProviderStatus(v string) {
	o.ProviderStatus = &v
}

// GetRedundantConnection returns the RedundantConnection field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetRedundantConnection() BgpConnectionInfo {
	if o == nil || IsNil(o.RedundantConnection) {
		var ret BgpConnectionInfo
		return ret
	}
	return *o.RedundantConnection
}

// GetRedundantConnectionOk returns a tuple with the RedundantConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetRedundantConnectionOk() (*BgpConnectionInfo, bool) {
	if o == nil || IsNil(o.RedundantConnection) {
		return nil, false
	}
	return o.RedundantConnection, true
}

// HasRedundantConnection returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasRedundantConnection() bool {
	if o != nil && !IsNil(o.RedundantConnection) {
		return true
	}

	return false
}

// SetRedundantConnection gets a reference to the given BgpConnectionInfo and assigns it to the RedundantConnection field.
func (o *BgpConnectionInfo) SetRedundantConnection(v BgpConnectionInfo) {
	o.RedundantConnection = &v
}

// GetRedundantUUID returns the RedundantUUID field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetRedundantUUID() string {
	if o == nil || IsNil(o.RedundantUUID) {
		var ret string
		return ret
	}
	return *o.RedundantUUID
}

// GetRedundantUUIDOk returns a tuple with the RedundantUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetRedundantUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.RedundantUUID) {
		return nil, false
	}
	return o.RedundantUUID, true
}

// HasRedundantUUID returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasRedundantUUID() bool {
	if o != nil && !IsNil(o.RedundantUUID) {
		return true
	}

	return false
}

// SetRedundantUUID gets a reference to the given string and assigns it to the RedundantUUID field.
func (o *BgpConnectionInfo) SetRedundantUUID(v string) {
	o.RedundantUUID = &v
}

// GetSellerOrganizationName returns the SellerOrganizationName field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetSellerOrganizationName() string {
	if o == nil || IsNil(o.SellerOrganizationName) {
		var ret string
		return ret
	}
	return *o.SellerOrganizationName
}

// GetSellerOrganizationNameOk returns a tuple with the SellerOrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetSellerOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.SellerOrganizationName) {
		return nil, false
	}
	return o.SellerOrganizationName, true
}

// HasSellerOrganizationName returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasSellerOrganizationName() bool {
	if o != nil && !IsNil(o.SellerOrganizationName) {
		return true
	}

	return false
}

// SetSellerOrganizationName gets a reference to the given string and assigns it to the SellerOrganizationName field.
func (o *BgpConnectionInfo) SetSellerOrganizationName(v string) {
	o.SellerOrganizationName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BgpConnectionInfo) SetStatus(v string) {
	o.Status = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *BgpConnectionInfo) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConnectionInfo) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *BgpConnectionInfo) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *BgpConnectionInfo) SetUuid(v string) {
	o.Uuid = &v
}

func (o BgpConnectionInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpConnectionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BgpStatus) {
		toSerialize["bgpStatus"] = o.BgpStatus
	}
	if !IsNil(o.IsPrimary) {
		toSerialize["isPrimary"] = o.IsPrimary
	}
	if !IsNil(o.Metro) {
		toSerialize["metro"] = o.Metro
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProviderStatus) {
		toSerialize["providerStatus"] = o.ProviderStatus
	}
	if !IsNil(o.RedundantConnection) {
		toSerialize["redundantConnection"] = o.RedundantConnection
	}
	if !IsNil(o.RedundantUUID) {
		toSerialize["redundantUUID"] = o.RedundantUUID
	}
	if !IsNil(o.SellerOrganizationName) {
		toSerialize["sellerOrganizationName"] = o.SellerOrganizationName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpConnectionInfo) UnmarshalJSON(data []byte) (err error) {
	varBgpConnectionInfo := _BgpConnectionInfo{}

	err = json.Unmarshal(data, &varBgpConnectionInfo)

	if err != nil {
		return err
	}

	*o = BgpConnectionInfo(varBgpConnectionInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "bgpStatus")
		delete(additionalProperties, "isPrimary")
		delete(additionalProperties, "metro")
		delete(additionalProperties, "name")
		delete(additionalProperties, "providerStatus")
		delete(additionalProperties, "redundantConnection")
		delete(additionalProperties, "redundantUUID")
		delete(additionalProperties, "sellerOrganizationName")
		delete(additionalProperties, "status")
		delete(additionalProperties, "uuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpConnectionInfo struct {
	value *BgpConnectionInfo
	isSet bool
}

func (v NullableBgpConnectionInfo) Get() *BgpConnectionInfo {
	return v.value
}

func (v *NullableBgpConnectionInfo) Set(val *BgpConnectionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpConnectionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpConnectionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpConnectionInfo(val *BgpConnectionInfo) *NullableBgpConnectionInfo {
	return &NullableBgpConnectionInfo{value: val, isSet: true}
}

func (v NullableBgpConnectionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpConnectionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
