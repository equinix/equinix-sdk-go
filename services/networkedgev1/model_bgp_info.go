/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the BgpInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpInfo{}

// BgpInfo struct for BgpInfo
type BgpInfo struct {
	AuthenticationKey     *string `json:"authenticationKey,omitempty"`
	ConnectionUuid        *string `json:"connectionUuid,omitempty"`
	CreatedBy             *string `json:"createdBy,omitempty"`
	CreatedByEmail        *string `json:"createdByEmail,omitempty"`
	CreatedByFullName     *string `json:"createdByFullName,omitempty"`
	CreatedDate           *string `json:"createdDate,omitempty"`
	DeletedBy             *string `json:"deletedBy,omitempty"`
	DeletedByEmail        *string `json:"deletedByEmail,omitempty"`
	DeletedByFullName     *string `json:"deletedByFullName,omitempty"`
	DeletedDate           *string `json:"deletedDate,omitempty"`
	LastUpdatedBy         *string `json:"lastUpdatedBy,omitempty"`
	LastUpdatedByEmail    *string `json:"lastUpdatedByEmail,omitempty"`
	LastUpdatedByFullName *string `json:"lastUpdatedByFullName,omitempty"`
	LastUpdatedDate       *string `json:"lastUpdatedDate,omitempty"`
	LocalAsn              *int64  `json:"localAsn,omitempty"`
	LocalIpAddress        *string `json:"localIpAddress,omitempty"`
	ProvisioningStatus    *string `json:"provisioningStatus,omitempty"`
	RemoteAsn             *int64  `json:"remoteAsn,omitempty"`
	RemoteIpAddress       *string `json:"remoteIpAddress,omitempty"`
	State                 *string `json:"state,omitempty"`
	Uuid                  *string `json:"uuid,omitempty"`
	VirtualDeviceUuid     *string `json:"virtualDeviceUuid,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _BgpInfo BgpInfo

// NewBgpInfo instantiates a new BgpInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpInfo() *BgpInfo {
	this := BgpInfo{}
	return &this
}

// NewBgpInfoWithDefaults instantiates a new BgpInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpInfoWithDefaults() *BgpInfo {
	this := BgpInfo{}
	return &this
}

// GetAuthenticationKey returns the AuthenticationKey field value if set, zero value otherwise.
func (o *BgpInfo) GetAuthenticationKey() string {
	if o == nil || IsNil(o.AuthenticationKey) {
		var ret string
		return ret
	}
	return *o.AuthenticationKey
}

// GetAuthenticationKeyOk returns a tuple with the AuthenticationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetAuthenticationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationKey) {
		return nil, false
	}
	return o.AuthenticationKey, true
}

// HasAuthenticationKey returns a boolean if a field has been set.
func (o *BgpInfo) HasAuthenticationKey() bool {
	if o != nil && !IsNil(o.AuthenticationKey) {
		return true
	}

	return false
}

// SetAuthenticationKey gets a reference to the given string and assigns it to the AuthenticationKey field.
func (o *BgpInfo) SetAuthenticationKey(v string) {
	o.AuthenticationKey = &v
}

// GetConnectionUuid returns the ConnectionUuid field value if set, zero value otherwise.
func (o *BgpInfo) GetConnectionUuid() string {
	if o == nil || IsNil(o.ConnectionUuid) {
		var ret string
		return ret
	}
	return *o.ConnectionUuid
}

// GetConnectionUuidOk returns a tuple with the ConnectionUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetConnectionUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionUuid) {
		return nil, false
	}
	return o.ConnectionUuid, true
}

// HasConnectionUuid returns a boolean if a field has been set.
func (o *BgpInfo) HasConnectionUuid() bool {
	if o != nil && !IsNil(o.ConnectionUuid) {
		return true
	}

	return false
}

// SetConnectionUuid gets a reference to the given string and assigns it to the ConnectionUuid field.
func (o *BgpInfo) SetConnectionUuid(v string) {
	o.ConnectionUuid = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *BgpInfo) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *BgpInfo) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *BgpInfo) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedByEmail returns the CreatedByEmail field value if set, zero value otherwise.
func (o *BgpInfo) GetCreatedByEmail() string {
	if o == nil || IsNil(o.CreatedByEmail) {
		var ret string
		return ret
	}
	return *o.CreatedByEmail
}

// GetCreatedByEmailOk returns a tuple with the CreatedByEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetCreatedByEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByEmail) {
		return nil, false
	}
	return o.CreatedByEmail, true
}

// HasCreatedByEmail returns a boolean if a field has been set.
func (o *BgpInfo) HasCreatedByEmail() bool {
	if o != nil && !IsNil(o.CreatedByEmail) {
		return true
	}

	return false
}

// SetCreatedByEmail gets a reference to the given string and assigns it to the CreatedByEmail field.
func (o *BgpInfo) SetCreatedByEmail(v string) {
	o.CreatedByEmail = &v
}

// GetCreatedByFullName returns the CreatedByFullName field value if set, zero value otherwise.
func (o *BgpInfo) GetCreatedByFullName() string {
	if o == nil || IsNil(o.CreatedByFullName) {
		var ret string
		return ret
	}
	return *o.CreatedByFullName
}

// GetCreatedByFullNameOk returns a tuple with the CreatedByFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetCreatedByFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByFullName) {
		return nil, false
	}
	return o.CreatedByFullName, true
}

// HasCreatedByFullName returns a boolean if a field has been set.
func (o *BgpInfo) HasCreatedByFullName() bool {
	if o != nil && !IsNil(o.CreatedByFullName) {
		return true
	}

	return false
}

// SetCreatedByFullName gets a reference to the given string and assigns it to the CreatedByFullName field.
func (o *BgpInfo) SetCreatedByFullName(v string) {
	o.CreatedByFullName = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *BgpInfo) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *BgpInfo) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *BgpInfo) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise.
func (o *BgpInfo) GetDeletedBy() string {
	if o == nil || IsNil(o.DeletedBy) {
		var ret string
		return ret
	}
	return *o.DeletedBy
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetDeletedByOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedBy) {
		return nil, false
	}
	return o.DeletedBy, true
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *BgpInfo) HasDeletedBy() bool {
	if o != nil && !IsNil(o.DeletedBy) {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given string and assigns it to the DeletedBy field.
func (o *BgpInfo) SetDeletedBy(v string) {
	o.DeletedBy = &v
}

// GetDeletedByEmail returns the DeletedByEmail field value if set, zero value otherwise.
func (o *BgpInfo) GetDeletedByEmail() string {
	if o == nil || IsNil(o.DeletedByEmail) {
		var ret string
		return ret
	}
	return *o.DeletedByEmail
}

// GetDeletedByEmailOk returns a tuple with the DeletedByEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetDeletedByEmailOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedByEmail) {
		return nil, false
	}
	return o.DeletedByEmail, true
}

// HasDeletedByEmail returns a boolean if a field has been set.
func (o *BgpInfo) HasDeletedByEmail() bool {
	if o != nil && !IsNil(o.DeletedByEmail) {
		return true
	}

	return false
}

// SetDeletedByEmail gets a reference to the given string and assigns it to the DeletedByEmail field.
func (o *BgpInfo) SetDeletedByEmail(v string) {
	o.DeletedByEmail = &v
}

// GetDeletedByFullName returns the DeletedByFullName field value if set, zero value otherwise.
func (o *BgpInfo) GetDeletedByFullName() string {
	if o == nil || IsNil(o.DeletedByFullName) {
		var ret string
		return ret
	}
	return *o.DeletedByFullName
}

// GetDeletedByFullNameOk returns a tuple with the DeletedByFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetDeletedByFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedByFullName) {
		return nil, false
	}
	return o.DeletedByFullName, true
}

// HasDeletedByFullName returns a boolean if a field has been set.
func (o *BgpInfo) HasDeletedByFullName() bool {
	if o != nil && !IsNil(o.DeletedByFullName) {
		return true
	}

	return false
}

// SetDeletedByFullName gets a reference to the given string and assigns it to the DeletedByFullName field.
func (o *BgpInfo) SetDeletedByFullName(v string) {
	o.DeletedByFullName = &v
}

// GetDeletedDate returns the DeletedDate field value if set, zero value otherwise.
func (o *BgpInfo) GetDeletedDate() string {
	if o == nil || IsNil(o.DeletedDate) {
		var ret string
		return ret
	}
	return *o.DeletedDate
}

// GetDeletedDateOk returns a tuple with the DeletedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetDeletedDateOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedDate) {
		return nil, false
	}
	return o.DeletedDate, true
}

// HasDeletedDate returns a boolean if a field has been set.
func (o *BgpInfo) HasDeletedDate() bool {
	if o != nil && !IsNil(o.DeletedDate) {
		return true
	}

	return false
}

// SetDeletedDate gets a reference to the given string and assigns it to the DeletedDate field.
func (o *BgpInfo) SetDeletedDate(v string) {
	o.DeletedDate = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *BgpInfo) GetLastUpdatedBy() string {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret string
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetLastUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *BgpInfo) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given string and assigns it to the LastUpdatedBy field.
func (o *BgpInfo) SetLastUpdatedBy(v string) {
	o.LastUpdatedBy = &v
}

// GetLastUpdatedByEmail returns the LastUpdatedByEmail field value if set, zero value otherwise.
func (o *BgpInfo) GetLastUpdatedByEmail() string {
	if o == nil || IsNil(o.LastUpdatedByEmail) {
		var ret string
		return ret
	}
	return *o.LastUpdatedByEmail
}

// GetLastUpdatedByEmailOk returns a tuple with the LastUpdatedByEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetLastUpdatedByEmailOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedByEmail) {
		return nil, false
	}
	return o.LastUpdatedByEmail, true
}

// HasLastUpdatedByEmail returns a boolean if a field has been set.
func (o *BgpInfo) HasLastUpdatedByEmail() bool {
	if o != nil && !IsNil(o.LastUpdatedByEmail) {
		return true
	}

	return false
}

// SetLastUpdatedByEmail gets a reference to the given string and assigns it to the LastUpdatedByEmail field.
func (o *BgpInfo) SetLastUpdatedByEmail(v string) {
	o.LastUpdatedByEmail = &v
}

// GetLastUpdatedByFullName returns the LastUpdatedByFullName field value if set, zero value otherwise.
func (o *BgpInfo) GetLastUpdatedByFullName() string {
	if o == nil || IsNil(o.LastUpdatedByFullName) {
		var ret string
		return ret
	}
	return *o.LastUpdatedByFullName
}

// GetLastUpdatedByFullNameOk returns a tuple with the LastUpdatedByFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetLastUpdatedByFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedByFullName) {
		return nil, false
	}
	return o.LastUpdatedByFullName, true
}

// HasLastUpdatedByFullName returns a boolean if a field has been set.
func (o *BgpInfo) HasLastUpdatedByFullName() bool {
	if o != nil && !IsNil(o.LastUpdatedByFullName) {
		return true
	}

	return false
}

// SetLastUpdatedByFullName gets a reference to the given string and assigns it to the LastUpdatedByFullName field.
func (o *BgpInfo) SetLastUpdatedByFullName(v string) {
	o.LastUpdatedByFullName = &v
}

// GetLastUpdatedDate returns the LastUpdatedDate field value if set, zero value otherwise.
func (o *BgpInfo) GetLastUpdatedDate() string {
	if o == nil || IsNil(o.LastUpdatedDate) {
		var ret string
		return ret
	}
	return *o.LastUpdatedDate
}

// GetLastUpdatedDateOk returns a tuple with the LastUpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetLastUpdatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedDate) {
		return nil, false
	}
	return o.LastUpdatedDate, true
}

// HasLastUpdatedDate returns a boolean if a field has been set.
func (o *BgpInfo) HasLastUpdatedDate() bool {
	if o != nil && !IsNil(o.LastUpdatedDate) {
		return true
	}

	return false
}

// SetLastUpdatedDate gets a reference to the given string and assigns it to the LastUpdatedDate field.
func (o *BgpInfo) SetLastUpdatedDate(v string) {
	o.LastUpdatedDate = &v
}

// GetLocalAsn returns the LocalAsn field value if set, zero value otherwise.
func (o *BgpInfo) GetLocalAsn() int64 {
	if o == nil || IsNil(o.LocalAsn) {
		var ret int64
		return ret
	}
	return *o.LocalAsn
}

// GetLocalAsnOk returns a tuple with the LocalAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetLocalAsnOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalAsn) {
		return nil, false
	}
	return o.LocalAsn, true
}

// HasLocalAsn returns a boolean if a field has been set.
func (o *BgpInfo) HasLocalAsn() bool {
	if o != nil && !IsNil(o.LocalAsn) {
		return true
	}

	return false
}

// SetLocalAsn gets a reference to the given int64 and assigns it to the LocalAsn field.
func (o *BgpInfo) SetLocalAsn(v int64) {
	o.LocalAsn = &v
}

// GetLocalIpAddress returns the LocalIpAddress field value if set, zero value otherwise.
func (o *BgpInfo) GetLocalIpAddress() string {
	if o == nil || IsNil(o.LocalIpAddress) {
		var ret string
		return ret
	}
	return *o.LocalIpAddress
}

// GetLocalIpAddressOk returns a tuple with the LocalIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetLocalIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIpAddress) {
		return nil, false
	}
	return o.LocalIpAddress, true
}

// HasLocalIpAddress returns a boolean if a field has been set.
func (o *BgpInfo) HasLocalIpAddress() bool {
	if o != nil && !IsNil(o.LocalIpAddress) {
		return true
	}

	return false
}

// SetLocalIpAddress gets a reference to the given string and assigns it to the LocalIpAddress field.
func (o *BgpInfo) SetLocalIpAddress(v string) {
	o.LocalIpAddress = &v
}

// GetProvisioningStatus returns the ProvisioningStatus field value if set, zero value otherwise.
func (o *BgpInfo) GetProvisioningStatus() string {
	if o == nil || IsNil(o.ProvisioningStatus) {
		var ret string
		return ret
	}
	return *o.ProvisioningStatus
}

// GetProvisioningStatusOk returns a tuple with the ProvisioningStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetProvisioningStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ProvisioningStatus) {
		return nil, false
	}
	return o.ProvisioningStatus, true
}

// HasProvisioningStatus returns a boolean if a field has been set.
func (o *BgpInfo) HasProvisioningStatus() bool {
	if o != nil && !IsNil(o.ProvisioningStatus) {
		return true
	}

	return false
}

// SetProvisioningStatus gets a reference to the given string and assigns it to the ProvisioningStatus field.
func (o *BgpInfo) SetProvisioningStatus(v string) {
	o.ProvisioningStatus = &v
}

// GetRemoteAsn returns the RemoteAsn field value if set, zero value otherwise.
func (o *BgpInfo) GetRemoteAsn() int64 {
	if o == nil || IsNil(o.RemoteAsn) {
		var ret int64
		return ret
	}
	return *o.RemoteAsn
}

// GetRemoteAsnOk returns a tuple with the RemoteAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetRemoteAsnOk() (*int64, bool) {
	if o == nil || IsNil(o.RemoteAsn) {
		return nil, false
	}
	return o.RemoteAsn, true
}

// HasRemoteAsn returns a boolean if a field has been set.
func (o *BgpInfo) HasRemoteAsn() bool {
	if o != nil && !IsNil(o.RemoteAsn) {
		return true
	}

	return false
}

// SetRemoteAsn gets a reference to the given int64 and assigns it to the RemoteAsn field.
func (o *BgpInfo) SetRemoteAsn(v int64) {
	o.RemoteAsn = &v
}

// GetRemoteIpAddress returns the RemoteIpAddress field value if set, zero value otherwise.
func (o *BgpInfo) GetRemoteIpAddress() string {
	if o == nil || IsNil(o.RemoteIpAddress) {
		var ret string
		return ret
	}
	return *o.RemoteIpAddress
}

// GetRemoteIpAddressOk returns a tuple with the RemoteIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetRemoteIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIpAddress) {
		return nil, false
	}
	return o.RemoteIpAddress, true
}

// HasRemoteIpAddress returns a boolean if a field has been set.
func (o *BgpInfo) HasRemoteIpAddress() bool {
	if o != nil && !IsNil(o.RemoteIpAddress) {
		return true
	}

	return false
}

// SetRemoteIpAddress gets a reference to the given string and assigns it to the RemoteIpAddress field.
func (o *BgpInfo) SetRemoteIpAddress(v string) {
	o.RemoteIpAddress = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BgpInfo) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BgpInfo) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *BgpInfo) SetState(v string) {
	o.State = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *BgpInfo) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *BgpInfo) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *BgpInfo) SetUuid(v string) {
	o.Uuid = &v
}

// GetVirtualDeviceUuid returns the VirtualDeviceUuid field value if set, zero value otherwise.
func (o *BgpInfo) GetVirtualDeviceUuid() string {
	if o == nil || IsNil(o.VirtualDeviceUuid) {
		var ret string
		return ret
	}
	return *o.VirtualDeviceUuid
}

// GetVirtualDeviceUuidOk returns a tuple with the VirtualDeviceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpInfo) GetVirtualDeviceUuidOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualDeviceUuid) {
		return nil, false
	}
	return o.VirtualDeviceUuid, true
}

// HasVirtualDeviceUuid returns a boolean if a field has been set.
func (o *BgpInfo) HasVirtualDeviceUuid() bool {
	if o != nil && !IsNil(o.VirtualDeviceUuid) {
		return true
	}

	return false
}

// SetVirtualDeviceUuid gets a reference to the given string and assigns it to the VirtualDeviceUuid field.
func (o *BgpInfo) SetVirtualDeviceUuid(v string) {
	o.VirtualDeviceUuid = &v
}

func (o BgpInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthenticationKey) {
		toSerialize["authenticationKey"] = o.AuthenticationKey
	}
	if !IsNil(o.ConnectionUuid) {
		toSerialize["connectionUuid"] = o.ConnectionUuid
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedByEmail) {
		toSerialize["createdByEmail"] = o.CreatedByEmail
	}
	if !IsNil(o.CreatedByFullName) {
		toSerialize["createdByFullName"] = o.CreatedByFullName
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.DeletedBy) {
		toSerialize["deletedBy"] = o.DeletedBy
	}
	if !IsNil(o.DeletedByEmail) {
		toSerialize["deletedByEmail"] = o.DeletedByEmail
	}
	if !IsNil(o.DeletedByFullName) {
		toSerialize["deletedByFullName"] = o.DeletedByFullName
	}
	if !IsNil(o.DeletedDate) {
		toSerialize["deletedDate"] = o.DeletedDate
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.LastUpdatedByEmail) {
		toSerialize["lastUpdatedByEmail"] = o.LastUpdatedByEmail
	}
	if !IsNil(o.LastUpdatedByFullName) {
		toSerialize["lastUpdatedByFullName"] = o.LastUpdatedByFullName
	}
	if !IsNil(o.LastUpdatedDate) {
		toSerialize["lastUpdatedDate"] = o.LastUpdatedDate
	}
	if !IsNil(o.LocalAsn) {
		toSerialize["localAsn"] = o.LocalAsn
	}
	if !IsNil(o.LocalIpAddress) {
		toSerialize["localIpAddress"] = o.LocalIpAddress
	}
	if !IsNil(o.ProvisioningStatus) {
		toSerialize["provisioningStatus"] = o.ProvisioningStatus
	}
	if !IsNil(o.RemoteAsn) {
		toSerialize["remoteAsn"] = o.RemoteAsn
	}
	if !IsNil(o.RemoteIpAddress) {
		toSerialize["remoteIpAddress"] = o.RemoteIpAddress
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.VirtualDeviceUuid) {
		toSerialize["virtualDeviceUuid"] = o.VirtualDeviceUuid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpInfo) UnmarshalJSON(data []byte) (err error) {
	varBgpInfo := _BgpInfo{}

	err = json.Unmarshal(data, &varBgpInfo)

	if err != nil {
		return err
	}

	*o = BgpInfo(varBgpInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authenticationKey")
		delete(additionalProperties, "connectionUuid")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "createdByEmail")
		delete(additionalProperties, "createdByFullName")
		delete(additionalProperties, "createdDate")
		delete(additionalProperties, "deletedBy")
		delete(additionalProperties, "deletedByEmail")
		delete(additionalProperties, "deletedByFullName")
		delete(additionalProperties, "deletedDate")
		delete(additionalProperties, "lastUpdatedBy")
		delete(additionalProperties, "lastUpdatedByEmail")
		delete(additionalProperties, "lastUpdatedByFullName")
		delete(additionalProperties, "lastUpdatedDate")
		delete(additionalProperties, "localAsn")
		delete(additionalProperties, "localIpAddress")
		delete(additionalProperties, "provisioningStatus")
		delete(additionalProperties, "remoteAsn")
		delete(additionalProperties, "remoteIpAddress")
		delete(additionalProperties, "state")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "virtualDeviceUuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpInfo struct {
	value *BgpInfo
	isSet bool
}

func (v NullableBgpInfo) Get() *BgpInfo {
	return v.value
}

func (v *NullableBgpInfo) Set(val *BgpInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpInfo(val *BgpInfo) *NullableBgpInfo {
	return &NullableBgpInfo{value: val, isSet: true}
}

func (v NullableBgpInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
