/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the OrderSummaryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderSummaryResponse{}

// OrderSummaryResponse struct for OrderSummaryResponse
type OrderSummaryResponse struct {
	AccountNumber           *int32          `json:"accountNumber,omitempty"`
	AgreementId             *string         `json:"agreementId,omitempty"`
	Charges                 []DeviceElement `json:"charges,omitempty"`
	Currency                *string         `json:"currency,omitempty"`
	ErrorCode               *string         `json:"errorCode,omitempty"`
	ErrorMessage            *string         `json:"errorMessage,omitempty"`
	EsignAgreementId        *string         `json:"esignAgreementId,omitempty"`
	IbxCountry              *string         `json:"ibxCountry,omitempty"`
	IbxRegion               *string         `json:"ibxRegion,omitempty"`
	InitialTerm             *int32          `json:"initialTerm,omitempty"`
	Metro                   *string         `json:"metro,omitempty"`
	MonthlyRecurringCharges *float64        `json:"monthlyRecurringCharges,omitempty"`
	NonRecurringCharges     *float64        `json:"nonRecurringCharges,omitempty"`
	NonRenewalNotice        *string         `json:"nonRenewalNotice,omitempty"`
	OrderTerms              *string         `json:"orderTerms,omitempty"`
	PiPercentage            *string         `json:"piPercentage,omitempty"`
	ProductDescription      *string         `json:"productDescription,omitempty"`
	Quantity                *int32          `json:"quantity,omitempty"`
	QuoteContentType        *string         `json:"quoteContentType,omitempty"`
	QuoteFileName           *string         `json:"quoteFileName,omitempty"`
	ReferenceId             *string         `json:"referenceId,omitempty"`
	RenewalPeriod           *int32          `json:"renewalPeriod,omitempty"`
	RequestSignType         *string         `json:"requestSignType,omitempty"`
	SignStatus              *string         `json:"signStatus,omitempty"`
	SignType                *string         `json:"signType,omitempty"`
	Speed                   *string         `json:"speed,omitempty"`
	Status                  *string         `json:"status,omitempty"`
	TotalCharges            *float64        `json:"totalCharges,omitempty"`
	AdditionalProperties    map[string]interface{}
}

type _OrderSummaryResponse OrderSummaryResponse

// NewOrderSummaryResponse instantiates a new OrderSummaryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderSummaryResponse() *OrderSummaryResponse {
	this := OrderSummaryResponse{}
	return &this
}

// NewOrderSummaryResponseWithDefaults instantiates a new OrderSummaryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderSummaryResponseWithDefaults() *OrderSummaryResponse {
	this := OrderSummaryResponse{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetAccountNumber() int32 {
	if o == nil || IsNil(o.AccountNumber) {
		var ret int32
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetAccountNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given int32 and assigns it to the AccountNumber field.
func (o *OrderSummaryResponse) SetAccountNumber(v int32) {
	o.AccountNumber = &v
}

// GetAgreementId returns the AgreementId field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetAgreementId() string {
	if o == nil || IsNil(o.AgreementId) {
		var ret string
		return ret
	}
	return *o.AgreementId
}

// GetAgreementIdOk returns a tuple with the AgreementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetAgreementIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgreementId) {
		return nil, false
	}
	return o.AgreementId, true
}

// HasAgreementId returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasAgreementId() bool {
	if o != nil && !IsNil(o.AgreementId) {
		return true
	}

	return false
}

// SetAgreementId gets a reference to the given string and assigns it to the AgreementId field.
func (o *OrderSummaryResponse) SetAgreementId(v string) {
	o.AgreementId = &v
}

// GetCharges returns the Charges field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetCharges() []DeviceElement {
	if o == nil || IsNil(o.Charges) {
		var ret []DeviceElement
		return ret
	}
	return o.Charges
}

// GetChargesOk returns a tuple with the Charges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetChargesOk() ([]DeviceElement, bool) {
	if o == nil || IsNil(o.Charges) {
		return nil, false
	}
	return o.Charges, true
}

// HasCharges returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasCharges() bool {
	if o != nil && !IsNil(o.Charges) {
		return true
	}

	return false
}

// SetCharges gets a reference to the given []DeviceElement and assigns it to the Charges field.
func (o *OrderSummaryResponse) SetCharges(v []DeviceElement) {
	o.Charges = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *OrderSummaryResponse) SetCurrency(v string) {
	o.Currency = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *OrderSummaryResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *OrderSummaryResponse) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetEsignAgreementId returns the EsignAgreementId field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetEsignAgreementId() string {
	if o == nil || IsNil(o.EsignAgreementId) {
		var ret string
		return ret
	}
	return *o.EsignAgreementId
}

// GetEsignAgreementIdOk returns a tuple with the EsignAgreementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetEsignAgreementIdOk() (*string, bool) {
	if o == nil || IsNil(o.EsignAgreementId) {
		return nil, false
	}
	return o.EsignAgreementId, true
}

// HasEsignAgreementId returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasEsignAgreementId() bool {
	if o != nil && !IsNil(o.EsignAgreementId) {
		return true
	}

	return false
}

// SetEsignAgreementId gets a reference to the given string and assigns it to the EsignAgreementId field.
func (o *OrderSummaryResponse) SetEsignAgreementId(v string) {
	o.EsignAgreementId = &v
}

// GetIbxCountry returns the IbxCountry field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetIbxCountry() string {
	if o == nil || IsNil(o.IbxCountry) {
		var ret string
		return ret
	}
	return *o.IbxCountry
}

// GetIbxCountryOk returns a tuple with the IbxCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetIbxCountryOk() (*string, bool) {
	if o == nil || IsNil(o.IbxCountry) {
		return nil, false
	}
	return o.IbxCountry, true
}

// HasIbxCountry returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasIbxCountry() bool {
	if o != nil && !IsNil(o.IbxCountry) {
		return true
	}

	return false
}

// SetIbxCountry gets a reference to the given string and assigns it to the IbxCountry field.
func (o *OrderSummaryResponse) SetIbxCountry(v string) {
	o.IbxCountry = &v
}

// GetIbxRegion returns the IbxRegion field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetIbxRegion() string {
	if o == nil || IsNil(o.IbxRegion) {
		var ret string
		return ret
	}
	return *o.IbxRegion
}

// GetIbxRegionOk returns a tuple with the IbxRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetIbxRegionOk() (*string, bool) {
	if o == nil || IsNil(o.IbxRegion) {
		return nil, false
	}
	return o.IbxRegion, true
}

// HasIbxRegion returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasIbxRegion() bool {
	if o != nil && !IsNil(o.IbxRegion) {
		return true
	}

	return false
}

// SetIbxRegion gets a reference to the given string and assigns it to the IbxRegion field.
func (o *OrderSummaryResponse) SetIbxRegion(v string) {
	o.IbxRegion = &v
}

// GetInitialTerm returns the InitialTerm field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetInitialTerm() int32 {
	if o == nil || IsNil(o.InitialTerm) {
		var ret int32
		return ret
	}
	return *o.InitialTerm
}

// GetInitialTermOk returns a tuple with the InitialTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetInitialTermOk() (*int32, bool) {
	if o == nil || IsNil(o.InitialTerm) {
		return nil, false
	}
	return o.InitialTerm, true
}

// HasInitialTerm returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasInitialTerm() bool {
	if o != nil && !IsNil(o.InitialTerm) {
		return true
	}

	return false
}

// SetInitialTerm gets a reference to the given int32 and assigns it to the InitialTerm field.
func (o *OrderSummaryResponse) SetInitialTerm(v int32) {
	o.InitialTerm = &v
}

// GetMetro returns the Metro field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetMetro() string {
	if o == nil || IsNil(o.Metro) {
		var ret string
		return ret
	}
	return *o.Metro
}

// GetMetroOk returns a tuple with the Metro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetMetroOk() (*string, bool) {
	if o == nil || IsNil(o.Metro) {
		return nil, false
	}
	return o.Metro, true
}

// HasMetro returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasMetro() bool {
	if o != nil && !IsNil(o.Metro) {
		return true
	}

	return false
}

// SetMetro gets a reference to the given string and assigns it to the Metro field.
func (o *OrderSummaryResponse) SetMetro(v string) {
	o.Metro = &v
}

// GetMonthlyRecurringCharges returns the MonthlyRecurringCharges field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetMonthlyRecurringCharges() float64 {
	if o == nil || IsNil(o.MonthlyRecurringCharges) {
		var ret float64
		return ret
	}
	return *o.MonthlyRecurringCharges
}

// GetMonthlyRecurringChargesOk returns a tuple with the MonthlyRecurringCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetMonthlyRecurringChargesOk() (*float64, bool) {
	if o == nil || IsNil(o.MonthlyRecurringCharges) {
		return nil, false
	}
	return o.MonthlyRecurringCharges, true
}

// HasMonthlyRecurringCharges returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasMonthlyRecurringCharges() bool {
	if o != nil && !IsNil(o.MonthlyRecurringCharges) {
		return true
	}

	return false
}

// SetMonthlyRecurringCharges gets a reference to the given float64 and assigns it to the MonthlyRecurringCharges field.
func (o *OrderSummaryResponse) SetMonthlyRecurringCharges(v float64) {
	o.MonthlyRecurringCharges = &v
}

// GetNonRecurringCharges returns the NonRecurringCharges field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetNonRecurringCharges() float64 {
	if o == nil || IsNil(o.NonRecurringCharges) {
		var ret float64
		return ret
	}
	return *o.NonRecurringCharges
}

// GetNonRecurringChargesOk returns a tuple with the NonRecurringCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetNonRecurringChargesOk() (*float64, bool) {
	if o == nil || IsNil(o.NonRecurringCharges) {
		return nil, false
	}
	return o.NonRecurringCharges, true
}

// HasNonRecurringCharges returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasNonRecurringCharges() bool {
	if o != nil && !IsNil(o.NonRecurringCharges) {
		return true
	}

	return false
}

// SetNonRecurringCharges gets a reference to the given float64 and assigns it to the NonRecurringCharges field.
func (o *OrderSummaryResponse) SetNonRecurringCharges(v float64) {
	o.NonRecurringCharges = &v
}

// GetNonRenewalNotice returns the NonRenewalNotice field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetNonRenewalNotice() string {
	if o == nil || IsNil(o.NonRenewalNotice) {
		var ret string
		return ret
	}
	return *o.NonRenewalNotice
}

// GetNonRenewalNoticeOk returns a tuple with the NonRenewalNotice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetNonRenewalNoticeOk() (*string, bool) {
	if o == nil || IsNil(o.NonRenewalNotice) {
		return nil, false
	}
	return o.NonRenewalNotice, true
}

// HasNonRenewalNotice returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasNonRenewalNotice() bool {
	if o != nil && !IsNil(o.NonRenewalNotice) {
		return true
	}

	return false
}

// SetNonRenewalNotice gets a reference to the given string and assigns it to the NonRenewalNotice field.
func (o *OrderSummaryResponse) SetNonRenewalNotice(v string) {
	o.NonRenewalNotice = &v
}

// GetOrderTerms returns the OrderTerms field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetOrderTerms() string {
	if o == nil || IsNil(o.OrderTerms) {
		var ret string
		return ret
	}
	return *o.OrderTerms
}

// GetOrderTermsOk returns a tuple with the OrderTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetOrderTermsOk() (*string, bool) {
	if o == nil || IsNil(o.OrderTerms) {
		return nil, false
	}
	return o.OrderTerms, true
}

// HasOrderTerms returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasOrderTerms() bool {
	if o != nil && !IsNil(o.OrderTerms) {
		return true
	}

	return false
}

// SetOrderTerms gets a reference to the given string and assigns it to the OrderTerms field.
func (o *OrderSummaryResponse) SetOrderTerms(v string) {
	o.OrderTerms = &v
}

// GetPiPercentage returns the PiPercentage field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetPiPercentage() string {
	if o == nil || IsNil(o.PiPercentage) {
		var ret string
		return ret
	}
	return *o.PiPercentage
}

// GetPiPercentageOk returns a tuple with the PiPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetPiPercentageOk() (*string, bool) {
	if o == nil || IsNil(o.PiPercentage) {
		return nil, false
	}
	return o.PiPercentage, true
}

// HasPiPercentage returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasPiPercentage() bool {
	if o != nil && !IsNil(o.PiPercentage) {
		return true
	}

	return false
}

// SetPiPercentage gets a reference to the given string and assigns it to the PiPercentage field.
func (o *OrderSummaryResponse) SetPiPercentage(v string) {
	o.PiPercentage = &v
}

// GetProductDescription returns the ProductDescription field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetProductDescription() string {
	if o == nil || IsNil(o.ProductDescription) {
		var ret string
		return ret
	}
	return *o.ProductDescription
}

// GetProductDescriptionOk returns a tuple with the ProductDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetProductDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ProductDescription) {
		return nil, false
	}
	return o.ProductDescription, true
}

// HasProductDescription returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasProductDescription() bool {
	if o != nil && !IsNil(o.ProductDescription) {
		return true
	}

	return false
}

// SetProductDescription gets a reference to the given string and assigns it to the ProductDescription field.
func (o *OrderSummaryResponse) SetProductDescription(v string) {
	o.ProductDescription = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *OrderSummaryResponse) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetQuoteContentType returns the QuoteContentType field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetQuoteContentType() string {
	if o == nil || IsNil(o.QuoteContentType) {
		var ret string
		return ret
	}
	return *o.QuoteContentType
}

// GetQuoteContentTypeOk returns a tuple with the QuoteContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetQuoteContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteContentType) {
		return nil, false
	}
	return o.QuoteContentType, true
}

// HasQuoteContentType returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasQuoteContentType() bool {
	if o != nil && !IsNil(o.QuoteContentType) {
		return true
	}

	return false
}

// SetQuoteContentType gets a reference to the given string and assigns it to the QuoteContentType field.
func (o *OrderSummaryResponse) SetQuoteContentType(v string) {
	o.QuoteContentType = &v
}

// GetQuoteFileName returns the QuoteFileName field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetQuoteFileName() string {
	if o == nil || IsNil(o.QuoteFileName) {
		var ret string
		return ret
	}
	return *o.QuoteFileName
}

// GetQuoteFileNameOk returns a tuple with the QuoteFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetQuoteFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteFileName) {
		return nil, false
	}
	return o.QuoteFileName, true
}

// HasQuoteFileName returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasQuoteFileName() bool {
	if o != nil && !IsNil(o.QuoteFileName) {
		return true
	}

	return false
}

// SetQuoteFileName gets a reference to the given string and assigns it to the QuoteFileName field.
func (o *OrderSummaryResponse) SetQuoteFileName(v string) {
	o.QuoteFileName = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetReferenceId() string {
	if o == nil || IsNil(o.ReferenceId) {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceId) {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasReferenceId() bool {
	if o != nil && !IsNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *OrderSummaryResponse) SetReferenceId(v string) {
	o.ReferenceId = &v
}

// GetRenewalPeriod returns the RenewalPeriod field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetRenewalPeriod() int32 {
	if o == nil || IsNil(o.RenewalPeriod) {
		var ret int32
		return ret
	}
	return *o.RenewalPeriod
}

// GetRenewalPeriodOk returns a tuple with the RenewalPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetRenewalPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.RenewalPeriod) {
		return nil, false
	}
	return o.RenewalPeriod, true
}

// HasRenewalPeriod returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasRenewalPeriod() bool {
	if o != nil && !IsNil(o.RenewalPeriod) {
		return true
	}

	return false
}

// SetRenewalPeriod gets a reference to the given int32 and assigns it to the RenewalPeriod field.
func (o *OrderSummaryResponse) SetRenewalPeriod(v int32) {
	o.RenewalPeriod = &v
}

// GetRequestSignType returns the RequestSignType field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetRequestSignType() string {
	if o == nil || IsNil(o.RequestSignType) {
		var ret string
		return ret
	}
	return *o.RequestSignType
}

// GetRequestSignTypeOk returns a tuple with the RequestSignType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetRequestSignTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestSignType) {
		return nil, false
	}
	return o.RequestSignType, true
}

// HasRequestSignType returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasRequestSignType() bool {
	if o != nil && !IsNil(o.RequestSignType) {
		return true
	}

	return false
}

// SetRequestSignType gets a reference to the given string and assigns it to the RequestSignType field.
func (o *OrderSummaryResponse) SetRequestSignType(v string) {
	o.RequestSignType = &v
}

// GetSignStatus returns the SignStatus field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetSignStatus() string {
	if o == nil || IsNil(o.SignStatus) {
		var ret string
		return ret
	}
	return *o.SignStatus
}

// GetSignStatusOk returns a tuple with the SignStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetSignStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SignStatus) {
		return nil, false
	}
	return o.SignStatus, true
}

// HasSignStatus returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasSignStatus() bool {
	if o != nil && !IsNil(o.SignStatus) {
		return true
	}

	return false
}

// SetSignStatus gets a reference to the given string and assigns it to the SignStatus field.
func (o *OrderSummaryResponse) SetSignStatus(v string) {
	o.SignStatus = &v
}

// GetSignType returns the SignType field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetSignType() string {
	if o == nil || IsNil(o.SignType) {
		var ret string
		return ret
	}
	return *o.SignType
}

// GetSignTypeOk returns a tuple with the SignType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetSignTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SignType) {
		return nil, false
	}
	return o.SignType, true
}

// HasSignType returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasSignType() bool {
	if o != nil && !IsNil(o.SignType) {
		return true
	}

	return false
}

// SetSignType gets a reference to the given string and assigns it to the SignType field.
func (o *OrderSummaryResponse) SetSignType(v string) {
	o.SignType = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetSpeed() string {
	if o == nil || IsNil(o.Speed) {
		var ret string
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given string and assigns it to the Speed field.
func (o *OrderSummaryResponse) SetSpeed(v string) {
	o.Speed = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OrderSummaryResponse) SetStatus(v string) {
	o.Status = &v
}

// GetTotalCharges returns the TotalCharges field value if set, zero value otherwise.
func (o *OrderSummaryResponse) GetTotalCharges() float64 {
	if o == nil || IsNil(o.TotalCharges) {
		var ret float64
		return ret
	}
	return *o.TotalCharges
}

// GetTotalChargesOk returns a tuple with the TotalCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSummaryResponse) GetTotalChargesOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalCharges) {
		return nil, false
	}
	return o.TotalCharges, true
}

// HasTotalCharges returns a boolean if a field has been set.
func (o *OrderSummaryResponse) HasTotalCharges() bool {
	if o != nil && !IsNil(o.TotalCharges) {
		return true
	}

	return false
}

// SetTotalCharges gets a reference to the given float64 and assigns it to the TotalCharges field.
func (o *OrderSummaryResponse) SetTotalCharges(v float64) {
	o.TotalCharges = &v
}

func (o OrderSummaryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderSummaryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.AgreementId) {
		toSerialize["agreementId"] = o.AgreementId
	}
	if !IsNil(o.Charges) {
		toSerialize["charges"] = o.Charges
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.EsignAgreementId) {
		toSerialize["esignAgreementId"] = o.EsignAgreementId
	}
	if !IsNil(o.IbxCountry) {
		toSerialize["ibxCountry"] = o.IbxCountry
	}
	if !IsNil(o.IbxRegion) {
		toSerialize["ibxRegion"] = o.IbxRegion
	}
	if !IsNil(o.InitialTerm) {
		toSerialize["initialTerm"] = o.InitialTerm
	}
	if !IsNil(o.Metro) {
		toSerialize["metro"] = o.Metro
	}
	if !IsNil(o.MonthlyRecurringCharges) {
		toSerialize["monthlyRecurringCharges"] = o.MonthlyRecurringCharges
	}
	if !IsNil(o.NonRecurringCharges) {
		toSerialize["nonRecurringCharges"] = o.NonRecurringCharges
	}
	if !IsNil(o.NonRenewalNotice) {
		toSerialize["nonRenewalNotice"] = o.NonRenewalNotice
	}
	if !IsNil(o.OrderTerms) {
		toSerialize["orderTerms"] = o.OrderTerms
	}
	if !IsNil(o.PiPercentage) {
		toSerialize["piPercentage"] = o.PiPercentage
	}
	if !IsNil(o.ProductDescription) {
		toSerialize["productDescription"] = o.ProductDescription
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.QuoteContentType) {
		toSerialize["quoteContentType"] = o.QuoteContentType
	}
	if !IsNil(o.QuoteFileName) {
		toSerialize["quoteFileName"] = o.QuoteFileName
	}
	if !IsNil(o.ReferenceId) {
		toSerialize["referenceId"] = o.ReferenceId
	}
	if !IsNil(o.RenewalPeriod) {
		toSerialize["renewalPeriod"] = o.RenewalPeriod
	}
	if !IsNil(o.RequestSignType) {
		toSerialize["requestSignType"] = o.RequestSignType
	}
	if !IsNil(o.SignStatus) {
		toSerialize["signStatus"] = o.SignStatus
	}
	if !IsNil(o.SignType) {
		toSerialize["signType"] = o.SignType
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TotalCharges) {
		toSerialize["totalCharges"] = o.TotalCharges
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderSummaryResponse) UnmarshalJSON(data []byte) (err error) {
	varOrderSummaryResponse := _OrderSummaryResponse{}

	err = json.Unmarshal(data, &varOrderSummaryResponse)

	if err != nil {
		return err
	}

	*o = OrderSummaryResponse(varOrderSummaryResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "agreementId")
		delete(additionalProperties, "charges")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "errorCode")
		delete(additionalProperties, "errorMessage")
		delete(additionalProperties, "esignAgreementId")
		delete(additionalProperties, "ibxCountry")
		delete(additionalProperties, "ibxRegion")
		delete(additionalProperties, "initialTerm")
		delete(additionalProperties, "metro")
		delete(additionalProperties, "monthlyRecurringCharges")
		delete(additionalProperties, "nonRecurringCharges")
		delete(additionalProperties, "nonRenewalNotice")
		delete(additionalProperties, "orderTerms")
		delete(additionalProperties, "piPercentage")
		delete(additionalProperties, "productDescription")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "quoteContentType")
		delete(additionalProperties, "quoteFileName")
		delete(additionalProperties, "referenceId")
		delete(additionalProperties, "renewalPeriod")
		delete(additionalProperties, "requestSignType")
		delete(additionalProperties, "signStatus")
		delete(additionalProperties, "signType")
		delete(additionalProperties, "speed")
		delete(additionalProperties, "status")
		delete(additionalProperties, "totalCharges")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderSummaryResponse struct {
	value *OrderSummaryResponse
	isSet bool
}

func (v NullableOrderSummaryResponse) Get() *OrderSummaryResponse {
	return v.value
}

func (v *NullableOrderSummaryResponse) Set(val *OrderSummaryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderSummaryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderSummaryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderSummaryResponse(val *OrderSummaryResponse) *NullableOrderSummaryResponse {
	return &NullableOrderSummaryResponse{value: val, isSet: true}
}

func (v NullableOrderSummaryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderSummaryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
