/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the SshUserInfoDissociateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SshUserInfoDissociateResponse{}

// SshUserInfoDissociateResponse struct for SshUserInfoDissociateResponse
type SshUserInfoDissociateResponse struct {
	// true = the ssh user has been deleted since there are no more devices associated with this user; false = the ssh user has not been deleted since associations with devices exist.
	SshUserDeleted                    *bool `json:"sshUserDeleted,omitempty"`
	SshUserToDeviceAssociationDeleted *bool `json:"sshUserToDeviceAssociationDeleted,omitempty"`
	AdditionalProperties              map[string]interface{}
}

type _SshUserInfoDissociateResponse SshUserInfoDissociateResponse

// NewSshUserInfoDissociateResponse instantiates a new SshUserInfoDissociateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshUserInfoDissociateResponse() *SshUserInfoDissociateResponse {
	this := SshUserInfoDissociateResponse{}
	return &this
}

// NewSshUserInfoDissociateResponseWithDefaults instantiates a new SshUserInfoDissociateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshUserInfoDissociateResponseWithDefaults() *SshUserInfoDissociateResponse {
	this := SshUserInfoDissociateResponse{}
	return &this
}

// GetSshUserDeleted returns the SshUserDeleted field value if set, zero value otherwise.
func (o *SshUserInfoDissociateResponse) GetSshUserDeleted() bool {
	if o == nil || IsNil(o.SshUserDeleted) {
		var ret bool
		return ret
	}
	return *o.SshUserDeleted
}

// GetSshUserDeletedOk returns a tuple with the SshUserDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshUserInfoDissociateResponse) GetSshUserDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.SshUserDeleted) {
		return nil, false
	}
	return o.SshUserDeleted, true
}

// HasSshUserDeleted returns a boolean if a field has been set.
func (o *SshUserInfoDissociateResponse) HasSshUserDeleted() bool {
	if o != nil && !IsNil(o.SshUserDeleted) {
		return true
	}

	return false
}

// SetSshUserDeleted gets a reference to the given bool and assigns it to the SshUserDeleted field.
func (o *SshUserInfoDissociateResponse) SetSshUserDeleted(v bool) {
	o.SshUserDeleted = &v
}

// GetSshUserToDeviceAssociationDeleted returns the SshUserToDeviceAssociationDeleted field value if set, zero value otherwise.
func (o *SshUserInfoDissociateResponse) GetSshUserToDeviceAssociationDeleted() bool {
	if o == nil || IsNil(o.SshUserToDeviceAssociationDeleted) {
		var ret bool
		return ret
	}
	return *o.SshUserToDeviceAssociationDeleted
}

// GetSshUserToDeviceAssociationDeletedOk returns a tuple with the SshUserToDeviceAssociationDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshUserInfoDissociateResponse) GetSshUserToDeviceAssociationDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.SshUserToDeviceAssociationDeleted) {
		return nil, false
	}
	return o.SshUserToDeviceAssociationDeleted, true
}

// HasSshUserToDeviceAssociationDeleted returns a boolean if a field has been set.
func (o *SshUserInfoDissociateResponse) HasSshUserToDeviceAssociationDeleted() bool {
	if o != nil && !IsNil(o.SshUserToDeviceAssociationDeleted) {
		return true
	}

	return false
}

// SetSshUserToDeviceAssociationDeleted gets a reference to the given bool and assigns it to the SshUserToDeviceAssociationDeleted field.
func (o *SshUserInfoDissociateResponse) SetSshUserToDeviceAssociationDeleted(v bool) {
	o.SshUserToDeviceAssociationDeleted = &v
}

func (o SshUserInfoDissociateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SshUserInfoDissociateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SshUserDeleted) {
		toSerialize["sshUserDeleted"] = o.SshUserDeleted
	}
	if !IsNil(o.SshUserToDeviceAssociationDeleted) {
		toSerialize["sshUserToDeviceAssociationDeleted"] = o.SshUserToDeviceAssociationDeleted
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SshUserInfoDissociateResponse) UnmarshalJSON(data []byte) (err error) {
	varSshUserInfoDissociateResponse := _SshUserInfoDissociateResponse{}

	err = json.Unmarshal(data, &varSshUserInfoDissociateResponse)

	if err != nil {
		return err
	}

	*o = SshUserInfoDissociateResponse(varSshUserInfoDissociateResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sshUserDeleted")
		delete(additionalProperties, "sshUserToDeviceAssociationDeleted")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSshUserInfoDissociateResponse struct {
	value *SshUserInfoDissociateResponse
	isSet bool
}

func (v NullableSshUserInfoDissociateResponse) Get() *SshUserInfoDissociateResponse {
	return v.value
}

func (v *NullableSshUserInfoDissociateResponse) Set(val *SshUserInfoDissociateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSshUserInfoDissociateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSshUserInfoDissociateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshUserInfoDissociateResponse(val *SshUserInfoDissociateResponse) *NullableSshUserInfoDissociateResponse {
	return &NullableSshUserInfoDissociateResponse{value: val, isSet: true}
}

func (v NullableSshUserInfoDissociateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshUserInfoDissociateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
