/*
Network Edge APIs

Network Edge (NE) is a platform that allows customers to deploy and run virtual network services and appliances such as routers, load balancers, and firewalls on a generic device instead of additional dedicated hardware, CapEx and colo space. The Network Edge REST APIs allow you to interact with the Equinix Platform to programmatically create a virtual device and add services. Details on specific use cases can be found in the documentation available on the developer portal.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkedgev1

import (
	"encoding/json"
)

// checks if the PageResponseDtoMetroAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageResponseDtoMetroAccountResponse{}

// PageResponseDtoMetroAccountResponse struct for PageResponseDtoMetroAccountResponse
type PageResponseDtoMetroAccountResponse struct {
	// accountCreateUrl
	AccountCreateUrl *string                `json:"accountCreateUrl,omitempty"`
	Accounts         []MetroAccountResponse `json:"accounts,omitempty"`
	// error Message
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// error Code
	ErrorCode            *string `json:"errorCode,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PageResponseDtoMetroAccountResponse PageResponseDtoMetroAccountResponse

// NewPageResponseDtoMetroAccountResponse instantiates a new PageResponseDtoMetroAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageResponseDtoMetroAccountResponse() *PageResponseDtoMetroAccountResponse {
	this := PageResponseDtoMetroAccountResponse{}
	return &this
}

// NewPageResponseDtoMetroAccountResponseWithDefaults instantiates a new PageResponseDtoMetroAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageResponseDtoMetroAccountResponseWithDefaults() *PageResponseDtoMetroAccountResponse {
	this := PageResponseDtoMetroAccountResponse{}
	return &this
}

// GetAccountCreateUrl returns the AccountCreateUrl field value if set, zero value otherwise.
func (o *PageResponseDtoMetroAccountResponse) GetAccountCreateUrl() string {
	if o == nil || IsNil(o.AccountCreateUrl) {
		var ret string
		return ret
	}
	return *o.AccountCreateUrl
}

// GetAccountCreateUrlOk returns a tuple with the AccountCreateUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseDtoMetroAccountResponse) GetAccountCreateUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AccountCreateUrl) {
		return nil, false
	}
	return o.AccountCreateUrl, true
}

// HasAccountCreateUrl returns a boolean if a field has been set.
func (o *PageResponseDtoMetroAccountResponse) HasAccountCreateUrl() bool {
	if o != nil && !IsNil(o.AccountCreateUrl) {
		return true
	}

	return false
}

// SetAccountCreateUrl gets a reference to the given string and assigns it to the AccountCreateUrl field.
func (o *PageResponseDtoMetroAccountResponse) SetAccountCreateUrl(v string) {
	o.AccountCreateUrl = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *PageResponseDtoMetroAccountResponse) GetAccounts() []MetroAccountResponse {
	if o == nil || IsNil(o.Accounts) {
		var ret []MetroAccountResponse
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseDtoMetroAccountResponse) GetAccountsOk() ([]MetroAccountResponse, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *PageResponseDtoMetroAccountResponse) HasAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []MetroAccountResponse and assigns it to the Accounts field.
func (o *PageResponseDtoMetroAccountResponse) SetAccounts(v []MetroAccountResponse) {
	o.Accounts = v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *PageResponseDtoMetroAccountResponse) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseDtoMetroAccountResponse) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *PageResponseDtoMetroAccountResponse) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *PageResponseDtoMetroAccountResponse) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *PageResponseDtoMetroAccountResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseDtoMetroAccountResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *PageResponseDtoMetroAccountResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *PageResponseDtoMetroAccountResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

func (o PageResponseDtoMetroAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageResponseDtoMetroAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountCreateUrl) {
		toSerialize["accountCreateUrl"] = o.AccountCreateUrl
	}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PageResponseDtoMetroAccountResponse) UnmarshalJSON(data []byte) (err error) {
	varPageResponseDtoMetroAccountResponse := _PageResponseDtoMetroAccountResponse{}

	err = json.Unmarshal(data, &varPageResponseDtoMetroAccountResponse)

	if err != nil {
		return err
	}

	*o = PageResponseDtoMetroAccountResponse(varPageResponseDtoMetroAccountResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountCreateUrl")
		delete(additionalProperties, "accounts")
		delete(additionalProperties, "errorMessage")
		delete(additionalProperties, "errorCode")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePageResponseDtoMetroAccountResponse struct {
	value *PageResponseDtoMetroAccountResponse
	isSet bool
}

func (v NullablePageResponseDtoMetroAccountResponse) Get() *PageResponseDtoMetroAccountResponse {
	return v.value
}

func (v *NullablePageResponseDtoMetroAccountResponse) Set(val *PageResponseDtoMetroAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePageResponseDtoMetroAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePageResponseDtoMetroAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageResponseDtoMetroAccountResponse(val *PageResponseDtoMetroAccountResponse) *NullablePageResponseDtoMetroAccountResponse {
	return &NullablePageResponseDtoMetroAccountResponse{value: val, isSet: true}
}

func (v NullablePageResponseDtoMetroAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageResponseDtoMetroAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
