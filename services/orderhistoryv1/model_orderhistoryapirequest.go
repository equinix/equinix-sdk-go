/*
Retrieve Orders API

Based on a user's permission, a user may be able to view their own orders or also the orders from all of the users in their organization. These orders can be filtered by product type, order status, location, or date range. Only orders from the past 12 months will be returned.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package orderhistoryv1

import (
	"encoding/json"
)

// checks if the Orderhistoryapirequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Orderhistoryapirequest{}

// Orderhistoryapirequest struct for Orderhistoryapirequest
type Orderhistoryapirequest struct {
	Filters *Filters `json:"filters,omitempty"`
	// <b>ORDER_NUMBER:</b> Search by order number(1-123456789).<br><b>CUSTOMER_REFERENCE_NUMBER:</b> Search by customer reference number which was entered as part place order.<br><b>TROUBLE_TICKET_NUMBER:</b> Search by trouble ticket numnber(5-123456).<br><b>WORK_ACTIVITY_NUMBER:</b> Search by work order activity number(3-123456).
	Source []OrderhistoryapirequestSourceInner `json:"source,omitempty"`
	// Query value to be queried against source values(Or operation against all sources).<br/>Supports partial text search
	Q                    *string           `json:"q,omitempty"`
	Sorts                []Sort            `json:"sorts,omitempty"`
	Page                 *PageRequestModel `json:"page,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Orderhistoryapirequest Orderhistoryapirequest

// NewOrderhistoryapirequest instantiates a new Orderhistoryapirequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderhistoryapirequest() *Orderhistoryapirequest {
	this := Orderhistoryapirequest{}
	return &this
}

// NewOrderhistoryapirequestWithDefaults instantiates a new Orderhistoryapirequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderhistoryapirequestWithDefaults() *Orderhistoryapirequest {
	this := Orderhistoryapirequest{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *Orderhistoryapirequest) GetFilters() Filters {
	if o == nil || IsNil(o.Filters) {
		var ret Filters
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderhistoryapirequest) GetFiltersOk() (*Filters, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *Orderhistoryapirequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given Filters and assigns it to the Filters field.
func (o *Orderhistoryapirequest) SetFilters(v Filters) {
	o.Filters = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *Orderhistoryapirequest) GetSource() []OrderhistoryapirequestSourceInner {
	if o == nil || IsNil(o.Source) {
		var ret []OrderhistoryapirequestSourceInner
		return ret
	}
	return o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderhistoryapirequest) GetSourceOk() ([]OrderhistoryapirequestSourceInner, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *Orderhistoryapirequest) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given []OrderhistoryapirequestSourceInner and assigns it to the Source field.
func (o *Orderhistoryapirequest) SetSource(v []OrderhistoryapirequestSourceInner) {
	o.Source = v
}

// GetQ returns the Q field value if set, zero value otherwise.
func (o *Orderhistoryapirequest) GetQ() string {
	if o == nil || IsNil(o.Q) {
		var ret string
		return ret
	}
	return *o.Q
}

// GetQOk returns a tuple with the Q field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderhistoryapirequest) GetQOk() (*string, bool) {
	if o == nil || IsNil(o.Q) {
		return nil, false
	}
	return o.Q, true
}

// HasQ returns a boolean if a field has been set.
func (o *Orderhistoryapirequest) HasQ() bool {
	if o != nil && !IsNil(o.Q) {
		return true
	}

	return false
}

// SetQ gets a reference to the given string and assigns it to the Q field.
func (o *Orderhistoryapirequest) SetQ(v string) {
	o.Q = &v
}

// GetSorts returns the Sorts field value if set, zero value otherwise.
func (o *Orderhistoryapirequest) GetSorts() []Sort {
	if o == nil || IsNil(o.Sorts) {
		var ret []Sort
		return ret
	}
	return o.Sorts
}

// GetSortsOk returns a tuple with the Sorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderhistoryapirequest) GetSortsOk() ([]Sort, bool) {
	if o == nil || IsNil(o.Sorts) {
		return nil, false
	}
	return o.Sorts, true
}

// HasSorts returns a boolean if a field has been set.
func (o *Orderhistoryapirequest) HasSorts() bool {
	if o != nil && !IsNil(o.Sorts) {
		return true
	}

	return false
}

// SetSorts gets a reference to the given []Sort and assigns it to the Sorts field.
func (o *Orderhistoryapirequest) SetSorts(v []Sort) {
	o.Sorts = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *Orderhistoryapirequest) GetPage() PageRequestModel {
	if o == nil || IsNil(o.Page) {
		var ret PageRequestModel
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Orderhistoryapirequest) GetPageOk() (*PageRequestModel, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *Orderhistoryapirequest) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given PageRequestModel and assigns it to the Page field.
func (o *Orderhistoryapirequest) SetPage(v PageRequestModel) {
	o.Page = &v
}

func (o Orderhistoryapirequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Orderhistoryapirequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Q) {
		toSerialize["q"] = o.Q
	}
	if !IsNil(o.Sorts) {
		toSerialize["sorts"] = o.Sorts
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Orderhistoryapirequest) UnmarshalJSON(data []byte) (err error) {
	varOrderhistoryapirequest := _Orderhistoryapirequest{}

	err = json.Unmarshal(data, &varOrderhistoryapirequest)

	if err != nil {
		return err
	}

	*o = Orderhistoryapirequest(varOrderhistoryapirequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "filters")
		delete(additionalProperties, "source")
		delete(additionalProperties, "q")
		delete(additionalProperties, "sorts")
		delete(additionalProperties, "page")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderhistoryapirequest struct {
	value *Orderhistoryapirequest
	isSet bool
}

func (v NullableOrderhistoryapirequest) Get() *Orderhistoryapirequest {
	return v.value
}

func (v *NullableOrderhistoryapirequest) Set(val *Orderhistoryapirequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderhistoryapirequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderhistoryapirequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderhistoryapirequest(val *Orderhistoryapirequest) *NullableOrderhistoryapirequest {
	return &NullableOrderhistoryapirequest{value: val, isSet: true}
}

func (v NullableOrderhistoryapirequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderhistoryapirequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
