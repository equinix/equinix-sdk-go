/*
Retrieve Orders API

Based on a user's permission, a user may be able to view their own orders or also the orders from all of the users in their organization. These orders can be filtered by product type, order status, location, or date range. Only orders from the past 12 months will be returned.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package orderhistoryv1

import (
	"encoding/json"
)

// checks if the OrderHeader type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderHeader{}

// OrderHeader struct for OrderHeader
type OrderHeader struct {
	// Order number
	OrderNumber *string `json:"orderNumber,omitempty"`
	// List Of Proudcts Ordered in the Order.
	Type        []string               `json:"type,omitempty"`
	OrderStatus *OrderHeaderStatusEnum `json:"orderStatus,omitempty"`
	// Order Created DateTime in ISO Date Format
	CreatedAt           *string              `json:"createdAt,omitempty"`
	Account             *Account             `json:"account,omitempty"`
	OrderingContact     *OrderingContact     `json:"orderingContact,omitempty"`
	NotificationContact *NotificationContact `json:"notificationContact,omitempty"`
	// List of ibxs for the order lines.
	Ibx []string `json:"ibx,omitempty"`
	// List of customer reference numbers for the order lines.
	CustomerReferenceNumbers []string `json:"customerReferenceNumbers,omitempty"`
	Links                    []Link   `json:"links,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _OrderHeader OrderHeader

// NewOrderHeader instantiates a new OrderHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderHeader() *OrderHeader {
	this := OrderHeader{}
	return &this
}

// NewOrderHeaderWithDefaults instantiates a new OrderHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderHeaderWithDefaults() *OrderHeader {
	this := OrderHeader{}
	return &this
}

// GetOrderNumber returns the OrderNumber field value if set, zero value otherwise.
func (o *OrderHeader) GetOrderNumber() string {
	if o == nil || IsNil(o.OrderNumber) {
		var ret string
		return ret
	}
	return *o.OrderNumber
}

// GetOrderNumberOk returns a tuple with the OrderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetOrderNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OrderNumber) {
		return nil, false
	}
	return o.OrderNumber, true
}

// HasOrderNumber returns a boolean if a field has been set.
func (o *OrderHeader) HasOrderNumber() bool {
	if o != nil && !IsNil(o.OrderNumber) {
		return true
	}

	return false
}

// SetOrderNumber gets a reference to the given string and assigns it to the OrderNumber field.
func (o *OrderHeader) SetOrderNumber(v string) {
	o.OrderNumber = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OrderHeader) GetType() []string {
	if o == nil || IsNil(o.Type) {
		var ret []string
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OrderHeader) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given []string and assigns it to the Type field.
func (o *OrderHeader) SetType(v []string) {
	o.Type = v
}

// GetOrderStatus returns the OrderStatus field value if set, zero value otherwise.
func (o *OrderHeader) GetOrderStatus() OrderHeaderStatusEnum {
	if o == nil || IsNil(o.OrderStatus) {
		var ret OrderHeaderStatusEnum
		return ret
	}
	return *o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetOrderStatusOk() (*OrderHeaderStatusEnum, bool) {
	if o == nil || IsNil(o.OrderStatus) {
		return nil, false
	}
	return o.OrderStatus, true
}

// HasOrderStatus returns a boolean if a field has been set.
func (o *OrderHeader) HasOrderStatus() bool {
	if o != nil && !IsNil(o.OrderStatus) {
		return true
	}

	return false
}

// SetOrderStatus gets a reference to the given OrderHeaderStatusEnum and assigns it to the OrderStatus field.
func (o *OrderHeader) SetOrderStatus(v OrderHeaderStatusEnum) {
	o.OrderStatus = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OrderHeader) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OrderHeader) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OrderHeader) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *OrderHeader) GetAccount() Account {
	if o == nil || IsNil(o.Account) {
		var ret Account
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetAccountOk() (*Account, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *OrderHeader) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given Account and assigns it to the Account field.
func (o *OrderHeader) SetAccount(v Account) {
	o.Account = &v
}

// GetOrderingContact returns the OrderingContact field value if set, zero value otherwise.
func (o *OrderHeader) GetOrderingContact() OrderingContact {
	if o == nil || IsNil(o.OrderingContact) {
		var ret OrderingContact
		return ret
	}
	return *o.OrderingContact
}

// GetOrderingContactOk returns a tuple with the OrderingContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetOrderingContactOk() (*OrderingContact, bool) {
	if o == nil || IsNil(o.OrderingContact) {
		return nil, false
	}
	return o.OrderingContact, true
}

// HasOrderingContact returns a boolean if a field has been set.
func (o *OrderHeader) HasOrderingContact() bool {
	if o != nil && !IsNil(o.OrderingContact) {
		return true
	}

	return false
}

// SetOrderingContact gets a reference to the given OrderingContact and assigns it to the OrderingContact field.
func (o *OrderHeader) SetOrderingContact(v OrderingContact) {
	o.OrderingContact = &v
}

// GetNotificationContact returns the NotificationContact field value if set, zero value otherwise.
func (o *OrderHeader) GetNotificationContact() NotificationContact {
	if o == nil || IsNil(o.NotificationContact) {
		var ret NotificationContact
		return ret
	}
	return *o.NotificationContact
}

// GetNotificationContactOk returns a tuple with the NotificationContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetNotificationContactOk() (*NotificationContact, bool) {
	if o == nil || IsNil(o.NotificationContact) {
		return nil, false
	}
	return o.NotificationContact, true
}

// HasNotificationContact returns a boolean if a field has been set.
func (o *OrderHeader) HasNotificationContact() bool {
	if o != nil && !IsNil(o.NotificationContact) {
		return true
	}

	return false
}

// SetNotificationContact gets a reference to the given NotificationContact and assigns it to the NotificationContact field.
func (o *OrderHeader) SetNotificationContact(v NotificationContact) {
	o.NotificationContact = &v
}

// GetIbx returns the Ibx field value if set, zero value otherwise.
func (o *OrderHeader) GetIbx() []string {
	if o == nil || IsNil(o.Ibx) {
		var ret []string
		return ret
	}
	return o.Ibx
}

// GetIbxOk returns a tuple with the Ibx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetIbxOk() ([]string, bool) {
	if o == nil || IsNil(o.Ibx) {
		return nil, false
	}
	return o.Ibx, true
}

// HasIbx returns a boolean if a field has been set.
func (o *OrderHeader) HasIbx() bool {
	if o != nil && !IsNil(o.Ibx) {
		return true
	}

	return false
}

// SetIbx gets a reference to the given []string and assigns it to the Ibx field.
func (o *OrderHeader) SetIbx(v []string) {
	o.Ibx = v
}

// GetCustomerReferenceNumbers returns the CustomerReferenceNumbers field value if set, zero value otherwise.
func (o *OrderHeader) GetCustomerReferenceNumbers() []string {
	if o == nil || IsNil(o.CustomerReferenceNumbers) {
		var ret []string
		return ret
	}
	return o.CustomerReferenceNumbers
}

// GetCustomerReferenceNumbersOk returns a tuple with the CustomerReferenceNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetCustomerReferenceNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomerReferenceNumbers) {
		return nil, false
	}
	return o.CustomerReferenceNumbers, true
}

// HasCustomerReferenceNumbers returns a boolean if a field has been set.
func (o *OrderHeader) HasCustomerReferenceNumbers() bool {
	if o != nil && !IsNil(o.CustomerReferenceNumbers) {
		return true
	}

	return false
}

// SetCustomerReferenceNumbers gets a reference to the given []string and assigns it to the CustomerReferenceNumbers field.
func (o *OrderHeader) SetCustomerReferenceNumbers(v []string) {
	o.CustomerReferenceNumbers = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *OrderHeader) GetLinks() []Link {
	if o == nil || IsNil(o.Links) {
		var ret []Link
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHeader) GetLinksOk() ([]Link, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *OrderHeader) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *OrderHeader) SetLinks(v []Link) {
	o.Links = v
}

func (o OrderHeader) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderNumber) {
		toSerialize["orderNumber"] = o.OrderNumber
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.OrderStatus) {
		toSerialize["orderStatus"] = o.OrderStatus
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.OrderingContact) {
		toSerialize["orderingContact"] = o.OrderingContact
	}
	if !IsNil(o.NotificationContact) {
		toSerialize["notificationContact"] = o.NotificationContact
	}
	if !IsNil(o.Ibx) {
		toSerialize["ibx"] = o.Ibx
	}
	if !IsNil(o.CustomerReferenceNumbers) {
		toSerialize["customerReferenceNumbers"] = o.CustomerReferenceNumbers
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderHeader) UnmarshalJSON(data []byte) (err error) {
	varOrderHeader := _OrderHeader{}

	err = json.Unmarshal(data, &varOrderHeader)

	if err != nil {
		return err
	}

	*o = OrderHeader(varOrderHeader)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "orderNumber")
		delete(additionalProperties, "type")
		delete(additionalProperties, "orderStatus")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "account")
		delete(additionalProperties, "orderingContact")
		delete(additionalProperties, "notificationContact")
		delete(additionalProperties, "ibx")
		delete(additionalProperties, "customerReferenceNumbers")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderHeader struct {
	value *OrderHeader
	isSet bool
}

func (v NullableOrderHeader) Get() *OrderHeader {
	return v.value
}

func (v *NullableOrderHeader) Set(val *OrderHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderHeader(val *OrderHeader) *NullableOrderHeader {
	return &NullableOrderHeader{value: val, isSet: true}
}

func (v NullableOrderHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
