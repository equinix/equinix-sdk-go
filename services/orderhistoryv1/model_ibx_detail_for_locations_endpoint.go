/*
Retrieve Orders API

Based on a user's permission, a user may be able to view their own orders or also the orders from all of the users in their organization. These orders can be filtered by product type, order status, location, or date range. Only orders from the past 12 months will be returned.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package orderhistoryv1

import (
	"encoding/json"
)

// checks if the IbxDetailForLocationsEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IbxDetailForLocationsEndpoint{}

// IbxDetailForLocationsEndpoint struct for IbxDetailForLocationsEndpoint
type IbxDetailForLocationsEndpoint struct {
	// Ibx Code
	Code *string `json:"code,omitempty"`
	// Metro code where ibx is located
	Metro *string `json:"metro,omitempty"`
	// Region where ibx is located
	Region *string `json:"region,omitempty"`
	// Country where ibx is located
	Country *string `json:"country,omitempty"`
	// City where ibx is located
	City *string `json:"city,omitempty"`
	// State where ibx is located
	State *string `json:"state,omitempty"`
	// Address of the ibx
	Address *string `json:"address,omitempty"`
	// Postal code of ibx location
	PostalCode           *string `json:"postalCode,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IbxDetailForLocationsEndpoint IbxDetailForLocationsEndpoint

// NewIbxDetailForLocationsEndpoint instantiates a new IbxDetailForLocationsEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIbxDetailForLocationsEndpoint() *IbxDetailForLocationsEndpoint {
	this := IbxDetailForLocationsEndpoint{}
	return &this
}

// NewIbxDetailForLocationsEndpointWithDefaults instantiates a new IbxDetailForLocationsEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIbxDetailForLocationsEndpointWithDefaults() *IbxDetailForLocationsEndpoint {
	this := IbxDetailForLocationsEndpoint{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *IbxDetailForLocationsEndpoint) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbxDetailForLocationsEndpoint) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *IbxDetailForLocationsEndpoint) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *IbxDetailForLocationsEndpoint) SetCode(v string) {
	o.Code = &v
}

// GetMetro returns the Metro field value if set, zero value otherwise.
func (o *IbxDetailForLocationsEndpoint) GetMetro() string {
	if o == nil || IsNil(o.Metro) {
		var ret string
		return ret
	}
	return *o.Metro
}

// GetMetroOk returns a tuple with the Metro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbxDetailForLocationsEndpoint) GetMetroOk() (*string, bool) {
	if o == nil || IsNil(o.Metro) {
		return nil, false
	}
	return o.Metro, true
}

// HasMetro returns a boolean if a field has been set.
func (o *IbxDetailForLocationsEndpoint) HasMetro() bool {
	if o != nil && !IsNil(o.Metro) {
		return true
	}

	return false
}

// SetMetro gets a reference to the given string and assigns it to the Metro field.
func (o *IbxDetailForLocationsEndpoint) SetMetro(v string) {
	o.Metro = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *IbxDetailForLocationsEndpoint) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbxDetailForLocationsEndpoint) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *IbxDetailForLocationsEndpoint) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *IbxDetailForLocationsEndpoint) SetRegion(v string) {
	o.Region = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *IbxDetailForLocationsEndpoint) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbxDetailForLocationsEndpoint) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *IbxDetailForLocationsEndpoint) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *IbxDetailForLocationsEndpoint) SetCountry(v string) {
	o.Country = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *IbxDetailForLocationsEndpoint) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbxDetailForLocationsEndpoint) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *IbxDetailForLocationsEndpoint) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *IbxDetailForLocationsEndpoint) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *IbxDetailForLocationsEndpoint) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbxDetailForLocationsEndpoint) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *IbxDetailForLocationsEndpoint) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *IbxDetailForLocationsEndpoint) SetState(v string) {
	o.State = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *IbxDetailForLocationsEndpoint) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbxDetailForLocationsEndpoint) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *IbxDetailForLocationsEndpoint) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *IbxDetailForLocationsEndpoint) SetAddress(v string) {
	o.Address = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *IbxDetailForLocationsEndpoint) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbxDetailForLocationsEndpoint) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *IbxDetailForLocationsEndpoint) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *IbxDetailForLocationsEndpoint) SetPostalCode(v string) {
	o.PostalCode = &v
}

func (o IbxDetailForLocationsEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IbxDetailForLocationsEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Metro) {
		toSerialize["metro"] = o.Metro
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IbxDetailForLocationsEndpoint) UnmarshalJSON(data []byte) (err error) {
	varIbxDetailForLocationsEndpoint := _IbxDetailForLocationsEndpoint{}

	err = json.Unmarshal(data, &varIbxDetailForLocationsEndpoint)

	if err != nil {
		return err
	}

	*o = IbxDetailForLocationsEndpoint(varIbxDetailForLocationsEndpoint)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "metro")
		delete(additionalProperties, "region")
		delete(additionalProperties, "country")
		delete(additionalProperties, "city")
		delete(additionalProperties, "state")
		delete(additionalProperties, "address")
		delete(additionalProperties, "postalCode")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIbxDetailForLocationsEndpoint struct {
	value *IbxDetailForLocationsEndpoint
	isSet bool
}

func (v NullableIbxDetailForLocationsEndpoint) Get() *IbxDetailForLocationsEndpoint {
	return v.value
}

func (v *NullableIbxDetailForLocationsEndpoint) Set(val *IbxDetailForLocationsEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableIbxDetailForLocationsEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableIbxDetailForLocationsEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIbxDetailForLocationsEndpoint(val *IbxDetailForLocationsEndpoint) *NullableIbxDetailForLocationsEndpoint {
	return &NullableIbxDetailForLocationsEndpoint{value: val, isSet: true}
}

func (v NullableIbxDetailForLocationsEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIbxDetailForLocationsEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
