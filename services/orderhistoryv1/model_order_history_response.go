/*
Retrieve Orders API

Based on a user's permission, a user may be able to view their own orders or also the orders from all of the users in their organization. These orders can be filtered by product type, order status, location, or date range. Only orders from the past 12 months will be returned.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package orderhistoryv1

import (
	"encoding/json"
)

// checks if the OrderHistoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderHistoryResponse{}

// OrderHistoryResponse struct for OrderHistoryResponse
type OrderHistoryResponse struct {
	Content              []OrderHeader           `json:"content,omitempty"`
	Links                []Link                  `json:"links,omitempty"`
	Page                 *PageDetailsForResponse `json:"page,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrderHistoryResponse OrderHistoryResponse

// NewOrderHistoryResponse instantiates a new OrderHistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderHistoryResponse() *OrderHistoryResponse {
	this := OrderHistoryResponse{}
	return &this
}

// NewOrderHistoryResponseWithDefaults instantiates a new OrderHistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderHistoryResponseWithDefaults() *OrderHistoryResponse {
	this := OrderHistoryResponse{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *OrderHistoryResponse) GetContent() []OrderHeader {
	if o == nil || IsNil(o.Content) {
		var ret []OrderHeader
		return ret
	}
	return o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHistoryResponse) GetContentOk() ([]OrderHeader, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *OrderHistoryResponse) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given []OrderHeader and assigns it to the Content field.
func (o *OrderHistoryResponse) SetContent(v []OrderHeader) {
	o.Content = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *OrderHistoryResponse) GetLinks() []Link {
	if o == nil || IsNil(o.Links) {
		var ret []Link
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHistoryResponse) GetLinksOk() ([]Link, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *OrderHistoryResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *OrderHistoryResponse) SetLinks(v []Link) {
	o.Links = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *OrderHistoryResponse) GetPage() PageDetailsForResponse {
	if o == nil || IsNil(o.Page) {
		var ret PageDetailsForResponse
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderHistoryResponse) GetPageOk() (*PageDetailsForResponse, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *OrderHistoryResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given PageDetailsForResponse and assigns it to the Page field.
func (o *OrderHistoryResponse) SetPage(v PageDetailsForResponse) {
	o.Page = &v
}

func (o OrderHistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderHistoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderHistoryResponse) UnmarshalJSON(data []byte) (err error) {
	varOrderHistoryResponse := _OrderHistoryResponse{}

	err = json.Unmarshal(data, &varOrderHistoryResponse)

	if err != nil {
		return err
	}

	*o = OrderHistoryResponse(varOrderHistoryResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "content")
		delete(additionalProperties, "links")
		delete(additionalProperties, "page")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderHistoryResponse struct {
	value *OrderHistoryResponse
	isSet bool
}

func (v NullableOrderHistoryResponse) Get() *OrderHistoryResponse {
	return v.value
}

func (v *NullableOrderHistoryResponse) Set(val *OrderHistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderHistoryResponse(val *OrderHistoryResponse) *NullableOrderHistoryResponse {
	return &NullableOrderHistoryResponse{value: val, isSet: true}
}

func (v NullableOrderHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
