/*
Retrieve Orders API

Based on a user's permission, a user may be able to view their own orders or also the orders from all of the users in their organization. These orders can be filtered by product type, order status, location, or date range. Only orders from the past 12 months will be returned.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package orderhistoryv1

import (
	"encoding/json"
)

// checks if the PageRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageRequestModel{}

// PageRequestModel struct for PageRequestModel
type PageRequestModel struct {
	// Page number indexed from 0.
	Number *int32 `json:"number,omitempty"`
	// Page Size.
	Size                 *int32 `json:"size,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PageRequestModel PageRequestModel

// NewPageRequestModel instantiates a new PageRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageRequestModel() *PageRequestModel {
	this := PageRequestModel{}
	return &this
}

// NewPageRequestModelWithDefaults instantiates a new PageRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageRequestModelWithDefaults() *PageRequestModel {
	this := PageRequestModel{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *PageRequestModel) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageRequestModel) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *PageRequestModel) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *PageRequestModel) SetNumber(v int32) {
	o.Number = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *PageRequestModel) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageRequestModel) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *PageRequestModel) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *PageRequestModel) SetSize(v int32) {
	o.Size = &v
}

func (o PageRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PageRequestModel) UnmarshalJSON(data []byte) (err error) {
	varPageRequestModel := _PageRequestModel{}

	err = json.Unmarshal(data, &varPageRequestModel)

	if err != nil {
		return err
	}

	*o = PageRequestModel(varPageRequestModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "number")
		delete(additionalProperties, "size")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePageRequestModel struct {
	value *PageRequestModel
	isSet bool
}

func (v NullablePageRequestModel) Get() *PageRequestModel {
	return v.value
}

func (v *NullablePageRequestModel) Set(val *PageRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePageRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePageRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageRequestModel(val *PageRequestModel) *NullablePageRequestModel {
	return &NullablePageRequestModel{value: val, isSet: true}
}

func (v NullablePageRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
