/*
Retrieve Orders API

Based on a user's permission, a user may be able to view their own orders or also the orders from all of the users in their organization. These orders can be filtered by product type, order status, location, or date range. Only orders from the past 12 months will be returned.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package orderhistoryv1

import (
	"encoding/json"
	"fmt"
)

// OrderhistoryapirequestSourceInner the model 'OrderhistoryapirequestSourceInner'
type OrderhistoryapirequestSourceInner string

// List of orderhistoryapirequest_source_inner
const (
	ORDERHISTORYAPIREQUESTSOURCEINNER_ORDER_NUMBER              OrderhistoryapirequestSourceInner = "ORDER_NUMBER"
	ORDERHISTORYAPIREQUESTSOURCEINNER_PO_NUMBER                 OrderhistoryapirequestSourceInner = "PO_NUMBER"
	ORDERHISTORYAPIREQUESTSOURCEINNER_CUSTOMER_REFERENCE_NUMBER OrderhistoryapirequestSourceInner = "CUSTOMER_REFERENCE_NUMBER"
	ORDERHISTORYAPIREQUESTSOURCEINNER_CONTACT_LAST_NAME         OrderhistoryapirequestSourceInner = "CONTACT_LAST_NAME"
	ORDERHISTORYAPIREQUESTSOURCEINNER_SR_NUMBER                 OrderhistoryapirequestSourceInner = "SR_NUMBER"
	ORDERHISTORYAPIREQUESTSOURCEINNER_TROUBLE_TICKET_NUMBER     OrderhistoryapirequestSourceInner = "TROUBLE_TICKET_NUMBER"
	ORDERHISTORYAPIREQUESTSOURCEINNER_WORK_ACTIVITY_NUMBER      OrderhistoryapirequestSourceInner = "WORK_ACTIVITY_NUMBER"
)

// All allowed values of OrderhistoryapirequestSourceInner enum
var AllowedOrderhistoryapirequestSourceInnerEnumValues = []OrderhistoryapirequestSourceInner{
	"ORDER_NUMBER",
	"PO_NUMBER",
	"CUSTOMER_REFERENCE_NUMBER",
	"CONTACT_LAST_NAME",
	"SR_NUMBER",
	"TROUBLE_TICKET_NUMBER",
	"WORK_ACTIVITY_NUMBER",
}

func (v *OrderhistoryapirequestSourceInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderhistoryapirequestSourceInner(value)
	for _, existing := range AllowedOrderhistoryapirequestSourceInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderhistoryapirequestSourceInner", value)
}

// NewOrderhistoryapirequestSourceInnerFromValue returns a pointer to a valid OrderhistoryapirequestSourceInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderhistoryapirequestSourceInnerFromValue(v string) (*OrderhistoryapirequestSourceInner, error) {
	ev := OrderhistoryapirequestSourceInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderhistoryapirequestSourceInner: valid values are %v", v, AllowedOrderhistoryapirequestSourceInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderhistoryapirequestSourceInner) IsValid() bool {
	for _, existing := range AllowedOrderhistoryapirequestSourceInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to orderhistoryapirequest_source_inner value
func (v OrderhistoryapirequestSourceInner) Ptr() *OrderhistoryapirequestSourceInner {
	return &v
}

type NullableOrderhistoryapirequestSourceInner struct {
	value *OrderhistoryapirequestSourceInner
	isSet bool
}

func (v NullableOrderhistoryapirequestSourceInner) Get() *OrderhistoryapirequestSourceInner {
	return v.value
}

func (v *NullableOrderhistoryapirequestSourceInner) Set(val *OrderhistoryapirequestSourceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderhistoryapirequestSourceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderhistoryapirequestSourceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderhistoryapirequestSourceInner(val *OrderhistoryapirequestSourceInner) *NullableOrderhistoryapirequestSourceInner {
	return &NullableOrderhistoryapirequestSourceInner{value: val, isSet: true}
}

func (v NullableOrderhistoryapirequestSourceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderhistoryapirequestSourceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
